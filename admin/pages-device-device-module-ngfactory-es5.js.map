{"version":3,"sources":["webpack:///src/app/pages/device/device-list/add-student-device/add-student-device.component.html","webpack:///src/app/pages/device/device-list/add-student-device/add-student-device.component.ts","webpack:///src/app/pages/device/device-list/device-list.component.html","webpack:///src/app/pages/device/device-list/device-list.component.ts","webpack:///src/app/pages/device/device-list/edit-student-device/edit-student-device.component.html","webpack:///src/app/pages/device/device-list/edit-student-device/edit-student-device.component.ts","webpack:///src/app/pages/device/device-list/student-device/student-device.component.html","webpack:///src/app/pages/device/device-list/student-device/student-device.component.ts","webpack:///src/app/pages/device/device-routing.module.ts","webpack:///src/app/pages/device/device.component.html","webpack:///src/app/pages/device/device.component.ts","webpack:///src/app/pages/device/device.module.ts"],"names":["AddStudentDeviceComponent","fb","commn_","deviceForm","group","device_name","required","model_number","serial_number","version","DeviceListComponent","EditStudentDeviceComponent","StudentDeviceComponent","dialog","data","no","name","id","emi","action","open","title","routes","path","component","children","DeviceRoutingModule","DeviceComponent","DeviceModule"],"mappings":"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","file":"pages-device-device-module-ngfactory-es5.js","sourcesContent":["<form [formGroup]=\"deviceForm\" >\r\n<div class=\"row\">\r\n    <div class=\"col-md-6\">\r\n        <div class=\"form-group\">\r\n            <label>Device Name</label>\r\n            <input type=\"text\" formControlName=\"device_name\" placeholder=\"name\" class=\"form-control\">\r\n            <p class=\"text-danger\" *ngIf=\"deviceForm.get('device_name').touched && deviceForm.get('device_name').hasError('required')\">Device Name is required!</p>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n        <div class=\"form-group\">\r\n            <label>Model Number</label>\r\n            <input type=\"text\" formControlName=\"model_number\" placeholder=\"#4545454\" class=\"form-control\">\r\n            <p class=\"text-danger\" *ngIf=\"deviceForm.get('model_number').touched && deviceForm.get('model_number').hasError('required')\">Model Number is required!</p>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n        <div class=\"form-group\">\r\n            <label>Serial Number</label>\r\n            <input type=\"text\" formControlName=\"serial_number\" placeholder=\"#4545454\" class=\"form-control\">\r\n            <p class=\"text-danger\" *ngIf=\"deviceForm.get('serial_number').touched && deviceForm.get('serial_number').hasError('required')\">Serial Number is required!</p>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n        <div class=\"form-group\">\r\n            <label>Version</label>\r\n            <input type=\"text\" formControlName=\"version\" placeholder=\"6.8.8\" class=\"form-control\">\r\n            <p class=\"text-danger\" *ngIf=\"deviceForm.get('version').touched && deviceForm.get('version').hasError('required')\">Version is required!</p>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-12\">\r\n        <button type=\"submit\" class=\"btn btn-primary\">Save</button>\r\n    </div>\r\n</div>\r\n</form>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { CommonService } from '../../../../_services/common.service';\r\n\r\n@Component({\r\n  selector: 'app-add-student-device',\r\n  templateUrl: './add-student-device.component.html',\r\n  styleUrls: ['./add-student-device.component.css']\r\n})\r\nexport class AddStudentDeviceComponent implements OnInit {\r\n  deviceForm:FormGroup;\r\n  constructor(private fb:FormBuilder,private commn_:CommonService) {\r\n    this.deviceForm=this.fb.group({\r\n    device_name:['',[Validators.required]],\r\n    model_number:['',[Validators.required]],\r\n    serial_number:['',[Validators.required]],\r\n    version:['',[Validators.required]]\r\n    });\r\n   }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n \r\n  //add device\r\n  addDevice()\r\n  {\r\n\r\n  }\r\n}\r\n","<app-student-device></app-student-device>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-device-list',\r\n  templateUrl: './device-list.component.html',\r\n  styleUrls: ['./device-list.component.css']\r\n})\r\nexport class DeviceListComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-md-6\">\r\n        <div class=\"form-group\">\r\n            <label>Device Name</label>\r\n            <input type=\"text\" placeholder=\"name\" class=\"form-control\">\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n        <div class=\"form-group\">\r\n            <label>Model Number</label>\r\n            <input type=\"text\" placeholder=\"#4545454\" class=\"form-control\">\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n        <div class=\"form-group\">\r\n            <label>Serial Number</label>\r\n            <input type=\"text\" placeholder=\"#4545454\" class=\"form-control\">\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n        <div class=\"form-group\">\r\n            <label>Version</label>\r\n            <input type=\"text\" placeholder=\"6.8.8\" class=\"form-control\">\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-12\">\r\n        <button class=\"btn btn-primary\">Update</button>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-edit-student-device',\r\n  templateUrl: './edit-student-device.component.html',\r\n  styleUrls: ['./edit-student-device.component.css']\r\n})\r\nexport class EditStudentDeviceComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"card\">\r\n    <div class=\"card-body\">\r\n      <div class=\"d-block text-right\">\r\n        <button class=\"button btn btn-primary mr-2\">Export CSV</button>\r\n        <button class=\"button btn btn-primary\" (click)=\"addDialog()\"><i class=\"fa fa-plus\"></i>Add Device</button>\r\n      </div>\r\n        <div class=\"table-responsive\">\r\n            <table class=\"table\">\r\n                <tr>\r\n                    <th>#</th>\r\n                    <th>Device Name</th>\r\n                    <th>Model Number</th>\r\n                    <th>Serial Number</th>\r\n                    <th>Version</th>\r\n                    <!-- <th>Status</th> -->\r\n                    <th>Action</th>\r\n                </tr>\r\n                <tr *ngFor=\"let list of data\">\r\n                    <td>{{list.no}}</td>\r\n                    <td>{{list.name}}</td>\r\n                    <td>{{list.id}}</td>\r\n                    <td>{{list.emi}}</td>\r\n                    <td>{{list.version}}</td>\r\n                    <!-- <td><mat-slide-toggle></mat-slide-toggle></td> -->\r\n                    <td>\r\n                        <div ngbDropdown placement=\"bottom\" class=\"d-inline-block\" container=\"body\">\r\n                            <button class=\"btn btn-outline-primary btn-sm\" id=\"dropdownBasic1\" ngbDropdownToggle>\r\n                              Action\r\n                            </button>\r\n                \r\n                            <div *ngIf=\"list.action==0\" ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">                             \r\n                              <button class=\"dropdown-item\" (click)=\"userDetailModal(userDetail)\"><i \r\n                                  class=\"ti-marker-alt \"></i>  Edit</button>\r\n                \r\n                              <button class=\"dropdown-item\" (click)=\"userDeleteModal(userDelete)\"><i class=\"ti-trash\"></i>\r\n                                Reject</button>\r\n                            </div>\r\n                \r\n                            <div *ngIf=\"list.action==1\" ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\r\n                              <button class=\"dropdown-item\" (click)=\"editDialog()\"><i class=\"ti-marker-alt\"></i> Edit</button>\r\n                              <!-- <a class=\"dropdown-item\" ><i class=\"ti-eye\"></i> View </a>                 -->\r\n                              <button class=\"dropdown-item\" (click)=\"addDialog(userDelete)\"><i class=\"ti-trash\"></i>\r\n                                Delete</button>\r\n                            </div>\r\n                          </div>\r\n                    </td>\r\n                </tr>\r\n               \r\n            </table>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from \"@angular/core\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { AddStudentDeviceComponent } from \"../add-student-device/add-student-device.component\";\r\nimport { EditStudentDeviceComponent } from \"../edit-student-device/edit-student-device.component\";\r\n\r\n@Component({\r\n  selector: \"app-student-device\",\r\n  templateUrl: \"./student-device.component.html\",\r\n  styleUrls: [\"./student-device.component.css\"],\r\n})\r\nexport class StudentDeviceComponent implements OnInit {\r\n  constructor(public dialog: MatDialog) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  data = [\r\n    {\r\n      no:1,\r\n      name:\"Apple Watch\",\r\n      id:\"A5123\",\r\n      emi:\"FSW4545FEDSE\",\r\n      version:\"6.8.8\",\r\n      action:\"1\"\r\n    }\r\n  ];\r\n  \r\n    addDialog() {\r\n      this.dialog.open(AddStudentDeviceComponent);\r\n    }\r\n    editDialog() {\r\n      this.dialog.open(EditStudentDeviceComponent);\r\n    }\r\n \r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DeviceListComponent } from './device-list/device-list.component';\r\nimport { DeviceComponent } from './device.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'',\r\n    component:DeviceComponent,\r\n    children:[\r\n      {\r\n        path:'devicelist',\r\n        component:DeviceListComponent,\r\n        data:{\r\n          title:\"Devices\"\r\n        }\r\n      }\r\n    ]\r\n\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class DeviceRoutingModule { }\r\n","<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-device',\r\n  templateUrl: './device.component.html',\r\n  styleUrls: ['./device.component.css']\r\n})\r\nexport class DeviceComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport { DeviceRoutingModule } from './device-routing.module';\r\nimport { DeviceComponent } from './device.component';\r\nimport { DeviceListComponent } from './device-list/device-list.component';\r\nimport { StudentDeviceComponent } from './device-list/student-device/student-device.component';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AddStudentDeviceComponent } from './device-list/add-student-device/add-student-device.component';\r\nimport { EditStudentDeviceComponent } from './device-list/edit-student-device/edit-student-device.component';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n@NgModule({\r\n  declarations: [DeviceComponent, DeviceListComponent, StudentDeviceComponent, AddStudentDeviceComponent, EditStudentDeviceComponent],\r\n  imports: [\r\n    CommonModule,\r\n    DeviceRoutingModule,\r\n    MatTabsModule,\r\n    MatSlideToggleModule,\r\n    NgbModule,\r\n    MatDialogModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  entryComponents: [AddStudentDeviceComponent,EditStudentDeviceComponent],\r\n})\r\nexport class DeviceModule { }\r\n"]}
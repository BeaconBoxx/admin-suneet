{"version":3,"sources":["webpack:///src/app/pages/cms/about/about.component.html","webpack:///src/app/pages/cms/about/about.component.ts","webpack:///src/app/pages/cms/cms-routing.module.ts","webpack:///src/app/pages/cms/cms.component.html","webpack:///src/app/pages/cms/cms.component.ts","webpack:///src/app/pages/cms/cms.module.ts","webpack:///src/app/pages/cms/contact/contact.component.html","webpack:///src/app/pages/cms/contact/contact.component.ts","webpack:///src/app/pages/cms/faq/faq.component.html","webpack:///src/app/pages/cms/faq/faq.component.ts","webpack:///src/app/pages/cms/legal/legal.component.html","webpack:///src/app/pages/cms/legal/legal.component.ts","webpack:///src/app/pages/cms/privacy/privacy.component.html","webpack:///src/app/pages/cms/privacy/privacy.component.ts"],"names":["AboutComponent","http","toastr","getCms","get","subscribe","res","code","about","data","params","post","success","message","title","routes","path","component","children","CmsRoutingModule","CmsComponent","CmsModule","ContactComponent","route","_route","formBuilder","submitted","errorHandling","control","error","contactForm","controls","hasError","group","email","required","contact","minLength","maxLength","address","getData","setValue","valid","body","value","console","log","fire","event","charCode","which","keyCode","formatted_address","e","ref","length","preventDefault","FaqComponent","Srvc","noti","Faqcheck","specification","array","GetFaq","includes","setSpecifications","IdData","push","newSpecifiaction","i","removeAt","question","answer","id","clear","forEach","v","markAllAsTouched","item","formArray","x","setControl","LegalComponent","legal","PrivacyComponent","privacy"],"mappings":"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","file":"pages-cms-cms-module-ngfactory-es5.js","sourcesContent":["<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">               \r\n                <quill-editor [(ngModel)]=\"about\" [style]=\"{height: '300px',display: 'inline-block'}\" class=\"w-100\"></quill-editor>\r\n               <div class=\"d-block\">\r\n                   <button class=\"btn btn-primary mt-3\" (click)=\"update()\">Save</button>\r\n               </div> \r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { CommonService } from '../../../_services/common.service';\r\n\r\n@Component({\r\n  selector: 'app-about',\r\n  templateUrl: './about.component.html',\r\n  styleUrls: ['./about.component.css']\r\n})\r\nexport class AboutComponent implements OnInit {\r\n\r\n  about:any;\r\n\r\n  constructor(private http: CommonService, private toastr:ToastrService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getCms();\r\n  }\r\n\r\n  getCms(){\r\n    this.http.get('cms/get-cms/').subscribe((res:any) => {\r\n      if(res.code == 200){\r\n        this.about=res.data.about;\r\n      }\r\n    })\r\n  }\r\n\r\n  update(){\r\n     var params={\r\n       'about':this.about\r\n     }\r\n     this.http.post('cms/create-update-cms/',params).subscribe((res: any) => {\r\n        if(res.code == 200){\r\n          this.toastr.success(res.message,'Success');\r\n          this.getCms();\r\n        }\r\n     })\r\n  }\r\n\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { AboutComponent } from \"./about/about.component\";\r\nimport { CmsComponent } from \"./cms.component\";\r\nimport { ContactComponent } from \"./contact/contact.component\";\r\nimport { FaqComponent } from \"./faq/faq.component\";\r\nimport { LegalComponent } from \"./legal/legal.component\";\r\nimport { PrivacyComponent } from \"./privacy/privacy.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: CmsComponent,\r\n    children: [\r\n      {\r\n        path: \"about\",\r\n        component: AboutComponent,\r\n        data: {\r\n          title: \"About\",\r\n        },\r\n      },\r\n      {\r\n        path: \"legal\",\r\n        component: LegalComponent,\r\n        data: {\r\n          title: \"Terms and Condition\",\r\n        },\r\n      },\r\n      {\r\n        path: \"privacy\",\r\n        component: PrivacyComponent,\r\n        data: {\r\n          title: \"Privacy\",\r\n        },\r\n      },\r\n      {\r\n        path: \"contact\",\r\n        component: ContactComponent,\r\n        data: {\r\n          title: \"Contact\",\r\n        },\r\n      },\r\n      {\r\n        path: \"faq\",\r\n        component: FaqComponent,\r\n        data: {\r\n          title: \"Faq\",\r\n        },\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class CmsRoutingModule {}\r\n","<mat-tab-group mat-align-tabs=\"start\">\r\n    <mat-tab label=\"About\"><app-about  ></app-about></mat-tab>\r\n    <mat-tab label=\"Privacy\"><app-privacy ></app-privacy></mat-tab>\r\n    <mat-tab label=\"Contact\"><app-contact ></app-contact></mat-tab>\r\n    <mat-tab label=\"Legal\"><app-legal ></app-legal></mat-tab>\r\n    <mat-tab label=\"FAQ\"><app-faq ></app-faq></mat-tab>\r\n  </mat-tab-group>\r\n<router-outlet></router-outlet>\r\n\r\n  ","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-cms',\r\n  templateUrl: './cms.component.html',\r\n  styleUrls: ['./cms.component.css']\r\n})\r\nexport class CmsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport { CmsRoutingModule } from './cms-routing.module';\r\nimport { CmsComponent } from './cms.component';\r\nimport { AboutComponent } from './about/about.component';\r\nimport { LegalComponent } from './legal/legal.component';\r\nimport { PrivacyComponent } from './privacy/privacy.component';\r\nimport { FaqComponent } from './faq/faq.component';\r\nimport { ContactComponent } from './contact/contact.component';\r\nimport { QuillModule } from 'ngx-quill';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatError ,MatFormField, MatFormFieldModule} from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\n\r\n@NgModule({\r\n  declarations: [CmsComponent, AboutComponent, LegalComponent, PrivacyComponent, FaqComponent, ContactComponent],\r\n  imports: [\r\n    CommonModule,\r\n    CmsRoutingModule,\r\n    QuillModule.forRoot(),\r\n    MatTabsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule\r\n\r\n  ]\r\n})\r\nexport class CmsModule { }\r\n","<!-- .row -->\r\n<div class=\"row\">\r\n  <div class=\"col-sm-12\">\r\n    <div class=\"card card-body\">\r\n      <form class=\"form-horizontal m-t-30\">\r\n        <div>\r\n          <form [formGroup]=\"contactForm\">\r\n\r\n            <div class=\"form-group\">\r\n              <label for=\"example-email\">Email</label>\r\n              <input #email (keydown.space)=\"doSomething($event ,email.value)\" formControlName=\"email\" type=\"email\"\r\n                id=\"example-email\" name=\"example-email\" class=\"form-control\" placeholder=\"Email\">\r\n              <mat-error *ngIf=\"contactForm.controls['email'].touched && contactForm.controls['email'].invalid\"\r\n                class=\"text-danger d-inline-block pt-1\">\r\n                *Please enter valid email\r\n              </mat-error>\r\n              <p class=\"text-danger\" *ngIf=\"submitted && errorHandling('email', 'required')\">\r\n                *Email is required!\r\n              </p>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"example-email\">Contact</label>\r\n              <input (keypress)=\"phoneNoInput($event)\" formControlName=\"contact\" type=\"text\" id=\"contact\"\r\n                name=\"example-email\" class=\"form-control\" placeholder=\"Contact No\">\r\n              <mat-error *ngIf=\"contactForm.controls['contact'].touched && contactForm.controls['contact'].invalid\"\r\n                class=\"text-danger d-inline-block pt-1\">\r\n                *Please enter valid Contact No\r\n              </mat-error>\r\n              <p class=\"text-danger\" *ngIf=\"submitted && errorHandling('contact', 'required')\">\r\n                *Contact No. is required!\r\n              </p>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label>Address</label>\r\n              <input #address (keydown.space)=\"doSomething($event ,address.value)\" formControlName=\"address\"\r\n                ngx-google-places-autocomplete (onAddressChange)=\"AddressChange($event)\" class=\"form-control\"\r\n                rows=\"5\">\r\n              <mat-error *ngIf=\"contactForm.controls['address'].touched && contactForm.controls['address'].invalid\"\r\n                class=\"text-danger d-inline-block pt-1\">\r\n                *Please enter valid address\r\n              </mat-error>\r\n              <p class=\"text-danger\" *ngIf=\"submitted && errorHandling('address', 'required')\">\r\n                *Address is required!\r\n              </p>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <button (click)=\"update()\" class=\"btn btn-primary\">Save</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- /.row -->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router, Routes } from \"@angular/router\";\r\nimport { NgForm, FormGroup, FormControl } from \"@angular/forms\";\r\nimport { FormBuilder, Validators } from \"@angular/forms\";\r\nimport Swal from \"sweetalert2\";\r\nimport { CommonService } from '../../../_services/common.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-contact',\r\n  templateUrl: './contact.component.html',\r\n  styleUrls: ['./contact.component.css']\r\n})\r\nexport class ContactComponent implements OnInit {\r\n\r\n  contactForm: FormGroup;\r\n  contact: any;\r\n  email:any;\r\n  address:any;\r\n  submitted: boolean = false;\r\n  ContactFlag: any;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private _route: Router,\r\n    private http: CommonService,\r\n    private formBuilder: FormBuilder,\r\n    private toastr:ToastrService\r\n  ) {\r\n    this.contactForm = formBuilder.group({\r\n      email: [\"\", [Validators.required, Validators.email]],\r\n      contact: [\"\",[Validators.required,Validators.minLength(8),Validators.maxLength(14)]],\r\n      address: [\"\", [Validators.required, Validators.minLength(3), Validators.maxLength(550)]]\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {\r\n    this.http.get('cms/get-cms/').subscribe((res: any) => {\r\n      if (res.code == 200) {\r\n        this.email = res.data.email;\r\n        this.contact = res.data.contact;\r\n        this.address = res.data.address;\r\n        this.contactForm.controls[\"contact\"].setValue(this.contact);\r\n        this.contactForm.controls[\"email\"].setValue(this.email);\r\n        this.contactForm.controls[\"address\"].setValue(this.address);\r\n      }\r\n    });\r\n  }\r\n\r\n  update() {\r\n    this.submitted = true;\r\n    if (this.contactForm.valid) {\r\n      const body = {\r\n          email: this.contactForm.controls[\"email\"].value,\r\n          contact: this.contactForm.controls[\"contact\"].value,\r\n          address: this.address,\r\n      };\r\n      if (!this.address){\r\n        body.address = this.contactForm.controls[\"address\"].value\r\n      }\r\n      console.log(body);\r\n      // return\r\n      this.http.post('cms/create-update-cms/',body).subscribe((res: any) => {\r\n        if (res.code == 200) {\r\n          this.submitted = false;\r\n          this.toastr.success(\"Details updated successfully\");\r\n          // this.toastr.success(res.message,'Success');\r\n          this.getData();\r\n          // this.Srvc.searchdata();\r\n        } else {\r\n          Swal.fire(\"Oops\", res.message, \"error\");\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  phoneNoInput(event) {\r\n    const charCode = event.which ? event.which : event.keyCode;\r\n    if ((charCode >= 48 && charCode <= 57) || charCode == 43) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  //Address AutoComplete\r\n  public AddressChange(address: any) {\r\n    this.address = address.formatted_address;\r\n    // this.lat = address.geometry.location.lat();\r\n    // this.lng = address.geometry.location.lng();\r\n  }\r\n\r\n  public errorHandling = (control: string, error: string) => {\r\n    return this.contactForm.controls[control].hasError(error);\r\n  };\r\n\r\n  doSomething(e, ref) {\r\n    if (!ref.length) {\r\n      e.preventDefault();\r\n    }\r\n  }\r\n\r\n}\r\n","<!-- <div class=\"card\">\r\n    <div class=\"card-body\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12\">\r\n                <div class=\"card card-body\">\r\n                    <form class=\"form-horizontal\">\r\n                        <div class=\"bg-light p-3 mb-3\">\r\n                            <div class=\"form-group\">\r\n                                <input type=\"text\" id=\"que\" name=\"que\" class=\"form-control\" placeholder=\"Quetions\">\r\n                            </div>\r\n                            <div class=\"\">\r\n                                <textarea class=\"form-control\" rows=\"3\" placeholder=\"Add Answer here\"></textarea>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"showInputField\"></div>\r\n                        <div class=\"form-group\">\r\n                            <button type=\"button\" (click)=\"add()\" class=\"btn btn-primary\"><i\r\n                                    class=\"mdi mdi-plus\"></i></button>\r\n                        </div>\r\n\r\n                        <button class=\"btn btn-primary\">Save</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div> -->\r\n\r\n\r\n\r\n<div class=\"card-body\">\r\n    <form [formGroup]=\"Faqcheck\">\r\n      <div class=\"row\">\r\n        <div class=\"col-12\">\r\n          <table class=\"table table-bordered\" formArrayName=\"specification\">\r\n            <!-- <tr>\r\n              <th width=\"20%\">\r\n                <div class=\"input_button input_button2\">\r\n                  <button type=\"button\" (click)=\"addNewSpecification()\" class=\"btn btn-primary\">\r\n                    Add More\r\n                  </button>\r\n                </div>\r\n              </th>\r\n            </tr> -->\r\n            <tr *ngFor=\"let quantity of specification().controls; let i = index\" [formGroupName]=\"i\">\r\n              <td style=\"width: 40%\">\r\n                <div class=\"row col-12 form-group\">\r\n                  <label> Question:</label>\r\n                  <textarea type=\"text\" class=\"form-control\" min=\"0\" formControlName=\"question\" placeholder=\"Enter question\"></textarea>\r\n                <span class=\"error\" *ngIf=\"quantity.get('question').hasError('required') && quantity.get('question').touched\">\r\n                      Please enter question!\r\n                  </span>\r\n                </div>\r\n               </td>\r\n              <td style=\"width: 40%\">\r\n                <div class=\"row col-12 form-group \">\r\n                  <label>Answer:</label>\r\n                  <textarea class=\"form-control\" type=\"text\" min=\"0\" formControlName=\"answer\" placeholder=\"Enter answer\"></textarea>\r\n                <span class=\"error\" *ngIf=\"quantity.get('answer').hasError('required') && quantity.get('answer').touched\">\r\n                    Please enter answer!\r\n                  </span>\r\n                </div>\r\n              </td>\r\n         <td style=\" vertical-align: middle\">\r\n                <button class=\"btn btn-primary\" (click)=\"removeSpecification(i)\">\r\n                  Remove\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          </table>\r\n    <button class=\"btn btn-primary\" (click)=\"saveFaq()\">Save</button>&nbsp;&nbsp;\r\n    <button type=\"button\" (click)=\"addNewSpecification()\" class=\"btn btn-info\">\r\n      {{IdData?'Add More':\"Add faq's\"}}\r\n    </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>","// import { Component, OnInit } from '@angular/core';\r\n\r\n// @Component({\r\n//   selector: 'app-faq',\r\n//   templateUrl: './faq.component.html',\r\n//   styleUrls: ['./faq.component.css']\r\n// })\r\n// export class FaqComponent implements OnInit {\r\n\r\n//   constructor() { }\r\n\r\n//   ngOnInit(): void {\r\n//   }\r\n//   add(){ \r\n//     let row = document.createElement('div');   \r\n//       row.className = 'bg-light p-3 mb-3'; \r\n//       row.innerHTML = ` \r\n//       <div class=\"form-group\">        \r\n//       <input type=\"text\" class=\"form-control\" placeholder=\"Add Quetions\">\r\n//       </div>\r\n//       <div class=\"\">      \r\n//       <textarea class=\"form-control\" rows=\"3\" placeholder=\"Add Answer here\"></textarea>\r\n//       </div>\r\n//       `; \r\n//       document.querySelector('.showInputField').appendChild(row); \r\n//   } \r\n// }\r\n\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, FormArray, FormBuilder, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { CommonService } from '../../../_services/common.service';\r\n\r\n@Component({\r\n  selector: 'app-faq',\r\n  templateUrl: './faq.component.html',\r\n  styleUrls: ['./faq.component.css']\r\n})\r\nexport class FaqComponent implements OnInit {\r\n  Faqcheck:FormGroup;\r\n  termscond: any;\r\n  IdData: any;\r\n  \r\n  constructor(private Srvc:CommonService,private formBuilder:FormBuilder,private noti:ToastrService) \r\n  {\r\n\r\n  this.Faqcheck = this.formBuilder.group({\r\n    specification: this.formBuilder.array([], [Validators.required]),\r\n  })\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.GetFaq()\r\n  }\r\n  GetFaq(){ \r\n      this.Srvc.get(`cms/get-faq/`).subscribe((res:any)=>\r\n      {\r\n        if([200,201].includes(res.code)){\r\n          this.setSpecifications(res.data)\r\n          this.IdData = res?.data\r\n        }\r\n      })\r\n  } \r\n\r\n  addNewSpecification() {\r\n   \r\n    this.specification().push(this.newSpecifiaction())\r\n  }\r\n  removeSpecification(i: number) {\r\n    this.specification().removeAt(i);\r\n  }\r\nnewSpecifiaction(): FormGroup {\r\n    return this.formBuilder.group({\r\n      question: new FormControl('', [Validators.required]),\r\n      answer: new FormControl('', [Validators.required]),\r\n      id: new FormControl('')\r\n    })\r\n  }\r\n specification(): FormArray {\r\n    return this.Faqcheck.get('specification') as FormArray;\r\n  }\r\nsaveFaq()\r\n\r\n  {\r\n    this.noti.clear()\r\n    this.Faqcheck.controls['specification'].value.forEach(v => (v.id==\"\")?delete v.id:'')\r\n \r\n    if(this.Faqcheck.valid && this.Faqcheck.controls['specification'].value.length>0)\r\n    {\r\n      this.Srvc.post(`cms/get-create-update-delete-faq/`,this.Faqcheck.get('specification').value).subscribe((res:any)=>\r\n      {\r\n        if(res.code == 200)\r\n        {\r\n         this.noti.success(\"Faq's updated successfully\",'Success')\r\n         \r\n        }\r\n      })\r\n    }else{\r\n      this.Faqcheck.markAllAsTouched()\r\n    }\r\n \r\n  }\r\n\r\n  setSpecifications(item) {\r\n    const formArray = new FormArray([]);\r\n    for (let x of item) {\r\n      console.log(x)\r\n      formArray.push(this.formBuilder.group({\r\n        question: [x.question,[Validators.required]],\r\n        answer: [x.answer,[Validators.required]],\r\n        id:x.id\r\n      }));\r\n    }\r\n    this.Faqcheck.setControl('specification',formArray)\r\n  }\r\n}","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n               \r\n                <quill-editor [(ngModel)]=\"legal\" [style]=\"{height: '300px',display: 'inline-block'}\" class=\"w-100\"></quill-editor>\r\n\r\n               <div class=\"d-block\">\r\n                   <button class=\"btn btn-primary mt-3\" (click)=\"update()\">Save</button>\r\n               </div> \r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { CommonService } from '../../../_services/common.service';\r\n\r\n@Component({\r\n  selector: 'app-legal',\r\n  templateUrl: './legal.component.html',\r\n  styleUrls: ['./legal.component.css']\r\n})\r\nexport class LegalComponent implements OnInit {\r\n\r\n  legal:any;\r\n\r\n  constructor(private http: CommonService, private toastr:ToastrService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getCms();\r\n  }\r\n\r\n  getCms(){\r\n    this.http.get('cms/get-cms/').subscribe((res:any) => {\r\n      if(res.code == 200){\r\n        this.legal=res.data.legal;\r\n      }\r\n    })\r\n  }\r\n\r\n  update(){\r\n     var params={\r\n       'legal':this.legal\r\n     }\r\n     this.http.post('cms/create-update-cms/',params).subscribe((res: any) => {\r\n        if(res.code == 200){\r\n          this.toastr.success(res.message,'Success');\r\n          this.getCms();\r\n        }\r\n     })\r\n  }\r\n\r\n}\r\n\r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n               \r\n                <quill-editor [(ngModel)]=\"privacy\" [style]=\"{height: '300px',display: 'inline-block'}\" class=\"w-100\"></quill-editor>\r\n\r\n               <div class=\"d-block\">\r\n                   <button class=\"btn btn-primary mt-3\" (click)=\"update()\">Save</button>\r\n               </div> \r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { CommonService } from '../../../_services/common.service';\r\n\r\n@Component({\r\n  selector: 'app-privacy',\r\n  templateUrl: './privacy.component.html',\r\n  styleUrls: ['./privacy.component.css']\r\n})\r\nexport class PrivacyComponent implements OnInit {\r\n\r\n  privacy:any;\r\n\r\n  constructor(private http: CommonService, private toastr:ToastrService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getCms();\r\n  }\r\n\r\n  getCms(){\r\n    this.http.get('cms/get-cms/').subscribe((res:any) => {\r\n      if(res.code == 200){\r\n        this.privacy=res.data.privacy;\r\n      }\r\n    })\r\n  }\r\n\r\n  update(){\r\n     var params={\r\n       'privacy':this.privacy\r\n     }\r\n     this.http.post('cms/create-update-cms/',params).subscribe((res: any) => {\r\n        if(res.code == 200){\r\n          this.toastr.success(res.message,'Success');\r\n          this.getCms();\r\n        }\r\n     })\r\n  }\r\n\r\n}\r\n\r\n"]}
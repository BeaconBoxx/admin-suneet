{"version":3,"sources":["webpack:///src/app/pages/setting/profile/profile.component.html","webpack:///src/app/pages/setting/profile/profile.component.ts","webpack:///src/app/pages/setting/setting-routing.module.ts","webpack:///src/app/pages/setting/setting.component.html","webpack:///src/app/pages/setting/setting.component.ts","webpack:///src/app/pages/setting/setting.module.ts"],"names":["ProfileComponent","commn_","fb","toastr","customvalidator","active","lati","zoom","profileForm","group","first_name","required","maxLength","minLength","last_name","phone_no","email","pattern","address","cnfaddress","validator","passwordMatchValidator","passwordForm","current_password","new_password","cnfnew_password","getProfile","get","subscribe","res","console","log","items","data","latitude","longitude","patchValue","disable","body","value","trim","imageId","valid","put","code","imageFlag","next","success","message","timeOut","error","markAllAsTouched","e","files","target","size","Pic","formdata","FormData","append","post","id","update","formatted_address","geometry","location","lat","lng","event","charCode","which","keyCode","routes","path","component","children","SettingRoutingModule","SettingComponent","SettingModule"],"mappings":"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","file":"pages-setting-setting-module-ngfactory-es5.js","sourcesContent":["<div class=\"row\">\r\n  <!-- Column -->\r\n  <div class=\"col-lg-4 col-xlg-3 col-md-5\">\r\n    <div class=\"card\">\r\n      <div class=\"card-body\">\r\n        <div class=\"m-t-30 text-center\">\r\n          <img [src]=\"items?.image?.media_file_url\" class=\"img-circle\" width=\"150\" height=\"150\" />\r\n          <h4 class=\"card-title m-t-10\">{{items?.first_name}} {{items?.last_name}}</h4>\r\n          <h6 class=\"card-subtitle\">Admin</h6>\r\n        </div>\r\n        <div class=\"upload-btn-wrapper\">\r\n          <button class=\"btn-upload\"><i class=\"mdi mdi-pencil\"></i></button>\r\n          <input type=\"file\" (change)=\"onImageSelect($event)\" accept=\"image/jpeg\" name=\"myfile\" />\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <hr>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <small class=\"text-muted\">Email address </small>\r\n        <h6>{{items?.email}}</h6>\r\n        <small class=\"text-muted p-t-30 db\">Phone</small>\r\n        <h6>{{items?.country_code}} {{items?.phone_no}}</h6>\r\n        <small class=\"text-muted p-t-30 db\">Address</small>\r\n        <h6>{{items?.address}}</h6>\r\n        <div>\r\n          <agm-map [latitude]=\"lati\" [longitude]=\"long\" [zoom]=\"zoom\">\r\n            <agm-marker [latitude]=\"lati\" [agmFitBounds]=\"true\" [longitude]=\"long\"></agm-marker>\r\n          </agm-map>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!-- Column -->\r\n  <!-- Column -->\r\n  <div class=\"col-lg-8 col-xlg-9 col-md-7\">\r\n    <div class=\"card p-2\">\r\n\r\n\r\n      <ul ngbNav #nav=\"ngbNav\" [(activeId)]=\"active\" class=\"nav-tabs\">\r\n\r\n        <li [ngbNavItem]=\"1\">\r\n          <a ngbNavLink>Profile</a>\r\n          <ng-template ngbNavContent>\r\n            <div class=\"card-body\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-3 col-xs-6 b-r\"> <strong>Full Name</strong>\r\n                  <br>\r\n                  <p class=\"text-muted\">{{items?.first_name}} {{items?.last_name}}</p>\r\n                </div>\r\n                <div class=\"col-md-3 col-xs-6 b-r\"> <strong>Mobile</strong>\r\n                  <br>\r\n                  <p class=\"text-muted\">({{items?.country_code}}) {{items?.phone_no}}</p>\r\n                </div>\r\n                <div class=\"col-md-3 col-xs-6 b-r\"> <strong>Email</strong>\r\n                  <br>\r\n                  <p class=\"text-muted\">{{items?.email}}</p>\r\n                </div>\r\n                <div class=\"col-md-3 col-xs-6\"> <strong>Location</strong>\r\n                  <br>\r\n                  <p class=\"text-muted\">{{items?.address}}</p>\r\n                </div>\r\n              </div>\r\n              <!-- <hr>\r\n                        <p class=\"m-t-30\">Donec pede justo, fringilla vel, aliquet nec, vulputate eget, arcu. In enim justo, rhoncus ut, imperdiet a, venenatis vitae, justo. Nullam dictum felis eu pede mollis pretium. Integer tincidunt.Cras dapibus. Vivamus elementum semper nisi. Aenean vulputate eleifend tellus. Aenean leo ligula, porttitor eu, consequat vitae, eleifend ac, enim.</p>\r\n                        <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries </p> -->\r\n            </div>\r\n          </ng-template>\r\n        </li>\r\n        <li [ngbNavItem]=\"2\">\r\n          <a ngbNavLink>Settings</a>\r\n          <ng-template ngbNavContent>\r\n            <div class=\"card-body\">\r\n              <form class=\"form-horizontal form-material\" [formGroup]=\"profileForm\">\r\n                <div class=\"form-group\">\r\n                  <label class=\"col-md-12\">First Name</label>\r\n                  <div class=\"col-md-12\">\r\n                    <input type=\"text\" (keypress)=\"alphabate($event)\" formControlName=\"first_name\"\r\n                      placeholder=\"Johnathan\" class=\"form-control form-control-line\">\r\n                    <p class=\"text-danger\"\r\n                      *ngIf=\"profileForm.controls['first_name'].touched && profileForm.controls['first_name'].hasError('maxlength')\"\r\n                      class=\"text-danger d-inline-block pt-1\">\r\n                      *Must have at most 10 character!\r\n                    </p>\r\n                    <p class=\"text-danger\"\r\n                      *ngIf=\"profileForm.controls['first_name'].touched && profileForm.controls['first_name'].hasError('minlength')\"\r\n                      class=\"text-danger d-inline-block pt-1\">\r\n                      *Must have at least 3 character!\r\n                    </p>\r\n                    <p class=\"text-danger\"\r\n                      *ngIf=\"profileForm.controls['first_name'].touched && profileForm.controls['first_name'].hasError('required')\">\r\n                      *First Name is required!\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <label class=\"col-md-12\">Last Name</label>\r\n                  <div class=\"col-md-12\">\r\n                    <input type=\"text\" (keypress)=\"alphabate($event)\" formControlName=\"last_name\" placeholder=\"Doe\"\r\n                      class=\"form-control form-control-line\">\r\n                    <p class=\"text-danger\"\r\n                      *ngIf=\"profileForm.controls['last_name'].touched && profileForm.controls['last_name'].hasError('maxlength')\"\r\n                      class=\"text-danger d-inline-block pt-1\">\r\n                      *Must have at most 10 character!\r\n                    </p>\r\n                    <p class=\"text-danger\"\r\n                      *ngIf=\"profileForm.controls['last_name'].touched && profileForm.controls['last_name'].hasError('minlength')\"\r\n                      class=\"text-danger d-inline-block pt-1\">\r\n                      *Must have at least 3 character!\r\n                    </p>\r\n                    <p class=\"text-danger\"\r\n                      *ngIf=\"profileForm.controls['last_name'].touched && profileForm.controls['last_name'].hasError('required')\">\r\n                      *Last Name is required!\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <label for=\"example-email\" class=\"col-md-12\">Email</label>\r\n                  <div class=\"col-md-12\">\r\n                    <input type=\"email\" formControlName=\"email\" placeholder=\"johnathan@admin.com\"\r\n                      class=\"form-control form-control-line\" name=\"example-email\" id=\"example-email\">\r\n                    <p class=\"text-danger\"\r\n                      *ngIf=\"profileForm.controls['email'].touched && profileForm.controls['email'].hasError('pattern')\"\r\n                      class=\"text-danger d-inline-block pt-1\">\r\n                      *Email invalid!\r\n                    </p>\r\n                    <p class=\"text-danger\"\r\n                      *ngIf=\"profileForm.controls['email'].touched && profileForm.controls['email'].hasError('required')\">\r\n                      *Email is required!\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <label class=\"col-md-12\">Address</label>\r\n                  <div class=\"col-md-12\">\r\n                    <input type=\"text\" formControlName=\"address\" ngx-google-places-autocomplete #placesRef=\"ngx-places\"\r\n                      #address class=\"form-control form-control-line\" (onAddressChange)=\"AddressChange($event)\">\r\n                    <p class=\"text-danger\"\r\n                      *ngIf=\"profileForm.controls['address'].touched && profileForm.controls['address'].hasError('required')\">\r\n                      *Address is required!\r\n                    </p>\r\n                    <p class=\"text-danger\"\r\n                      *ngIf=\"profileForm.controls['address'].touched && profileForm.get('cnfaddress').hasError('passwordMismatch') && !(profileForm.controls['address'].hasError('required'))\">\r\n                      *Please Select From Suggestion!\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <label class=\"col-md-12\">Phone No</label>\r\n                  <div class=\"col-md-12\">\r\n                    <input type=\"text\" (keypress)=\"phoneNoInput($event)\" formControlName=\"phone_no\"\r\n                      placeholder=\"123 456 7890\" class=\"form-control form-control-line\">\r\n                    <p class=\"text-danger\"\r\n                      *ngIf=\"profileForm.controls['phone_no'].touched && profileForm.controls['phone_no'].hasError('maxlength')\"\r\n                      class=\"text-danger d-inline-block pt-1\">\r\n                      *Must have at most 15 character!\r\n                    </p>\r\n                    <p class=\"text-danger\"\r\n                      *ngIf=\"profileForm.controls['phone_no'].touched && profileForm.controls['phone_no'].hasError('minlength')\"\r\n                      class=\"text-danger d-inline-block pt-1\">\r\n                      *Must have at least 7 character!\r\n                    </p>\r\n                    <p class=\"text-danger\"\r\n                      *ngIf=\"profileForm.controls['phone_no'].touched && profileForm.controls['phone_no'].hasError('required')\">\r\n                      *Phone No is required!\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <div class=\"col-sm-12\">\r\n                    <button class=\"btn btn-primary\" type=\"submit\" (click)=\"update()\">Update Profile</button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </ng-template>\r\n        </li>\r\n        <li [ngbNavItem]=\"3\">\r\n          <a ngbNavLink>Change Password</a>\r\n          <ng-template ngbNavContent>\r\n            <div class=\"card-body\">\r\n              <form class=\"form-horizontal form-material\" [formGroup]=\"passwordForm\">\r\n                <div class=\"form-group\">\r\n                  <label class=\"col-md-12\">Old Password</label>\r\n                  <div class=\"col-md-12\">\r\n                    <input type=\"password\" formControlName=\"current_password\" placeholder=\"Old Password\"\r\n                      class=\"form-control form-control-line\">\r\n                    <p class=\"text-danger\"\r\n                      *ngIf=\"passwordForm.get('current_password').touched && passwordForm.get('current_password').hasError('required')\">\r\n                      *Please enter Old Password.\r\n                    </p>\r\n                    <p class=\"text-danger\"\r\n                      *ngIf=\"passwordForm.get('current_password').touched && passwordForm.get('current_password').hasError('minlength')\">\r\n                      *Must have at least 8 character!\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <label for=\"example-email\" class=\"col-md-12\">New Password</label>\r\n                  <div class=\"col-md-12\">\r\n                    <input type=\"password\" formControlName=\"new_password\" placeholder=\"New Password\"\r\n                      class=\"form-control form-control-line\" name=\"example-email\" id=\"example-email\">\r\n                    <p class=\"text-danger\"\r\n                      *ngIf=\"passwordForm.get('new_password').touched && passwordForm.get('new_password').hasError('required')\">\r\n                      *Please enter New Password.\r\n                    </p>\r\n                    <p class=\"text-danger\"\r\n                      *ngIf=\"passwordForm.get('new_password').touched && passwordForm.get('new_password').hasError('minlength')\">\r\n                      *Must have at least 8 character!\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <label for=\"example-email\" class=\"col-md-12\">Confirm Password</label>\r\n                  <div class=\"col-md-12\">\r\n                    <input type=\"password\" formControlName=\"cnfnew_password\" placeholder=\"Confirm Passowrd\"\r\n                      class=\"form-control form-control-line\" name=\"example-email\" id=\"example-email\">\r\n                      <p class=\"text-danger\"\r\n                      *ngIf=\"passwordForm.get('cnfnew_password').touched && passwordForm.get('cnfnew_password').hasError('required')\">\r\n                      *Please enter Confirm Password.\r\n                    </p>\r\n                    <p class=\"text-danger\"\r\n                      *ngIf=\"passwordForm.get('cnfnew_password').touched && passwordForm.get('cnfnew_password').hasError('passwordMismatch')\">\r\n                      *Password don't match\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                  <div class=\"col-sm-12\">\r\n                    <button class=\"btn btn-primary\" (click)=\"updatePassword()\" type=\"submit\">Save</button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </ng-template>\r\n        </li>\r\n      </ul>\r\n\r\n      <div [ngbNavOutlet]=\"nav\" class=\"mt-2\"></div>\r\n    </div>\r\n\r\n  </div>\r\n  <!-- Column -->\r\n</div>\r\n","import { CommonService } from './../../../_services/common.service';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { GooglePlaceDirective } from 'ngx-google-places-autocomplete';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { CustomValidationService } from '../../../_services/custom-validation.service';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  @ViewChild(\"placeRef\") placesRef: GooglePlaceDirective;\r\n  active = 1;\r\n  items: any;\r\n  long: any=76.71787259999999;\r\n  lati: any=30.7046486 ;\r\n  zoom=14;\r\n  autoAddress: any;\r\n  profileForm:FormGroup;\r\n  passwordForm:FormGroup;\r\n  Pic: any;\r\n  imageId: any;\r\n  constructor(private commn_:CommonService,private fb:FormBuilder,private toastr:ToastrService,private customvalidator:CustomValidationService) { \r\n    this.profileForm=this.fb.group({\r\n      first_name:['',[Validators.required,Validators.maxLength(10),Validators.minLength(3)]],\r\n      last_name:['',[Validators.required,Validators.maxLength(10),Validators.minLength(3)]],\r\n      phone_no:['',[Validators.required,Validators.minLength(7),Validators.maxLength(15)]],\r\n      email:['',[Validators.required,Validators.email,Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')]],\r\n      address:['',[Validators.required]],\r\n      cnfaddress:['',[Validators.required]]\r\n    },{\r\n      validator:this.customvalidator.passwordMatchValidator(\"address\",\"cnfaddress\")\r\n     });\r\n    this.passwordForm=this.fb.group({\r\n      current_password:['',[Validators.required,Validators.minLength(8)]],\r\n      new_password:['',[Validators.required,Validators.minLength(8)]],\r\n      cnfnew_password:['',[Validators.required]]\r\n    },{\r\n      validator:this.customvalidator.passwordMatchValidator(\"new_password\",\"cnfnew_password\")\r\n     });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getProfile();\r\n  }\r\n \r\n  getProfile(){\r\n    this.commn_.get(\"user/get-user-profile-by-token/\").subscribe(res=>{\r\n    console.log(res);\r\n    this.items=res?.data;\r\n    this.lati=res?.data?.latitude;\r\n    this.long=res?.data?.longitude;\r\n    console.log(this.lati,this.long);\r\n    this.profileForm.get('first_name').patchValue(res?.data?.first_name);\r\n    this.profileForm.get('last_name').patchValue(res?.data?.last_name);\r\n    this.profileForm.get('address').patchValue(res?.data?.address);\r\n    this.profileForm.get('cnfaddress').patchValue(res?.data?.address);\r\n    this.profileForm.get('phone_no').patchValue(res?.data?.phone_no);\r\n    this.profileForm.get('email').patchValue(res?.data?.email);\r\n    this.profileForm.get('email').disable();\r\n    this.profileForm.get('phone_no').disable();\r\n    });\r\n  }\r\n  //setting Form\r\n  update()\r\n  {\r\n    let body={\r\n    \"first_name\":this.profileForm.get('first_name').value.trim(),\r\n    \"last_name\":this.profileForm.get('last_name').value.trim(),\r\n    \"address\":this.profileForm.get('address').value.trim(),\r\n    \"latitude\":this.lati,\r\n    \"longitude\":this.long,\r\n    \"role\":1\r\n    };\r\n    if(this.imageId)\r\n    {\r\n      body['image']=this.imageId;\r\n    }\r\n    console.log(body);\r\n    if(this.profileForm.valid){\r\n    this.commn_.put(\"user/update-user-profile-by-token/\",body).subscribe(res=>{\r\n      if(res.code==200)\r\n      {\r\n      this.commn_.imageFlag.next(\"Flag\");\r\n      this.toastr.success(res.message,\"Success\",{timeOut:1500});\r\n      this.getProfile();\r\n      }\r\n      else{\r\n        this.toastr.error(res.message,\"Error\",{timeOut:1500});\r\n      }\r\n    })\r\n  }\r\n  else{\r\n    this.profileForm.markAllAsTouched();\r\n  }\r\n\r\n  }\r\n   \r\n  //Image Select\r\n  onImageSelect(e) {\r\n    var files = e.target.files;\r\n    if (files[0].size <= 10000000) {\r\n      this.Pic = files[0];\r\n      const formdata = new FormData();\r\n      formdata.append(\"media\",this.Pic);\r\n      this.commn_.post(\"upload/media/\",formdata).subscribe(res=>{\r\n        console.log(res);\r\n      if(res.code==200)\r\n      {\r\n        this.imageId=res.data[0].id;\r\n        this.update();\r\n        this.getProfile();\r\n      }\r\n      else\r\n      {\r\n        this.toastr.error(res.message,\"Error\");\r\n      }\r\n      });\r\n    } else {\r\n      this.Pic = null;\r\n    }\r\n  }\r\n\r\n  //change-password\r\n  updatePassword()\r\n  {\r\n    let body={\r\n      \"current_password\":this.passwordForm.get('current_password').value,\r\n      \"new_password\":this.passwordForm.get('new_password').value\r\n  };\r\n  console.log(body);\r\n  if(this.passwordForm.valid){\r\n    this.commn_.put(\"user/change-password/\",body).subscribe(res=>{\r\n      if(res.code==200)\r\n      {\r\n        this.toastr.success(res.message,\"Success\",{timeOut:2000});\r\n      }\r\n      else\r\n      {\r\n        this.toastr.error(res.message,\"Error\",{timeOut:2000});\r\n      }\r\n    })\r\n  }\r\n  else\r\n  {\r\n    this.passwordForm.markAllAsTouched();\r\n  }\r\n  }\r\n\r\n   //Location Dropdown\r\n   public AddressChange(address: any) {\r\n    this.profileForm.get('cnfaddress').patchValue(address.formatted_address);\r\n    this.profileForm.get('address').patchValue(address.formatted_address);\r\n    this.lati = address.geometry.location.lat();\r\n    this.long = address.geometry.location.lng();\r\n  }\r\n  \r\n   // Alphabatic text only\r\n   alphabate(event) {\r\n    const charCode = event.which ? event.which : event.keyCode;\r\n    if (\r\n      (charCode >= 65 && charCode <= 90) ||\r\n      (charCode >= 97 && charCode <= 122) ||\r\n      charCode == 32\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n \r\n  // Allow Numberic input only\r\n  phoneNoInput(event) {\r\n    const charCode = event.which ? event.which : event.keyCode;\r\n    if ((charCode >= 48 && charCode <= 57) || charCode == 43) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { SettingComponent } from './setting.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'',\r\n    component:SettingComponent,\r\n    children:[\r\n      {\r\n        path:\"profile\",\r\n        component:ProfileComponent\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SettingRoutingModule { }\r\n","<router-outlet></router-outlet>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-setting',\r\n  templateUrl: './setting.component.html',\r\n  styleUrls: ['./setting.component.css']\r\n})\r\nexport class SettingComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { SettingRoutingModule } from './setting-routing.module';\r\nimport { SettingComponent } from './setting.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AgmCoreModule } from '@agm/core';\r\nimport { GooglePlaceModule } from 'ngx-google-places-autocomplete';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [SettingComponent, ProfileComponent],\r\n  imports: [\r\n    CommonModule,\r\n    SettingRoutingModule,\r\n    NgbModule,\r\n    AgmCoreModule.forRoot({\r\n      apiKey: \"AIzaSyBUb3jDWJQ28vDJhuQZxkC0NXr_zycm8D0\",\r\n      libraries: [\"places\", \"drawing\", \"geometry\"],\r\n        }),\r\n        GooglePlaceModule,\r\n        ReactiveFormsModule\r\n  ]\r\n})\r\nexport class SettingModule { }\r\n"]}
{"version":3,"sources":["webpack:///src/app/pages/notification/add-notification/add-notification.component.html","webpack:///src/app/pages/notification/add-notification/add-notification.component.ts","webpack:///src/app/pages/notification/notification-routing.module.ts","webpack:///src/app/pages/notification/notification-table/notification-table.component.html","webpack:///src/app/pages/notification/notification-table/notification-table.component.ts","webpack:///src/app/pages/notification/notification.component.html","webpack:///src/app/pages/notification/notification.component.ts","webpack:///src/app/pages/notification/notification.module.ts","webpack:///src/app/pages/notification/notificaton-list/notificaton-list.component.html","webpack:///src/app/pages/notification/notificaton-list/notificaton-list.component.ts"],"names":["AddNotificationComponent","fb","commn_","spinner","toastr","disableSelect","checked","allToggleSelected","selectionChange","notificationForm","group","notification_type","required","notification_mode","title","minLength","maxLength","message","users","console","log","getNotificationUserList","get","subscribe","res","userItems","data","valid","items","body","show","value","map","x","user","splice","notification_users","post","code","setTimeout","hide","success","timeOut","error","markAllAsTouched","event","length","skillSel","options","forEach","item","i","deselect","select","close","routes","path","component","children","NotificationRoutingModule","NotificationTableComponent","modalService","searchText","page","pageSize","status","getNotificationList","recordsTotal","e","pageIndex","previousPageIndex","msg","bsModalRef","initialState","list","NotificationComponent","NotificationModule","NotificatonListComponent","currentTabIndex","index","clearTimeout","next","review","open","backdropClass","centered","size"],"mappings":"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","file":"pages-notification-notification-module-ngfactory-es5.js","sourcesContent":["<div class=\"card\">\r\n  <div class=\"card-body\">\r\n    <form action=\"\" [formGroup]=\"notificationForm\" ngxScrollToFirstInvalid>\r\n      <div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n          <!-- <mat-slide-toggle [checked]=\"checked\"></mat-slide-toggle> -->\r\n        </div>\r\n        <div class=\"col-md-6 text-right\">\r\n          <button class=\"btn btn-primary\" routerLink=\"/notification/notificationlist\">View Notification History</button>\r\n        </div>\r\n        <div class=\"col-md-4\">\r\n\r\n          <div class=\"form-group mat-form-control mat-no-animation\">\r\n            <label>Notification Type</label>\r\n            <mat-form-field >\r\n              <mat-label>Choose an option</mat-label>\r\n              <mat-select matNativeControl formControlName=\"notification_type\">\r\n                <mat-option value=\"1\"> Content-based changes and updates</mat-option>\r\n                <mat-option value=\"2\">Activity-Based Updates</mat-option>\r\n                <mat-option value=\"3\">Broadcast Notification</mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n            <mat-error\r\n                *ngIf=\"notificationForm.controls.notification_type.touched && notificationForm.controls.notification_type.hasError('required')\">\r\n                Type is Required!</mat-error>\r\n          </div>\r\n          <div class=\"form-group mat-form-control mat-no-animation\">\r\n            <label>Notification Mode</label>\r\n            <mat-form-field>\r\n              <mat-label>Choose an option</mat-label>\r\n              <mat-select matNativeControl name=\"\" id=\"\" formControlName=\"notification_mode\">\r\n                <mat-option value=\"1\">Email</mat-option>\r\n                <mat-option value=\"2\">Notification</mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n            <mat-error\r\n                *ngIf=\"notificationForm.controls.notification_mode.touched && notificationForm.controls.notification_mode.hasError('required')\">\r\n                Mode is Required!</mat-error>\r\n          </div>\r\n          <div class=\"form-group mat-form-control mat-no-animation\">\r\n            <label>User Type</label>\r\n            <mat-form-field>\r\n              <mat-label>Choose an option</mat-label>\r\n              <mat-select #mySel matNativeControl multiple (selectionChange)=\"onSelection($event)\"\r\n                formControlName=\"users\">\r\n                <mat-option [value]=\"0\" (click)=\"toggleAllSelection()\"> All</mat-option>\r\n                <mat-option [value]=\"user?.id\" *ngFor=\"let user of userItems\" (click)=\"singleSelection()\">\r\n                  {{user?.full_name}}</mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n            <mat-error\r\n                *ngIf=\"notificationForm.controls.users.touched && notificationForm.controls.users.hasError('required')\">\r\n                Users is Required!</mat-error>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label>Add Heading</label>\r\n            <input type=\"text\"  placeholder=\"\" #title (keydown.space)=\"!title.value?$event.preventDefault():null\"\r\n               formControlName=\"title\" class=\"form-control\">\r\n            <mat-error\r\n              *ngIf=\"notificationForm.controls.title.touched && notificationForm.controls.title.hasError('required')\">\r\n              Heading is Required!</mat-error>\r\n            <mat-error\r\n              *ngIf=\"notificationForm.controls.title.touched && notificationForm.controls.title.hasError('minlength')\">\r\n              Min Character Length 3!</mat-error>\r\n            <mat-error\r\n              *ngIf=\"notificationForm.controls.title.touched && notificationForm.controls.title.hasError('maxlength')\">\r\n              Max Character Length 15!</mat-error>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label>Add Message</label>\r\n            <textarea name=\"\" id=\"\" cols=\"30\" rows=\"5\" class=\"form-control\" #message\r\n              (keydown.space)=\"!message.value?$event.preventDefault():null\" formControlName=\"message\"></textarea>\r\n            <mat-error\r\n              *ngIf=\"notificationForm.controls.message.touched && notificationForm.controls.message.hasError('required')\">\r\n              Message is Required!</mat-error>\r\n            <mat-error\r\n              *ngIf=\"notificationForm.controls.message.touched && notificationForm.controls.message.hasError('minlength')\">\r\n              Min Character length 4!</mat-error>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-12\">\r\n          <button class=\"btn btn-primary\" type=\"submit\" (click)=\"createNotification()\">Send</button>\r\n\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { Component, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatOption } from '@angular/material/core';\r\nimport { MatSelect } from '@angular/material/select';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { CommonService } from '../../../_services/common.service';\r\n@Component({\r\n  selector: 'app-add-notification',\r\n  templateUrl: './add-notification.component.html',\r\n  styleUrls: ['./add-notification.component.css']\r\n})\r\nexport class AddNotificationComponent implements OnInit {\r\n  disableSelect = new FormControl(false);\r\n  checked:boolean = true;\r\n  notificationForm:FormGroup;\r\n  userItems: any;\r\n  allToggleSelected: boolean = false;\r\n  @ViewChild('mySel') skillSel: MatSelect;\r\n  @Output() selectionChange: EventEmitter<any> = new EventEmitter();\r\n  constructor(private fb:FormBuilder,private commn_: CommonService,private spinner: NgxSpinnerService , private toastr:ToastrService) {\r\n    this.notificationForm=this.fb.group({\r\n      notification_type: ['', [Validators.required]],\r\n      notification_mode: ['', [Validators.required]],\r\n      title: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(15)]],\r\n      message: ['', [Validators.required, Validators.minLength(4)]],\r\n      users: ['', [Validators.required]]\r\n    });\r\n   }\r\n  ngOnInit(): void {\r\n    console.log(this.checked);\r\n    this.getNotificationUserList();\r\n  }\r\n\r\n  getNotificationUserList() {\r\n    this.commn_.get(\"admin/get-user-list/\").subscribe(res => {\r\n      console.log(res);\r\n      this.userItems = res.data;\r\n    });\r\n  }\r\n  \r\n  createNotification() {\r\n    if (this.notificationForm.valid) {\r\n      let items=[];\r\n      let body={}\r\n      this.spinner.show();\r\n      items=this.notificationForm.get('users').value.map((x) => {\r\n        return { user: x }\r\n      });\r\n      if(items[0].user=='0'){\r\n        console.log(items[0].user);\r\n        items.splice(0,1);\r\n        body = {\r\n          notification_type: this.notificationForm.get('notification_type').value,\r\n          notification_mode: this.notificationForm.get('notification_mode').value,\r\n          title: this.notificationForm.get('title').value,\r\n          message: this.notificationForm.get('message').value,\r\n          notification_users: items\r\n        }\r\n      }else\r\n      {\r\n       body = {\r\n        notification_type: this.notificationForm.get('notification_type').value,\r\n        notification_mode: this.notificationForm.get('notification_mode').value,\r\n        title: this.notificationForm.get('title').value,\r\n        message: this.notificationForm.get('message').value,\r\n        notification_users: items\r\n      }\r\n    }\r\n      console.log(body);\r\n      this.commn_.post(\"admin/create-notifications/\", body).subscribe(res => {\r\n        if(res.code==200)\r\n        {\r\n          setTimeout(() => {this.spinner.hide();},2000);\r\n          this.toastr.success(res.message,\"Success\",{timeOut:2000});\r\n        }\r\n        else\r\n        {\r\n          this.toastr.error(res.message,\"Error\",{timeOut:2000});\r\n          setTimeout(() => {this.spinner.hide();},2000);\r\n        }\r\n      });\r\n    }\r\n    else {\r\n      this.notificationForm.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  async onSelection(event: any) {\r\n  \r\n  }\r\n  singleSelection()\r\n  {\r\n    if(this.allToggleSelected == true && this.notificationForm.value.users.length > 0)\r\n    {\r\n      this.skillSel.options.forEach((item: MatOption,i) => {\r\n        if(i == 0)\r\n        {\r\n        item.deselect();\r\n        }\r\n      })\r\n    }\r\n  }\r\n  toggleAllSelection() {\r\n    this.allToggleSelected = !this.allToggleSelected;\r\n    if (this.allToggleSelected) {\r\n      this.skillSel.options.forEach((item: MatOption) => item.select());\r\n    } else {\r\n      this.skillSel.options.forEach((item: MatOption) => {\r\n        item.deselect();\r\n      });\r\n    }\r\n    this.skillSel.close();\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { NotificatonListComponent } from './notificaton-list/notificaton-list.component';\r\nimport { NotificationComponent } from './notification.component';\r\nimport { AddNotificationComponent } from './add-notification/add-notification.component';\r\nconst routes: Routes = [\r\n  {\r\n    path:'',\r\n    component:NotificationComponent,\r\n    children:[\r\n      {\r\n        path:'addnotification',\r\n        component:AddNotificationComponent,\r\n        data: {\r\n          title: \"Add Notification\",\r\n        }\r\n      },\r\n      {\r\n        path:'notificationlist',\r\n        component:NotificatonListComponent,\r\n        data: {\r\n          title: \"Notificaton\",\r\n        }\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class NotificationRoutingModule { }\r\n","<div class=\"table-responsive\">\n  <table class=\"table\">\n    <tr *ngIf=\"length!=0\">\n      <th class=\"text-nowrap\">#</th>\n      <th class=\"text-nowrap\">Users</th>\n      <th class=\"text-nowrap\">Message</th>\n    </tr>\n    <tr *ngFor=\"let item of items;let i=index\">\n      <td>{{page==0?page+ i+1:page+i}}</td>\n      <td>{{item?.notification_users[0]?.full_name}} <a href=\"javascript:void(0)\" *ngIf=\"item?.notification_users.length>1\" (click)=\"userListModel(item?.notification_users)\">...</a></td>\n      <td>{{item?.message | slice:0:50}}<a href=\"javascript:void(0)\" *ngIf=\"item?.message?.length>50\" (click)=\"readModel(item?.message)\">Read More</a>\n      </td>\n    </tr>\n\t<tr *ngIf=\"length==0\">\n\t\t<td colspan=\"3\" class=\"text-center\">No Data Found</td>\n\t</tr>\n  </table>\n</div>\n<mat-paginator #paginator [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"[5, 10, 25, 100]\"\n    (page)=\"pageEvent = pageSizeChanged($event)\">\n  </mat-paginator>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { PageEvent } from '@angular/material/paginator';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { CommonService } from '../../../_services/common.service';\nimport { ReadMoreComponent } from '../../../_shared/read-more/read-more.component';\n\n@Component({\n  selector: 'app-notification-table',\n  templateUrl: './notification-table.component.html',\n  styleUrls: ['./notification-table.component.css']\n})\nexport class NotificationTableComponent implements OnInit {\n  @Input('status') status: any;\n  @Input('searchText') searchText = {\n\t\tevent: new Subject(),\n\t\tvalue: \"\"\n\t}\n  length=0;\n  page=1;\n  pageSize=10;\n  pageEvent: PageEvent;\n  items: any;\n  bsModalRef: BsModalRef;\n  constructor(private commn_:CommonService,private modalService: BsModalService) { }\n  \n  ngOnInit(): void {\n    console.log(this.status);\n    this.getNotificationList();\n    this.searchText.event.subscribe(searchText => {\n\t\t\tthis.getNotificationList();\n\t\t})\n  }\n  // get List\n  getNotificationList()\n  {\n    let body={\n      \"is_active\": true,\n      \"draw\": 2,\n      \"columns\": [\n          {\n              \"data\": \"id\",\n              \"name\": \"\",\n              \"searchable\": true,\n              \"orderable\": true,\n              \"search\": {\n                  \"value\": \"\",\n                  \"regex\": false\n              }\n          },\n          {\n              \"data\": \"message\",\n              \"name\": \"\",\n              \"searchable\": true,\n              \"orderable\": true,\n              \"search\": {\n                  \"value\": \"\",\n                  \"regex\": false\n              }\n          },\n          {\n              \"data\": \"title\",\n              \"name\": \"\",\n              \"searchable\": true,\n              \"orderable\": true,\n              \"search\": {\n                  \"value\": \"\",\n                  \"regex\": false\n              }\n          }\n      ],\n      \"order\": [\n          {\n              \"column\": 2,\n              \"dir\": \"undefined\"\n          }\n      ],\n      \"start\": this.page,\n      \"length\": this.pageSize,\n      \"search\": {\n          \"value\": this.searchText.value?this.searchText.value:\"\",\n          \"regex\": false\n      }\n  }\n  this.commn_.post(\"admin/get-all-notifications/\"+this.status+\"/\",body).subscribe(res=>{\n    console.log(res);\n    this.items=res?.data;\n    this.length=res.recordsTotal;\n  })\n  }\n \n  // pagination\n  pageSizeChanged(e): PageEvent {\n    if (e.pageIndex == 0) {\n      this.page = e.pageIndex;\n    } else {\n      if (e.previousPageIndex < e.pageIndex) {\n        this.page =this.page+ e.pageSize;\n      } else {\n        this.page =this.page- e.pageSize;\n      }\n    }\n    this.pageSize = e.pageSize\n    this.getNotificationList();\n    return e;\n}\n\nreadModel(msg){\n  this.bsModalRef = this.modalService.show(ReadMoreComponent, {\n    initialState: {\n      message:msg,\n      title:\"Message\",\n      items:[]\n    }\n  });\n}\n\nuserListModel(list)\n{\n  this.bsModalRef = this.modalService.show(ReadMoreComponent, {\n    initialState: {\n      message:\"\",\n      title:\"User List\",\n      items:list\n    }\n  });\n}\n \n\n}\n","<router-outlet></router-outlet>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-notification',\r\n  templateUrl: './notification.component.html',\r\n  styleUrls: ['./notification.component.css']\r\n})\r\nexport class NotificationComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport { NotificationRoutingModule } from './notification-routing.module';\r\nimport { NotificationComponent } from './notification.component';\r\nimport { NotificatonListComponent } from './notificaton-list/notificaton-list.component';\r\nimport { AddNotificationComponent } from './add-notification/add-notification.component';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NotificationTableComponent } from './notification-table/notification-table.component';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport { NgxScrollToFirstInvalidModule } from '@ismaestro/ngx-scroll-to-first-invalid';\r\n@NgModule({\r\n  declarations: [NotificationComponent, NotificatonListComponent, AddNotificationComponent, NotificationTableComponent],\r\n  imports: [\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    CommonModule,\r\n    NotificationRoutingModule,\r\n    MatSelectModule,\r\n    MatFormFieldModule,\r\n    MatSlideToggleModule,\r\n    MatInputModule,\r\n    NgbModule,\r\n    MatTabsModule,\r\n    MatPaginatorModule,\r\n    NgxScrollToFirstInvalidModule\r\n  ]\r\n})\r\nexport class NotificationModule { }\r\n","<div class=\"card\">\r\n  <div class=\"card-body\">\r\n    <div class=\"row  pr-2 mt-2 \">\r\n      <div class=\"col-md-4\">\r\n          <div class=\"mb-2\">\r\n            <input type=\"text\" class=\"form-control\" (keyup)=\"searchHere()\" id=\"prenametext\" placeholder=\"Search\" [(ngModel)]=\"searchText.value\" >\r\n          </div>\r\n      </div>\r\n      <div class=\"col-md-8 mb-2 text-right\">\r\n        <a routerLink=\"/notification/addnotification\" class=\"btn btn-primary mr-2\">Back</a>\r\n      </div>\r\n    </div>\r\n    <hr>\r\n    <mat-tab-group [selectedIndex]=\"currentTabIndex\" (selectedTabChange)=\"onTabChange($event)\">\r\n      <mat-tab label=\"Broadcast Notification\"><app-notification-table *ngIf=\"currentTabIndex==0\" [status]=\"1\" [searchText]=\"searchText\"></app-notification-table></mat-tab>\r\n      <mat-tab label=\"Activity based Notification\"><app-notification-table *ngIf=\"currentTabIndex==1\" [status]=\"2\" [searchText]=\"searchText\"></app-notification-table></mat-tab>\r\n      <mat-tab label=\"Contant Based Notification\"><app-notification-table *ngIf=\"currentTabIndex==2\" [status]=\"3\" [searchText]=\"searchText\"></app-notification-table></mat-tab>\r\n    </mat-tab-group>\r\n  </div>\r\n</div>\r\n<!-- view modal -->\r\n<ng-template #review let-modal>\r\n  <div class=\"modal-body\">\r\n    <button type=\"button\" class=\" close-icon\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n      <i class=\"mdi mdi-close\"></i>\r\n    </button>\r\n    <div class=\"row\">\r\n\r\n      <!-- Column -->\r\n      <div class=\"col-lg-12 col-xlg-12 col-md-12\">\r\n        <div class=\"card custom-tabs mb-0\">\r\n          <div class=\"card-body\">\r\n            <div class=\"row pt-2\">\r\n              <div class=\"col-md-12\">\r\n                <p>\r\n                  It is a long established fact that a reader will be distracted by the readable content of a page when\r\n                  looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal\r\n                  distribution of letters, as opposed to using 'Content here, content here', making it look like\r\n                  readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their\r\n                  default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- Column -->\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n<!-- add review -->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { MatTabChangeEvent } from '@angular/material/tabs';\r\nimport { NgbModal, ModalDismissReasons, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Subject } from 'rxjs';\r\n@Component({\r\n  selector: 'app-notificaton-list',\r\n  templateUrl: './notificaton-list.component.html',\r\n  styleUrls: ['./notificaton-list.component.css']\r\n})\r\nexport class NotificatonListComponent implements OnInit {\r\n  public currentTabIndex = 0  //default tab index is 1\r\n  constructor(private modalService: NgbModal) { }\r\n  searchText = {\r\n\t\tevent: new Subject(),\r\n\t\tvalue: ''\r\n\t}\r\n  timeOut:any;\r\n  ngOnInit(): void {\r\n  }\r\n\r\nonTabChange(event: MatTabChangeEvent) {\r\n    this.currentTabIndex = event.index;\r\n}\r\n\r\nsearchHere() {\r\n  clearTimeout(this.timeOut);\r\n  this.timeOut = setTimeout(() => { this.searchText.event.next() }, 1050);\r\n}\r\n\r\n  reviewModal(review) {\r\n    this.modalService.open(review, {backdropClass: 'light-blue-backdrop',centered: true,size: 'lg'});\r\n  }\r\n}\r\n"]}
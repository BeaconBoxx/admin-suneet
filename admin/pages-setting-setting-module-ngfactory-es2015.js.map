{"version":3,"sources":["./src/app/pages/setting/profile/profile.component.html","./src/app/pages/setting/profile/profile.component.ts","./src/app/pages/setting/setting-routing.module.ts","./src/app/pages/setting/setting.component.html","./src/app/pages/setting/setting.component.ts","./src/app/pages/setting/setting.module.ts"],"names":[],"mappings":"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","file":"pages-setting-setting-module-ngfactory-es2015.js","sourcesContent":["<div class=\"row\">\r\n  <!-- Column -->\r\n  <div class=\"col-lg-4 col-xlg-3 col-md-5\">\r\n    <div class=\"card\">\r\n      <div class=\"card-body\">\r\n        <div class=\"m-t-30 text-center\">\r\n          <img [src]=\"items?.image?.media_file_url\" class=\"img-circle\" width=\"150\" height=\"150\" />\r\n          <h4 class=\"card-title m-t-10\">{{items?.first_name}} {{items?.last_name}}</h4>\r\n          <h6 class=\"card-subtitle\">Admin</h6>\r\n        </div>\r\n        <div class=\"upload-btn-wrapper\">\r\n          <button class=\"btn-upload\"><i class=\"mdi mdi-pencil\"></i></button>\r\n          <input type=\"file\" (change)=\"onImageSelect($event)\" accept=\"image/jpeg\" name=\"myfile\" />\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <hr>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <small class=\"text-muted\">Email address </small>\r\n        <h6>{{items?.email}}</h6>\r\n        <small class=\"text-muted p-t-30 db\">Phone</small>\r\n        <h6>{{items?.country_code}} {{items?.phone_no}}</h6>\r\n        <small class=\"text-muted p-t-30 db\">Address</small>\r\n        <h6>{{items?.address}}</h6>\r\n        <div>\r\n          <agm-map [latitude]=\"lati\" [longitude]=\"long\" [zoom]=\"zoom\">\r\n            <agm-marker [latitude]=\"lati\" [agmFitBounds]=\"true\" [longitude]=\"long\"></agm-marker>\r\n          </agm-map>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!-- Column -->\r\n  <!-- Column -->\r\n  <div class=\"col-lg-8 col-xlg-9 col-md-7\">\r\n    <div class=\"card p-2\">\r\n\r\n\r\n      <ul ngbNav #nav=\"ngbNav\" [(activeId)]=\"active\" class=\"nav-tabs\">\r\n\r\n        <li [ngbNavItem]=\"1\">\r\n          <a ngbNavLink>Profile</a>\r\n          <ng-template ngbNavContent>\r\n            <div class=\"card-body\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-3 col-xs-6 b-r\"> <strong>Full Name</strong>\r\n                  <br>\r\n                  <p class=\"text-muted\">{{items?.first_name}} {{items?.last_name}}</p>\r\n                </div>\r\n                <div class=\"col-md-3 col-xs-6 b-r\"> <strong>Mobile</strong>\r\n                  <br>\r\n                  <p class=\"text-muted\">({{items?.country_code}}) {{items?.phone_no}}</p>\r\n                </div>\r\n                <div class=\"col-md-3 col-xs-6 b-r\"> <strong>Email</strong>\r\n                  <br>\r\n                  <p class=\"text-muted\">{{items?.email}}</p>\r\n                </div>\r\n                <div class=\"col-md-3 col-xs-6\"> <strong>Location</strong>\r\n                  <br>\r\n                  <p class=\"text-muted\">{{items?.address}}</p>\r\n                </div>\r\n              </div>\r\n              <!-- <hr>\r\n                        <p class=\"m-t-30\">Donec pede justo, fringilla vel, aliquet nec, vulputate eget, arcu. In enim justo, rhoncus ut, imperdiet a, venenatis vitae, justo. Nullam dictum felis eu pede mollis pretium. Integer tincidunt.Cras dapibus. Vivamus elementum semper nisi. Aenean vulputate eleifend tellus. Aenean leo ligula, porttitor eu, consequat vitae, eleifend ac, enim.</p>\r\n                        <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries </p> -->\r\n            </div>\r\n          </ng-template>\r\n        </li>\r\n        <li [ngbNavItem]=\"2\">\r\n          <a ngbNavLink>Settings</a>\r\n          <ng-template ngbNavContent>\r\n            <div class=\"card-body\">\r\n              <form class=\"form-horizontal form-material\" [formGroup]=\"profileForm\">\r\n                <div class=\"form-group\">\r\n                  <label class=\"col-md-12\">First Name</label>\r\n                  <div class=\"col-md-12\">\r\n                    <input type=\"text\" (keypress)=\"alphabate($event)\" formControlName=\"first_name\"\r\n                      placeholder=\"Johnathan\" class=\"form-control form-control-line\">\r\n                    <p class=\"text-danger\"\r\n                      *ngIf=\"profileForm.controls['first_name'].touched && profileForm.controls['first_name'].hasError('maxlength')\"\r\n                      class=\"text-danger d-inline-block pt-1\">\r\n                      *Must have at most 10 character!\r\n                    </p>\r\n                    <p class=\"text-danger\"\r\n                      *ngIf=\"profileForm.controls['first_name'].touched && profileForm.controls['first_name'].hasError('minlength')\"\r\n                      class=\"text-danger d-inline-block pt-1\">\r\n                      *Must have at least 3 character!\r\n                    </p>\r\n                    <p class=\"text-danger\"\r\n                      *ngIf=\"profileForm.controls['first_name'].touched && profileForm.controls['first_name'].hasError('required')\">\r\n                      *First Name is required!\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <label class=\"col-md-12\">Last Name</label>\r\n                  <div class=\"col-md-12\">\r\n                    <input type=\"text\" (keypress)=\"alphabate($event)\" formControlName=\"last_name\" placeholder=\"Doe\"\r\n                      class=\"form-control form-control-line\">\r\n                    <p class=\"text-danger\"\r\n                      *ngIf=\"profileForm.controls['last_name'].touched && profileForm.controls['last_name'].hasError('maxlength')\"\r\n                      class=\"text-danger d-inline-block pt-1\">\r\n                      *Must have at most 10 character!\r\n                    </p>\r\n                    <p class=\"text-danger\"\r\n                      *ngIf=\"profileForm.controls['last_name'].touched && profileForm.controls['last_name'].hasError('minlength')\"\r\n                      class=\"text-danger d-inline-block pt-1\">\r\n                      *Must have at least 3 character!\r\n                    </p>\r\n                    <p class=\"text-danger\"\r\n                      *ngIf=\"profileForm.controls['last_name'].touched && profileForm.controls['last_name'].hasError('required')\">\r\n                      *Last Name is required!\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <label for=\"example-email\" class=\"col-md-12\">Email</label>\r\n                  <div class=\"col-md-12\">\r\n                    <input type=\"email\" formControlName=\"email\" placeholder=\"johnathan@admin.com\"\r\n                      class=\"form-control form-control-line\" name=\"example-email\" id=\"example-email\">\r\n                    <p class=\"text-danger\"\r\n                      *ngIf=\"profileForm.controls['email'].touched && profileForm.controls['email'].hasError('pattern')\"\r\n                      class=\"text-danger d-inline-block pt-1\">\r\n                      *Email invalid!\r\n                    </p>\r\n                    <p class=\"text-danger\"\r\n                      *ngIf=\"profileForm.controls['email'].touched && profileForm.controls['email'].hasError('required')\">\r\n                      *Email is required!\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <label class=\"col-md-12\">Address</label>\r\n                  <div class=\"col-md-12\">\r\n                    <input type=\"text\" formControlName=\"address\" ngx-google-places-autocomplete #placesRef=\"ngx-places\"\r\n                      #address class=\"form-control form-control-line\" (onAddressChange)=\"AddressChange($event)\">\r\n                    <p class=\"text-danger\"\r\n                      *ngIf=\"profileForm.controls['address'].touched && profileForm.controls['address'].hasError('required')\">\r\n                      *Address is required!\r\n                    </p>\r\n                    <p class=\"text-danger\"\r\n                      *ngIf=\"profileForm.controls['address'].touched && profileForm.get('cnfaddress').hasError('passwordMismatch') && !(profileForm.controls['address'].hasError('required'))\">\r\n                      *Please Select From Suggestion!\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <label class=\"col-md-12\">Phone No</label>\r\n                  <div class=\"col-md-12\">\r\n                    <input type=\"text\" (keypress)=\"phoneNoInput($event)\" formControlName=\"phone_no\"\r\n                      placeholder=\"123 456 7890\" class=\"form-control form-control-line\">\r\n                    <p class=\"text-danger\"\r\n                      *ngIf=\"profileForm.controls['phone_no'].touched && profileForm.controls['phone_no'].hasError('maxlength')\"\r\n                      class=\"text-danger d-inline-block pt-1\">\r\n                      *Must have at most 15 character!\r\n                    </p>\r\n                    <p class=\"text-danger\"\r\n                      *ngIf=\"profileForm.controls['phone_no'].touched && profileForm.controls['phone_no'].hasError('minlength')\"\r\n                      class=\"text-danger d-inline-block pt-1\">\r\n                      *Must have at least 7 character!\r\n                    </p>\r\n                    <p class=\"text-danger\"\r\n                      *ngIf=\"profileForm.controls['phone_no'].touched && profileForm.controls['phone_no'].hasError('required')\">\r\n                      *Phone No is required!\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <div class=\"col-sm-12\">\r\n                    <button class=\"btn btn-primary\" type=\"submit\" (click)=\"update()\">Update Profile</button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </ng-template>\r\n        </li>\r\n        <li [ngbNavItem]=\"3\">\r\n          <a ngbNavLink>Change Password</a>\r\n          <ng-template ngbNavContent>\r\n            <div class=\"card-body\">\r\n              <form class=\"form-horizontal form-material\" [formGroup]=\"passwordForm\">\r\n                <div class=\"form-group\">\r\n                  <label class=\"col-md-12\">Old Password</label>\r\n                  <div class=\"col-md-12\">\r\n                    <input type=\"password\" formControlName=\"current_password\" placeholder=\"Old Password\"\r\n                      class=\"form-control form-control-line\">\r\n                    <p class=\"text-danger\"\r\n                      *ngIf=\"passwordForm.get('current_password').touched && passwordForm.get('current_password').hasError('required')\">\r\n                      *Please enter Old Password.\r\n                    </p>\r\n                    <p class=\"text-danger\"\r\n                      *ngIf=\"passwordForm.get('current_password').touched && passwordForm.get('current_password').hasError('minlength')\">\r\n                      *Must have at least 8 character!\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <label for=\"example-email\" class=\"col-md-12\">New Password</label>\r\n                  <div class=\"col-md-12\">\r\n                    <input type=\"password\" formControlName=\"new_password\" placeholder=\"New Password\"\r\n                      class=\"form-control form-control-line\" name=\"example-email\" id=\"example-email\">\r\n                    <p class=\"text-danger\"\r\n                      *ngIf=\"passwordForm.get('new_password').touched && passwordForm.get('new_password').hasError('required')\">\r\n                      *Please enter New Password.\r\n                    </p>\r\n                    <p class=\"text-danger\"\r\n                      *ngIf=\"passwordForm.get('new_password').touched && passwordForm.get('new_password').hasError('minlength')\">\r\n                      *Must have at least 8 character!\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <label for=\"example-email\" class=\"col-md-12\">Confirm Password</label>\r\n                  <div class=\"col-md-12\">\r\n                    <input type=\"password\" formControlName=\"cnfnew_password\" placeholder=\"Confirm Passowrd\"\r\n                      class=\"form-control form-control-line\" name=\"example-email\" id=\"example-email\">\r\n                      <p class=\"text-danger\"\r\n                      *ngIf=\"passwordForm.get('cnfnew_password').touched && passwordForm.get('cnfnew_password').hasError('required')\">\r\n                      *Please enter Confirm Password.\r\n                    </p>\r\n                    <p class=\"text-danger\"\r\n                      *ngIf=\"passwordForm.get('cnfnew_password').touched && passwordForm.get('cnfnew_password').hasError('passwordMismatch')\">\r\n                      *Password don't match\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                  <div class=\"col-sm-12\">\r\n                    <button class=\"btn btn-primary\" (click)=\"updatePassword()\" type=\"submit\">Save</button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </ng-template>\r\n        </li>\r\n      </ul>\r\n\r\n      <div [ngbNavOutlet]=\"nav\" class=\"mt-2\"></div>\r\n    </div>\r\n\r\n  </div>\r\n  <!-- Column -->\r\n</div>\r\n","import { CommonService } from './../../../_services/common.service';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { GooglePlaceDirective } from 'ngx-google-places-autocomplete';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { CustomValidationService } from '../../../_services/custom-validation.service';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  @ViewChild(\"placeRef\") placesRef: GooglePlaceDirective;\r\n  active = 1;\r\n  items: any;\r\n  long: any=76.71787259999999;\r\n  lati: any=30.7046486 ;\r\n  zoom=14;\r\n  autoAddress: any;\r\n  profileForm:FormGroup;\r\n  passwordForm:FormGroup;\r\n  Pic: any;\r\n  imageId: any;\r\n  constructor(private commn_:CommonService,private fb:FormBuilder,private toastr:ToastrService,private customvalidator:CustomValidationService) { \r\n    this.profileForm=this.fb.group({\r\n      first_name:['',[Validators.required,Validators.maxLength(10),Validators.minLength(3)]],\r\n      last_name:['',[Validators.required,Validators.maxLength(10),Validators.minLength(3)]],\r\n      phone_no:['',[Validators.required,Validators.minLength(7),Validators.maxLength(15)]],\r\n      email:['',[Validators.required,Validators.email,Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')]],\r\n      address:['',[Validators.required]],\r\n      cnfaddress:['',[Validators.required]]\r\n    },{\r\n      validator:this.customvalidator.passwordMatchValidator(\"address\",\"cnfaddress\")\r\n     });\r\n    this.passwordForm=this.fb.group({\r\n      current_password:['',[Validators.required,Validators.minLength(8)]],\r\n      new_password:['',[Validators.required,Validators.minLength(8)]],\r\n      cnfnew_password:['',[Validators.required]]\r\n    },{\r\n      validator:this.customvalidator.passwordMatchValidator(\"new_password\",\"cnfnew_password\")\r\n     });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getProfile();\r\n  }\r\n \r\n  getProfile(){\r\n    this.commn_.get(\"user/get-user-profile-by-token/\").subscribe(res=>{\r\n    console.log(res);\r\n    this.items=res?.data;\r\n    this.lati=res?.data?.latitude;\r\n    this.long=res?.data?.longitude;\r\n    console.log(this.lati,this.long);\r\n    this.profileForm.get('first_name').patchValue(res?.data?.first_name);\r\n    this.profileForm.get('last_name').patchValue(res?.data?.last_name);\r\n    this.profileForm.get('address').patchValue(res?.data?.address);\r\n    this.profileForm.get('cnfaddress').patchValue(res?.data?.address);\r\n    this.profileForm.get('phone_no').patchValue(res?.data?.phone_no);\r\n    this.profileForm.get('email').patchValue(res?.data?.email);\r\n    this.profileForm.get('email').disable();\r\n    this.profileForm.get('phone_no').disable();\r\n    });\r\n  }\r\n  //setting Form\r\n  update()\r\n  {\r\n    let body={\r\n    \"first_name\":this.profileForm.get('first_name').value.trim(),\r\n    \"last_name\":this.profileForm.get('last_name').value.trim(),\r\n    \"address\":this.profileForm.get('address').value.trim(),\r\n    \"latitude\":this.lati,\r\n    \"longitude\":this.long,\r\n    \"role\":1\r\n    };\r\n    if(this.imageId)\r\n    {\r\n      body['image']=this.imageId;\r\n    }\r\n    console.log(body);\r\n    if(this.profileForm.valid){\r\n    this.commn_.put(\"user/update-user-profile-by-token/\",body).subscribe(res=>{\r\n      if(res.code==200)\r\n      {\r\n      this.commn_.imageFlag.next(\"Flag\");\r\n      this.toastr.success(res.message,\"Success\",{timeOut:1500});\r\n      this.getProfile();\r\n      }\r\n      else{\r\n        this.toastr.error(res.message,\"Error\",{timeOut:1500});\r\n      }\r\n    })\r\n  }\r\n  else{\r\n    this.profileForm.markAllAsTouched();\r\n  }\r\n\r\n  }\r\n   \r\n  //Image Select\r\n  onImageSelect(e) {\r\n    var files = e.target.files;\r\n    if (files[0].size <= 10000000) {\r\n      this.Pic = files[0];\r\n      const formdata = new FormData();\r\n      formdata.append(\"media\",this.Pic);\r\n      this.commn_.post(\"upload/media/\",formdata).subscribe(res=>{\r\n        console.log(res);\r\n      if(res.code==200)\r\n      {\r\n        this.imageId=res.data[0].id;\r\n        this.update();\r\n        this.getProfile();\r\n      }\r\n      else\r\n      {\r\n        this.toastr.error(res.message,\"Error\");\r\n      }\r\n      });\r\n    } else {\r\n      this.Pic = null;\r\n    }\r\n  }\r\n\r\n  //change-password\r\n  updatePassword()\r\n  {\r\n    let body={\r\n      \"current_password\":this.passwordForm.get('current_password').value,\r\n      \"new_password\":this.passwordForm.get('new_password').value\r\n  };\r\n  console.log(body);\r\n  if(this.passwordForm.valid){\r\n    this.commn_.put(\"user/change-password/\",body).subscribe(res=>{\r\n      if(res.code==200)\r\n      {\r\n        this.toastr.success(res.message,\"Success\",{timeOut:2000});\r\n      }\r\n      else\r\n      {\r\n        this.toastr.error(res.message,\"Error\",{timeOut:2000});\r\n      }\r\n    })\r\n  }\r\n  else\r\n  {\r\n    this.passwordForm.markAllAsTouched();\r\n  }\r\n  }\r\n\r\n   //Location Dropdown\r\n   public AddressChange(address: any) {\r\n    this.profileForm.get('cnfaddress').patchValue(address.formatted_address);\r\n    this.profileForm.get('address').patchValue(address.formatted_address);\r\n    this.lati = address.geometry.location.lat();\r\n    this.long = address.geometry.location.lng();\r\n  }\r\n  \r\n   // Alphabatic text only\r\n   alphabate(event) {\r\n    const charCode = event.which ? event.which : event.keyCode;\r\n    if (\r\n      (charCode >= 65 && charCode <= 90) ||\r\n      (charCode >= 97 && charCode <= 122) ||\r\n      charCode == 32\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n \r\n  // Allow Numberic input only\r\n  phoneNoInput(event) {\r\n    const charCode = event.which ? event.which : event.keyCode;\r\n    if ((charCode >= 48 && charCode <= 57) || charCode == 43) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { SettingComponent } from './setting.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'',\r\n    component:SettingComponent,\r\n    children:[\r\n      {\r\n        path:\"profile\",\r\n        component:ProfileComponent\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SettingRoutingModule { }\r\n","<router-outlet></router-outlet>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-setting',\r\n  templateUrl: './setting.component.html',\r\n  styleUrls: ['./setting.component.css']\r\n})\r\nexport class SettingComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { SettingRoutingModule } from './setting-routing.module';\r\nimport { SettingComponent } from './setting.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AgmCoreModule } from '@agm/core';\r\nimport { GooglePlaceModule } from 'ngx-google-places-autocomplete';\r\nimport { FormModule } from '../../form/forms.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [SettingComponent, ProfileComponent],\r\n  imports: [\r\n    CommonModule,\r\n    SettingRoutingModule,\r\n    NgbModule,\r\n    AgmCoreModule.forRoot({\r\n      apiKey: \"AIzaSyBUb3jDWJQ28vDJhuQZxkC0NXr_zycm8D0\",\r\n      libraries: [\"places\", \"drawing\", \"geometry\"],\r\n        }),\r\n        GooglePlaceModule,\r\n        FormModule,\r\n        ReactiveFormsModule\r\n  ]\r\n})\r\nexport class SettingModule { }\r\n"],"sourceRoot":"webpack:///"}
{"version":3,"sources":["webpack:///node_modules/@angular/material/button/index.d.ts.MatButton.html","webpack:///node_modules/@angular/material/button/index.d.ts.MatAnchor.html","webpack:///node_modules/@angular/material/datepicker/index.d.ts.MatCalendarHeader.html","webpack:///node_modules/@angular/material/datepicker/index.d.ts.MatCalendar.html","webpack:///node_modules/@angular/material/datepicker/index.d.ts.MatCalendarBody.html","webpack:///node_modules/@angular/material/datepicker/index.d.ts.MatDatepickerContent.html","webpack:///node_modules/@angular/material/datepicker/index.d.ts.MatDatepickerToggle.html","webpack:///node_modules/@angular/material/datepicker/index.d.ts.MatMonthView.html","webpack:///node_modules/@angular/material/datepicker/index.d.ts.MatYearView.html","webpack:///node_modules/@angular/material/datepicker/index.d.ts.MatDateRangeInput.html","webpack:///node_modules/@angular/material/datepicker/index.d.ts.MatMultiYearView.html","webpack:///node_modules/@angular/material/fesm2015/button.js","webpack:///node_modules/@angular/material/fesm2015/datepicker.js","webpack:///src/app/pages/others/analytics/analytics.component.html","webpack:///src/app/pages/others/analytics/analytics.component.ts","webpack:///src/app/pages/others/group-volume-form/group-volume-form.component.html","webpack:///src/app/pages/others/group-volume-form/group-volume-form.component.ts","webpack:///src/app/pages/others/others-routing.module.ts","webpack:///src/app/pages/others/others.component.html","webpack:///src/app/pages/others/others.component.ts","webpack:///src/app/pages/others/others.module.ts"],"names":["DEFAULT_ROUND_BUTTON_COLOR","BUTTON_HOST_ATTRIBUTES","MatButtonBase","_elementRef","_MatButtonMixinBase","MatButton","elementRef","_focusMonitor","_animationMode","isRoundButton","_hasHostAttributes","isIconButton","attr","_getHostElement","classList","add","nativeElement","color","monitor","stopMonitoring","origin","options","focusVia","disableRipple","disabled","attributes","some","attribute","hasAttribute","decorators","type","args","selector","exportAs","host","template","inputs","encapsulation","None","changeDetection","OnPush","styles","ctorParameters","String","propDecorators","ripple","MatAnchor","focusMonitor","animationMode","event","preventDefault","stopImmediatePropagation","tabIndex","MatButtonModule","imports","exports","declarations","createMissingDateImplError","provider","Error","MatDatepickerIntl","changes","calendarLabel","openCalendarLabel","prevMonthLabel","nextMonthLabel","prevYearLabel","nextYearLabel","prevMultiYearLabel","nextMultiYearLabel","switchToMonthViewLabel","switchToMultiYearViewLabel","start","end","Éµprov","factory","MatDatepickerIntl_Factory","token","providedIn","MatCalendarCell","value","displayValue","ariaLabel","enabled","cssClasses","compareValue","rawValue","MatCalendarBody","_ngZone","numCols","activeCell","isRange","cellAspectRatio","previewStart","previewEnd","selectedValueChange","previewChange","_enterHandler","_skipNextFocus","target","cell","_getCellFromElement","run","emit","_leaveHandler","isTableCell","runOutsideAngular","element","addEventListener","startValue","endValue","columnChanges","rows","_firstRowOffset","length","_cellPadding","_cellWidth","removeEventListener","rowIndex","colIndex","cellNumber","movePreview","onStable","pipe","subscribe","querySelector","focus","isStart","isEnd","isInRange","comparisonStart","comparisonEnd","_isComparisonStart","_isRangeStart","_isInRange","previousCell","previousRow","_isRangeEnd","_isComparisonEnd","nextCell","nextRow","parentNode","row","getAttribute","col","parseInt","label","todayValue","labelMinRequiredCells","node","nodeName","rangeEnabled","DateRange","MatDateSelectionModel","selection","_adapter","_selectionChanged","selectionChanged","source","next","complete","date","isDateInstance","isValid","undefined","MatSingleDateSelectionModel","adapter","_isValidDateInstance","MatRangeDateSelectionModel","compareDate","MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY","parent","MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER","provide","deps","useFactory","MAT_RANGE_DATE_SELECTION_MODEL_FACTORY","MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER","MAT_DATE_RANGE_SELECTION_STRATEGY","DefaultMatCalendarRangeStrategy","_dateAdapter","currentRange","activeDate","MAT_CALENDAR_RANGE_STRATEGY_PROVIDER_FACTORY","MAT_CALENDAR_RANGE_STRATEGY_PROVIDER","DAYS_PER_WEEK","MatMonthView","_changeDetectorRef","_dateFormats","_dir","_rangeStrategy","_rerenderSubscription","EMPTY","selectedChange","_userSelection","activeDateChange","ngDevMode","_activeDate","today","localeChanges","_init","comparisonChange","firstChange","_setRanges","selected","unsubscribe","selectedYear","getYear","selectedMonth","getMonth","selectedDate","createDate","rangeStartDate","rangeEndDate","_selected","_getDateInCurrentMonth","oldActiveDate","isRtl","_isRtl","keyCode","addCalendarDays","getDate","getNumDaysInMonth","altKey","addCalendarYears","addCalendarMonths","dateFilter","_dateSelected","_previewEnd","_previewStart","stopPropagation","_focusActiveCell","_todayDate","_getCellCompareValue","_monthLabel","getMonthNames","toLocaleUpperCase","firstOfMonth","_firstWeekOffset","getDayOfWeek","getFirstDayOfWeek","_initWeekdays","_createWeekCells","markForCheck","_matCalendarBody","previewRange","createPreview","detectChanges","firstDayOfWeek","narrowWeekdays","getDayOfWeekNames","longWeekdays","weekdays","map","long","i","narrow","_weekdays","slice","concat","daysInMonth","dateNames","getDateNames","_weeks","push","_shouldEnableDate","format","display","dateA11yLabel","cellClasses","dateClass","minDate","maxDate","_hasSameMonthAndYear","d1","d2","year","month","day","Date","getTime","selectedValue","_rangeStart","_rangeEnd","_isRange","_comparisonRangeStart","_comparisonRangeEnd","validDate","getValidDateOrNull","deserialize","clampDate","_minDate","_maxDate","yearsPerPage","yearsPerRow","MatMultiYearView","yearSelected","_todayYear","activeYear","minYearOfPage","getActiveOffset","_years","_createCellForYear","Math","min","_yearSelected","yearName","getYearName","_shouldEnableYear","firstOfYear","_selectedYear","isSameMultiYearView","_setSelectedYear","dateAdapter","date1","date2","year1","year2","startingYear","getStartingYear","floor","euclideanModulo","maxYear","a","b","MatYearView","monthSelected","normalizedDate","_monthSelected","_setSelectedMonth","_todayMonth","_getMonthInCurrentYear","_yearLabel","monthNames","_months","_createCellForMonth","monthName","monthYearA11yLabel","_shouldEnableMonth","_isYearAndMonthAfterMaxDate","_isYearAndMonthBeforeMinDate","maxMonth","minYear","minMonth","_selectedMonth","MatCalendarHeader","_intl","calendar","changeDetectorRef","stateChanges","currentView","_isSameView","monthYearLabel","maxYearOfPage","minYearName","maxYearName","formatYearRange","MatCalendar","_moveFocusOnNextTick","startView","_intlChanges","_calendarHeaderPortal","headerComponent","startAt","_currentView","focusActiveCell","change","view","_getCurrentViewComponent","monthView","yearView","multiYearView","sameDate","normalizedYear","normalizedMonth","_startAt","_clampedActiveDate","providers","matDatepickerAnimations","transformPanel","opacity","transform","fadeInCalendar","datepickerUid","MAT_DATEPICKER_SCROLL_STRATEGY","MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY","overlay","scrollStrategies","reposition","MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER","MatDatepickerContentBase","_MatDatepickerContentMixinBase","MatDatepickerContent","_model","_rangeSelectionStrategy","_subscriptions","_animationState","_animationDone","datepicker","_stateChanges","_calendar","newSelection","selectionFinished","updateSelection","isComplete","close","animations","MatDatepickerBase","_dialog","_overlay","_viewContainerRef","scrollStrategy","_document","_inputStateChanges","_touchUi","xPosition","yPosition","openedStream","closedStream","_opened","id","_focusedElementBeforeOpen","_backdropHarnessClass","_scrollStrategy","_datepickerInput","max","positionChange","_popupRef","_setConnectedPositions","getConfig","positionStrategy","opened","updatePosition","_destroyPopup","input","activeElement","touchUi","_openAsDialog","_openAsPopup","_popupComponentRef","instance","_startExitAnimation","_dialogRef","completeClose","setTimeout","open","direction","viewContainerRef","panelClass","hasBackdrop","disableClose","backdropClass","width","height","minWidth","minHeight","maxWidth","maxHeight","position","autoFocus","restoreFocus","afterClosed","_forwardContentValues","componentInstance","portal","_createPopup","attach","flexibleConnectedTo","getConnectedOverlayOrigin","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withLockedPosition","overlayConfig","create","overlayElement","setAttribute","backdropClick","detachments","keydownEvents","dispose","strategy","primaryX","secondaryX","primaryY","secondaryY","withPositions","originX","originY","overlayX","overlayY","getStartValue","_color","getThemePalette","_disabled","newValue","calendarHeaderComponent","MatDatepicker","MatDatepickerInputEvent","targetElement","MatDatepickerInputBase","dateChange","dateInput","_valueChange","_onTouched","_validatorOnChange","_cvaOnChange","_valueChangesSubscription","_localeSubscription","_parseValidator","_lastValueValid","_filterValidator","control","controlValue","_getDateFilter","_minValidator","_getMinDate","_maxValidator","_getMaxDate","model","_pendingValue","_assignValue","_getValueFromModel","_isValidValue","_formatValue","_canEmitChangeEvent","_outsideValueChanged","_isInitialized","dateInputsHaveChanged","fn","c","_validator","isDisabled","isAltDownArrow","readOnly","_openPopup","lastValueWasValid","parse","_assignValueToModel","oldDate","_parentDisabled","blur","keys","Object","key","previousValue","currentValue","MAT_DATEPICKER_VALUE_ACCESSOR","useExisting","MatDatepickerInput","multi","MAT_DATEPICKER_VALIDATORS","dateFormats","_formField","compose","_datepicker","modelValue","_min","_max","_dateFilter","_registerModel","_registerInput","validValue","matDatepicker","MatDatepickerToggleIcon","MatDatepickerToggle","defaultTabIndex","parsedTabIndex","Number","_watchStateChanges","datepickerStateChanged","inputStateChanged","datepickerToggled","_customIcon","_button","MAT_DATE_RANGE_INPUT_PARENT","MatDateRangeInputPartBase","_rangeInput","_defaultErrorStateMatcher","_injector","_parentForm","_parentFormGroup","ngControl","get","Self","updateErrorState","placeholder","_handleChildValueChange","_openDatepicker","_groupDisabled","_MatDateRangeInputBase","MatStartDate","rangeInput","defaultErrorStateMatcher","injector","parentForm","parentFormGroup","_startValidator","_endInput","range","MatEndDate","_endValidator","_startInput","MatDateRangePicker","nextUniqueId","MatDateRangeInput","focused","controlType","_ariaDescribedBy","separator","ids","join","getMirrorValue","isEmpty","_rangePicker","_hideControlPlaceholder","empty","formField","_hasFloatingLabel","_labelId","_a","_b","_getPlaceholder","rangePicker","_required","_revalidate","errorState","startEmpty","endEmpty","required","MatDatepickerModule","entryComponents","AnalyticsComponent","barChartOptions","scaleShowVerticalLines","responsive","barThickness","barChartLabels","barChartType","barChartLegend","barChartData","data","barChartColors","backgroundColor","lineChartLegend","lineChartType","e","round","random","clone","JSON","stringify","GroupVolumeFormComponent","title","routes","path","component","children","OthersRoutingModule","OthersComponent","OthersModule"],"mappings":"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","file":"pages-others-others-module-ngfactory-es5.js","sourcesContent":["<span class=\"mat-button-wrapper\"><ng-content></ng-content></span>\n<span matRipple class=\"mat-button-ripple\"\n      [class.mat-button-ripple-round]=\"isRoundButton || isIconButton\"\n      [matRippleDisabled]=\"_isRippleDisabled()\"\n      [matRippleCentered]=\"isIconButton\"\n      [matRippleTrigger]=\"_getHostElement()\"></span>\n<span class=\"mat-button-focus-overlay\"></span>\n","<span class=\"mat-button-wrapper\"><ng-content></ng-content></span>\n<span matRipple class=\"mat-button-ripple\"\n      [class.mat-button-ripple-round]=\"isRoundButton || isIconButton\"\n      [matRippleDisabled]=\"_isRippleDisabled()\"\n      [matRippleCentered]=\"isIconButton\"\n      [matRippleTrigger]=\"_getHostElement()\"></span>\n<span class=\"mat-button-focus-overlay\"></span>\n","<div class=\"mat-calendar-header\">\n  <div class=\"mat-calendar-controls\">\n    <button mat-button type=\"button\" class=\"mat-calendar-period-button\"\n            (click)=\"currentPeriodClicked()\" [attr.aria-label]=\"periodButtonLabel\"\n            cdkAriaLive=\"polite\">\n      {{periodButtonText}}\n      <div class=\"mat-calendar-arrow\"\n           [class.mat-calendar-invert]=\"calendar.currentView != 'month'\"></div>\n    </button>\n\n    <div class=\"mat-calendar-spacer\"></div>\n\n    <ng-content></ng-content>\n\n    <button mat-icon-button type=\"button\" class=\"mat-calendar-previous-button\"\n            [disabled]=\"!previousEnabled()\" (click)=\"previousClicked()\"\n            [attr.aria-label]=\"prevButtonLabel\">\n    </button>\n\n    <button mat-icon-button type=\"button\" class=\"mat-calendar-next-button\"\n            [disabled]=\"!nextEnabled()\" (click)=\"nextClicked()\"\n            [attr.aria-label]=\"nextButtonLabel\">\n    </button>\n  </div>\n</div>\n","<ng-template [cdkPortalOutlet]=\"_calendarHeaderPortal\"></ng-template>\n\n<div class=\"mat-calendar-content\" [ngSwitch]=\"currentView\" cdkMonitorSubtreeFocus tabindex=\"-1\">\n  <mat-month-view\n      *ngSwitchCase=\"'month'\"\n      [(activeDate)]=\"activeDate\"\n      [selected]=\"selected\"\n      [dateFilter]=\"dateFilter\"\n      [maxDate]=\"maxDate\"\n      [minDate]=\"minDate\"\n      [dateClass]=\"dateClass\"\n      [comparisonStart]=\"comparisonStart\"\n      [comparisonEnd]=\"comparisonEnd\"\n      (_userSelection)=\"_dateSelected($event)\">\n  </mat-month-view>\n\n  <mat-year-view\n      *ngSwitchCase=\"'year'\"\n      [(activeDate)]=\"activeDate\"\n      [selected]=\"selected\"\n      [dateFilter]=\"dateFilter\"\n      [maxDate]=\"maxDate\"\n      [minDate]=\"minDate\"\n      [dateClass]=\"dateClass\"\n      (monthSelected)=\"_monthSelectedInYearView($event)\"\n      (selectedChange)=\"_goToDateInView($event, 'month')\">\n  </mat-year-view>\n\n  <mat-multi-year-view\n      *ngSwitchCase=\"'multi-year'\"\n      [(activeDate)]=\"activeDate\"\n      [selected]=\"selected\"\n      [dateFilter]=\"dateFilter\"\n      [maxDate]=\"maxDate\"\n      [minDate]=\"minDate\"\n      [dateClass]=\"dateClass\"\n      (yearSelected)=\"_yearSelectedInMultiYearView($event)\"\n      (selectedChange)=\"_goToDateInView($event, 'year')\">\n  </mat-multi-year-view>\n</div>\n","<!--\n  If there's not enough space in the first row, create a separate label row. We mark this row as\n  aria-hidden because we don't want it to be read out as one of the weeks in the month.\n-->\n<tr *ngIf=\"_firstRowOffset < labelMinRequiredCells\" aria-hidden=\"true\">\n  <td class=\"mat-calendar-body-label\"\n      [attr.colspan]=\"numCols\"\n      [style.paddingTop]=\"_cellPadding\"\n      [style.paddingBottom]=\"_cellPadding\">\n    {{label}}\n  </td>\n</tr>\n\n<!-- Create the first row separately so we can include a special spacer cell. -->\n<tr *ngFor=\"let row of rows; let rowIndex = index\" role=\"row\">\n  <!--\n    We mark this cell as aria-hidden so it doesn't get read out as one of the days in the week.\n    The aspect ratio of the table cells is maintained by setting the top and bottom padding as a\n    percentage of the width (a variant of the trick described here:\n    https://www.w3schools.com/howto/howto_css_aspect_ratio.asp).\n  -->\n  <td *ngIf=\"rowIndex === 0 && _firstRowOffset\"\n      aria-hidden=\"true\"\n      class=\"mat-calendar-body-label\"\n      [attr.colspan]=\"_firstRowOffset\"\n      [style.paddingTop]=\"_cellPadding\"\n      [style.paddingBottom]=\"_cellPadding\">\n    {{_firstRowOffset >= labelMinRequiredCells ? label : ''}}\n  </td>\n  <td *ngFor=\"let item of row; let colIndex = index\"\n      role=\"gridcell\"\n      class=\"mat-calendar-body-cell\"\n      [ngClass]=\"item.cssClasses\"\n      [tabindex]=\"_isActiveCell(rowIndex, colIndex) ? 0 : -1\"\n      [attr.data-mat-row]=\"rowIndex\"\n      [attr.data-mat-col]=\"colIndex\"\n      [class.mat-calendar-body-disabled]=\"!item.enabled\"\n      [class.mat-calendar-body-active]=\"_isActiveCell(rowIndex, colIndex)\"\n      [class.mat-calendar-body-range-start]=\"_isRangeStart(item.compareValue)\"\n      [class.mat-calendar-body-range-end]=\"_isRangeEnd(item.compareValue)\"\n      [class.mat-calendar-body-in-range]=\"_isInRange(item.compareValue)\"\n      [class.mat-calendar-body-comparison-bridge-start]=\"_isComparisonBridgeStart(item.compareValue, rowIndex, colIndex)\"\n      [class.mat-calendar-body-comparison-bridge-end]=\"_isComparisonBridgeEnd(item.compareValue, rowIndex, colIndex)\"\n      [class.mat-calendar-body-comparison-start]=\"_isComparisonStart(item.compareValue)\"\n      [class.mat-calendar-body-comparison-end]=\"_isComparisonEnd(item.compareValue)\"\n      [class.mat-calendar-body-in-comparison-range]=\"_isInComparisonRange(item.compareValue)\"\n      [class.mat-calendar-body-preview-start]=\"_isPreviewStart(item.compareValue)\"\n      [class.mat-calendar-body-preview-end]=\"_isPreviewEnd(item.compareValue)\"\n      [class.mat-calendar-body-in-preview]=\"_isInPreview(item.compareValue)\"\n      [attr.aria-label]=\"item.ariaLabel\"\n      [attr.aria-disabled]=\"!item.enabled || null\"\n      [attr.aria-selected]=\"_isSelected(item.compareValue)\"\n      (click)=\"_cellClicked(item, $event)\"\n      [style.width]=\"_cellWidth\"\n      [style.paddingTop]=\"_cellPadding\"\n      [style.paddingBottom]=\"_cellPadding\">\n      <div class=\"mat-calendar-body-cell-content mat-focus-indicator\"\n        [class.mat-calendar-body-selected]=\"_isSelected(item.compareValue)\"\n        [class.mat-calendar-body-comparison-identical]=\"_isComparisonIdentical(item.compareValue)\"\n        [class.mat-calendar-body-today]=\"todayValue === item.compareValue\">\n        {{item.displayValue}}\n      </div>\n      <div class=\"mat-calendar-body-cell-preview\"></div>\n  </td>\n</tr>\n","<mat-calendar cdkTrapFocus\n    [id]=\"datepicker.id\"\n    [ngClass]=\"datepicker.panelClass\"\n    [startAt]=\"datepicker.startAt\"\n    [startView]=\"datepicker.startView\"\n    [minDate]=\"datepicker._getMinDate()\"\n    [maxDate]=\"datepicker._getMaxDate()\"\n    [dateFilter]=\"datepicker._getDateFilter()\"\n    [headerComponent]=\"datepicker.calendarHeaderComponent\"\n    [selected]=\"_getSelected()\"\n    [dateClass]=\"datepicker.dateClass\"\n    [comparisonStart]=\"comparisonStart\"\n    [comparisonEnd]=\"comparisonEnd\"\n    [@fadeInCalendar]=\"'enter'\"\n    (yearSelected)=\"datepicker._selectYear($event)\"\n    (monthSelected)=\"datepicker._selectMonth($event)\"\n    (_userSelection)=\"_handleUserSelection($event)\">\n</mat-calendar>\n","<button\n  #button\n  mat-icon-button\n  type=\"button\"\n  [attr.aria-haspopup]=\"datepicker ? 'dialog' : null\"\n  [attr.aria-label]=\"_intl.openCalendarLabel\"\n  [attr.tabindex]=\"disabled ? -1 : tabIndex\"\n  [disabled]=\"disabled\"\n  [disableRipple]=\"disableRipple\"\n  (click)=\"_open($event)\">\n\n  <svg\n    *ngIf=\"!_customIcon\"\n    class=\"mat-datepicker-toggle-default-icon\"\n    viewBox=\"0 0 24 24\"\n    width=\"24px\"\n    height=\"24px\"\n    fill=\"currentColor\"\n    focusable=\"false\">\n    <path d=\"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\"/>\n  </svg>\n\n  <ng-content select=\"[matDatepickerToggleIcon]\"></ng-content>\n</button>\n","<table class=\"mat-calendar-table\" role=\"presentation\">\n  <thead class=\"mat-calendar-table-header\">\n    <tr>\n      <th scope=\"col\" *ngFor=\"let day of _weekdays\" [attr.aria-label]=\"day.long\">{{day.narrow}}</th>\n    </tr>\n    <tr><th class=\"mat-calendar-table-header-divider\" colspan=\"7\" aria-hidden=\"true\"></th></tr>\n  </thead>\n  <tbody mat-calendar-body\n         [label]=\"_monthLabel\"\n         [rows]=\"_weeks\"\n         [todayValue]=\"_todayDate!\"\n         [startValue]=\"_rangeStart!\"\n         [endValue]=\"_rangeEnd!\"\n         [comparisonStart]=\"_comparisonRangeStart\"\n         [comparisonEnd]=\"_comparisonRangeEnd\"\n         [previewStart]=\"_previewStart\"\n         [previewEnd]=\"_previewEnd\"\n         [isRange]=\"_isRange\"\n         [labelMinRequiredCells]=\"3\"\n         [activeCell]=\"_dateAdapter.getDate(activeDate) - 1\"\n         (selectedValueChange)=\"_dateSelected($event)\"\n         (previewChange)=\"_previewChanged($event)\"\n         (keydown)=\"_handleCalendarBodyKeydown($event)\">\n  </tbody>\n</table>\n","<table class=\"mat-calendar-table\" role=\"presentation\">\n  <thead class=\"mat-calendar-table-header\">\n    <tr><th class=\"mat-calendar-table-header-divider\" colspan=\"4\"></th></tr>\n  </thead>\n  <tbody mat-calendar-body\n         [label]=\"_yearLabel\"\n         [rows]=\"_months\"\n         [todayValue]=\"_todayMonth!\"\n         [startValue]=\"_selectedMonth!\"\n         [endValue]=\"_selectedMonth!\"\n         [labelMinRequiredCells]=\"2\"\n         [numCols]=\"4\"\n         [cellAspectRatio]=\"4 / 7\"\n         [activeCell]=\"_dateAdapter.getMonth(activeDate)\"\n         (selectedValueChange)=\"_monthSelected($event)\"\n         (keydown)=\"_handleCalendarBodyKeydown($event)\">\n  </tbody>\n</table>\n","<div\n  class=\"mat-date-range-input-container\"\n  cdkMonitorSubtreeFocus\n  (cdkFocusChange)=\"focused = $event !== null\">\n  <div class=\"mat-date-range-input-start-wrapper\">\n    <ng-content select=\"input[matStartDate]\"></ng-content>\n    <span\n      class=\"mat-date-range-input-mirror\"\n      aria-hidden=\"true\">{{_getInputMirrorValue()}}</span>\n  </div>\n\n  <span\n    class=\"mat-date-range-input-separator\"\n    [class.mat-date-range-input-separator-hidden]=\"_shouldHideSeparator()\">{{separator}}</span>\n\n  <div class=\"mat-date-range-input-end-wrapper\">\n    <ng-content select=\"input[matEndDate]\"></ng-content>\n  </div>\n</div>\n\n","<table class=\"mat-calendar-table\" role=\"presentation\">\n  <thead class=\"mat-calendar-table-header\">\n    <tr><th class=\"mat-calendar-table-header-divider\" colspan=\"4\"></th></tr>\n  </thead>\n  <tbody mat-calendar-body\n         [rows]=\"_years\"\n         [todayValue]=\"_todayYear\"\n         [startValue]=\"_selectedYear!\"\n         [endValue]=\"_selectedYear!\"\n         [numCols]=\"4\"\n         [cellAspectRatio]=\"4 / 7\"\n         [activeCell]=\"_getActiveCell()\"\n         (selectedValueChange)=\"_yearSelected($event)\"\n         (keydown)=\"_handleCalendarBodyKeydown($event)\">\n  </tbody>\n</table>\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Optional, Inject, ViewChild, Input, NgModule } from '@angular/core';\nimport { mixinColor, mixinDisabled, mixinDisableRipple, MatRipple, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Default color palette for round buttons (mat-fab and mat-mini-fab) */\nconst DEFAULT_ROUND_BUTTON_COLOR = 'accent';\n/**\n * List of classes to add to MatButton instances based on host attributes to\n * style as different variants.\n */\nconst BUTTON_HOST_ATTRIBUTES = [\n    'mat-button',\n    'mat-flat-button',\n    'mat-icon-button',\n    'mat-raised-button',\n    'mat-stroked-button',\n    'mat-mini-fab',\n    'mat-fab',\n];\n// Boilerplate for applying mixins to MatButton.\n/** @docs-private */\nclass MatButtonBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatButtonMixinBase = mixinColor(mixinDisabled(mixinDisableRipple(MatButtonBase)));\n/**\n * Material design button.\n */\nclass MatButton extends _MatButtonMixinBase {\n    constructor(elementRef, _focusMonitor, _animationMode) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._animationMode = _animationMode;\n        /** Whether the button is round. */\n        this.isRoundButton = this._hasHostAttributes('mat-fab', 'mat-mini-fab');\n        /** Whether the button is icon button. */\n        this.isIconButton = this._hasHostAttributes('mat-icon-button');\n        // For each of the variant selectors that is present in the button's host\n        // attributes, add the correct corresponding class.\n        for (const attr of BUTTON_HOST_ATTRIBUTES) {\n            if (this._hasHostAttributes(attr)) {\n                this._getHostElement().classList.add(attr);\n            }\n        }\n        // Add a class that applies to all buttons. This makes it easier to target if somebody\n        // wants to target all Material buttons. We do it here rather than `host` to ensure that\n        // the class is applied to derived classes.\n        elementRef.nativeElement.classList.add('mat-button-base');\n        if (this.isRoundButton) {\n            this.color = DEFAULT_ROUND_BUTTON_COLOR;\n        }\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._elementRef, true);\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /** Focuses the button. */\n    focus(origin = 'program', options) {\n        this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n    }\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    /** Gets whether the button has one of the given attributes. */\n    _hasHostAttributes(...attributes) {\n        return attributes.some(attribute => this._getHostElement().hasAttribute(attribute));\n    }\n}\nMatButton.decorators = [\n    { type: Component, args: [{\n                selector: `button[mat-button], button[mat-raised-button], button[mat-icon-button],\n             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],\n             button[mat-flat-button]`,\n                exportAs: 'matButton',\n                host: {\n                    '[attr.disabled]': 'disabled || null',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    // Add a class for disabled button styling instead of the using attribute\n                    // selector or pseudo-selector.  This allows users to create focusabled\n                    // disabled buttons without recreating the styles.\n                    '[class.mat-button-disabled]': 'disabled',\n                    'class': 'mat-focus-indicator',\n                },\n                template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span>\\n<span matRipple class=\\\"mat-button-ripple\\\"\\n      [class.mat-button-ripple-round]=\\\"isRoundButton || isIconButton\\\"\\n      [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n      [matRippleCentered]=\\\"isIconButton\\\"\\n      [matRippleTrigger]=\\\"_getHostElement()\\\"></span>\\n<span class=\\\"mat-button-focus-overlay\\\"></span>\\n\",\n                inputs: ['disabled', 'disableRipple', 'color'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button.mat-button-disabled,.mat-icon-button.mat-button-disabled,.mat-stroked-button.mat-button-disabled,.mat-flat-button.mat-button-disabled{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button.mat-button-disabled{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab.mat-button-disabled{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab.mat-button-disabled{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}.cdk-high-contrast-active .mat-button-base.cdk-keyboard-focused,.cdk-high-contrast-active .mat-button-base.cdk-program-focused{outline:solid 3px}\\n\"]\n            },] }\n];\nMatButton.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatButton.propDecorators = {\n    ripple: [{ type: ViewChild, args: [MatRipple,] }]\n};\n/**\n * Material design anchor button.\n */\nclass MatAnchor extends MatButton {\n    constructor(focusMonitor, elementRef, animationMode) {\n        super(elementRef, focusMonitor, animationMode);\n    }\n    _haltDisabledEvents(event) {\n        // A disabled button shouldn't apply any actions\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\nMatAnchor.decorators = [\n    { type: Component, args: [{\n                selector: `a[mat-button], a[mat-raised-button], a[mat-icon-button], a[mat-fab],\n             a[mat-mini-fab], a[mat-stroked-button], a[mat-flat-button]`,\n                exportAs: 'matButton, matAnchor',\n                host: {\n                    // Note that we ignore the user-specified tabindex when it's disabled for\n                    // consistency with the `mat-button` applied on native buttons where even\n                    // though they have an index, they're not tabbable.\n                    '[attr.tabindex]': 'disabled ? -1 : (tabIndex || 0)',\n                    '[attr.disabled]': 'disabled || null',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '(click)': '_haltDisabledEvents($event)',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    '[class.mat-button-disabled]': 'disabled',\n                    'class': 'mat-focus-indicator',\n                },\n                inputs: ['disabled', 'disableRipple', 'color'],\n                template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span>\\n<span matRipple class=\\\"mat-button-ripple\\\"\\n      [class.mat-button-ripple-round]=\\\"isRoundButton || isIconButton\\\"\\n      [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n      [matRippleCentered]=\\\"isIconButton\\\"\\n      [matRippleTrigger]=\\\"_getHostElement()\\\"></span>\\n<span class=\\\"mat-button-focus-overlay\\\"></span>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button.mat-button-disabled,.mat-icon-button.mat-button-disabled,.mat-stroked-button.mat-button-disabled,.mat-flat-button.mat-button-disabled{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button.mat-button-disabled{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab.mat-button-disabled{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab.mat-button-disabled{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}.cdk-high-contrast-active .mat-button-base.cdk-keyboard-focused,.cdk-high-contrast-active .mat-button-base.cdk-program-focused{outline:solid 3px}\\n\"]\n            },] }\n];\nMatAnchor.ctorParameters = () => [\n    { type: FocusMonitor },\n    { type: ElementRef },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatAnchor.propDecorators = {\n    tabIndex: [{ type: Input }]\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatButtonModule {\n}\nMatButtonModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    MatRippleModule,\n                    MatCommonModule,\n                ],\n                exports: [\n                    MatButton,\n                    MatAnchor,\n                    MatCommonModule,\n                ],\n                declarations: [\n                    MatButton,\n                    MatAnchor,\n                ],\n            },] }\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatAnchor, MatButton, MatButtonModule };\n//# sourceMappingURL=button.js.map\n","import { A11yModule } from '@angular/cdk/a11y';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { ComponentPortal, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { ÉµÉµdefineInjectable, Injectable, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, NgZone, Input, Output, Directive, Optional, SkipSelf, InjectionToken, ChangeDetectorRef, Inject, ViewChild, forwardRef, ViewContainerRef, Attribute, ContentChild, InjectFlags, Injector, Self, NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialog, MatDialogModule } from '@angular/material/dialog';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { DateAdapter, MAT_DATE_FORMATS, mixinColor, ErrorStateMatcher, mixinErrorState } from '@angular/material/core';\nimport { Subject, Subscription, merge, of } from 'rxjs';\nimport { ESCAPE, SPACE, ENTER, PAGE_DOWN, PAGE_UP, END, HOME, DOWN_ARROW, UP_ARROW, RIGHT_ARROW, LEFT_ARROW, BACKSPACE } from '@angular/cdk/keycodes';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { take, startWith, filter } from 'rxjs/operators';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, Validators, NgControl, NgForm, FormGroupDirective, ControlContainer } from '@angular/forms';\nimport { MatFormField, MAT_FORM_FIELD, MatFormFieldControl } from '@angular/material/form-field';\nimport { MAT_INPUT_VALUE_ACCESSOR } from '@angular/material/input';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nfunction createMissingDateImplError(provider) {\n    return Error(`MatDatepicker: No provider found for ${provider}. You must import one of the following ` +\n        `modules at your application root: MatNativeDateModule, MatMomentDateModule, or provide a ` +\n        `custom implementation.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Datepicker data that requires internationalization. */\nclass MatDatepickerIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /** A label for the calendar popup (used by screen readers). */\n        this.calendarLabel = 'Calendar';\n        /** A label for the button used to open the calendar popup (used by screen readers). */\n        this.openCalendarLabel = 'Open calendar';\n        /** A label for the previous month button (used by screen readers). */\n        this.prevMonthLabel = 'Previous month';\n        /** A label for the next month button (used by screen readers). */\n        this.nextMonthLabel = 'Next month';\n        /** A label for the previous year button (used by screen readers). */\n        this.prevYearLabel = 'Previous year';\n        /** A label for the next year button (used by screen readers). */\n        this.nextYearLabel = 'Next year';\n        /** A label for the previous multi-year button (used by screen readers). */\n        this.prevMultiYearLabel = 'Previous 20 years';\n        /** A label for the next multi-year button (used by screen readers). */\n        this.nextMultiYearLabel = 'Next 20 years';\n        /** A label for the 'switch to month view' button (used by screen readers). */\n        this.switchToMonthViewLabel = 'Choose date';\n        /** A label for the 'switch to year view' button (used by screen readers). */\n        this.switchToMultiYearViewLabel = 'Choose month and year';\n    }\n    /** Formats a range of years. */\n    formatYearRange(start, end) {\n        return `${start} \\u2013 ${end}`;\n    }\n}\nMatDatepickerIntl.Éµprov = ÉµÉµdefineInjectable({ factory: function MatDatepickerIntl_Factory() { return new MatDatepickerIntl(); }, token: MatDatepickerIntl, providedIn: \"root\" });\nMatDatepickerIntl.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] }\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An internal class that represents the data corresponding to a single calendar cell.\n * @docs-private\n */\nclass MatCalendarCell {\n    constructor(value, displayValue, ariaLabel, enabled, cssClasses = {}, compareValue = value, rawValue) {\n        this.value = value;\n        this.displayValue = displayValue;\n        this.ariaLabel = ariaLabel;\n        this.enabled = enabled;\n        this.cssClasses = cssClasses;\n        this.compareValue = compareValue;\n        this.rawValue = rawValue;\n    }\n}\n/**\n * An internal component used to display calendar data in a table.\n * @docs-private\n */\nclass MatCalendarBody {\n    constructor(_elementRef, _ngZone) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        /** The number of columns in the table. */\n        this.numCols = 7;\n        /** The cell number of the active cell in the table. */\n        this.activeCell = 0;\n        /** Whether a range is being selected. */\n        this.isRange = false;\n        /**\n         * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\n         * maintained even as the table resizes.\n         */\n        this.cellAspectRatio = 1;\n        /** Start of the preview range. */\n        this.previewStart = null;\n        /** End of the preview range. */\n        this.previewEnd = null;\n        /** Emits when a new value is selected. */\n        this.selectedValueChange = new EventEmitter();\n        /** Emits when the preview has changed as a result of a user action. */\n        this.previewChange = new EventEmitter();\n        /**\n         * Event handler for when the user enters an element\n         * inside the calendar body (e.g. by hovering in or focus).\n         */\n        this._enterHandler = (event) => {\n            if (this._skipNextFocus && event.type === 'focus') {\n                this._skipNextFocus = false;\n                return;\n            }\n            // We only need to hit the zone when we're selecting a range.\n            if (event.target && this.isRange) {\n                const cell = this._getCellFromElement(event.target);\n                if (cell) {\n                    this._ngZone.run(() => this.previewChange.emit({ value: cell.enabled ? cell : null, event }));\n                }\n            }\n        };\n        /**\n         * Event handler for when the user's pointer leaves an element\n         * inside the calendar body (e.g. by hovering out or blurring).\n         */\n        this._leaveHandler = (event) => {\n            // We only need to hit the zone when we're selecting a range.\n            if (this.previewEnd !== null && this.isRange) {\n                // Only reset the preview end value when leaving cells. This looks better, because\n                // we have a gap between the cells and the rows and we don't want to remove the\n                // range just for it to show up again when the user moves a few pixels to the side.\n                if (event.target && isTableCell(event.target)) {\n                    this._ngZone.run(() => this.previewChange.emit({ value: null, event }));\n                }\n            }\n        };\n        _ngZone.runOutsideAngular(() => {\n            const element = _elementRef.nativeElement;\n            element.addEventListener('mouseenter', this._enterHandler, true);\n            element.addEventListener('focus', this._enterHandler, true);\n            element.addEventListener('mouseleave', this._leaveHandler, true);\n            element.addEventListener('blur', this._leaveHandler, true);\n        });\n    }\n    /** Called when a cell is clicked. */\n    _cellClicked(cell, event) {\n        if (cell.enabled) {\n            this.selectedValueChange.emit({ value: cell.value, event });\n        }\n    }\n    /** Returns whether a cell should be marked as selected. */\n    _isSelected(value) {\n        return this.startValue === value || this.endValue === value;\n    }\n    ngOnChanges(changes) {\n        const columnChanges = changes['numCols'];\n        const { rows, numCols } = this;\n        if (changes['rows'] || columnChanges) {\n            this._firstRowOffset = rows && rows.length && rows[0].length ? numCols - rows[0].length : 0;\n        }\n        if (changes['cellAspectRatio'] || columnChanges || !this._cellPadding) {\n            this._cellPadding = `${50 * this.cellAspectRatio / numCols}%`;\n        }\n        if (columnChanges || !this._cellWidth) {\n            this._cellWidth = `${100 / numCols}%`;\n        }\n    }\n    ngOnDestroy() {\n        const element = this._elementRef.nativeElement;\n        element.removeEventListener('mouseenter', this._enterHandler, true);\n        element.removeEventListener('focus', this._enterHandler, true);\n        element.removeEventListener('mouseleave', this._leaveHandler, true);\n        element.removeEventListener('blur', this._leaveHandler, true);\n    }\n    /** Returns whether a cell is active. */\n    _isActiveCell(rowIndex, colIndex) {\n        let cellNumber = rowIndex * this.numCols + colIndex;\n        // Account for the fact that the first row may not have as many cells.\n        if (rowIndex) {\n            cellNumber -= this._firstRowOffset;\n        }\n        return cellNumber == this.activeCell;\n    }\n    /** Focuses the active cell after the microtask queue is empty. */\n    _focusActiveCell(movePreview = true) {\n        this._ngZone.runOutsideAngular(() => {\n            this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n                const activeCell = this._elementRef.nativeElement.querySelector('.mat-calendar-body-active');\n                if (activeCell) {\n                    if (!movePreview) {\n                        this._skipNextFocus = true;\n                    }\n                    activeCell.focus();\n                }\n            });\n        });\n    }\n    /** Gets whether a value is the start of the main range. */\n    _isRangeStart(value) {\n        return isStart(value, this.startValue, this.endValue);\n    }\n    /** Gets whether a value is the end of the main range. */\n    _isRangeEnd(value) {\n        return isEnd(value, this.startValue, this.endValue);\n    }\n    /** Gets whether a value is within the currently-selected range. */\n    _isInRange(value) {\n        return isInRange(value, this.startValue, this.endValue, this.isRange);\n    }\n    /** Gets whether a value is the start of the comparison range. */\n    _isComparisonStart(value) {\n        return isStart(value, this.comparisonStart, this.comparisonEnd);\n    }\n    /** Whether the cell is a start bridge cell between the main and comparison ranges. */\n    _isComparisonBridgeStart(value, rowIndex, colIndex) {\n        if (!this._isComparisonStart(value) || this._isRangeStart(value) || !this._isInRange(value)) {\n            return false;\n        }\n        let previousCell = this.rows[rowIndex][colIndex - 1];\n        if (!previousCell) {\n            const previousRow = this.rows[rowIndex - 1];\n            previousCell = previousRow && previousRow[previousRow.length - 1];\n        }\n        return previousCell && !this._isRangeEnd(previousCell.compareValue);\n    }\n    /** Whether the cell is an end bridge cell between the main and comparison ranges. */\n    _isComparisonBridgeEnd(value, rowIndex, colIndex) {\n        if (!this._isComparisonEnd(value) || this._isRangeEnd(value) || !this._isInRange(value)) {\n            return false;\n        }\n        let nextCell = this.rows[rowIndex][colIndex + 1];\n        if (!nextCell) {\n            const nextRow = this.rows[rowIndex + 1];\n            nextCell = nextRow && nextRow[0];\n        }\n        return nextCell && !this._isRangeStart(nextCell.compareValue);\n    }\n    /** Gets whether a value is the end of the comparison range. */\n    _isComparisonEnd(value) {\n        return isEnd(value, this.comparisonStart, this.comparisonEnd);\n    }\n    /** Gets whether a value is within the current comparison range. */\n    _isInComparisonRange(value) {\n        return isInRange(value, this.comparisonStart, this.comparisonEnd, this.isRange);\n    }\n    /**\n     * Gets whether a value is the same as the start and end of the comparison range.\n     * For context, the functions that we use to determine whether something is the start/end of\n     * a range don't allow for the start and end to be on the same day, because we'd have to use\n     * much more specific CSS selectors to style them correctly in all scenarios. This is fine for\n     * the regular range, because when it happens, the selected styles take over and still show where\n     * the range would've been, however we don't have these selected styles for a comparison range.\n     * This function is used to apply a class that serves the same purpose as the one for selected\n     * dates, but it only applies in the context of a comparison range.\n     */\n    _isComparisonIdentical(value) {\n        // Note that we don't need to null check the start/end\n        // here, because the `value` will always be defined.\n        return this.comparisonStart === this.comparisonEnd && value === this.comparisonStart;\n    }\n    /** Gets whether a value is the start of the preview range. */\n    _isPreviewStart(value) {\n        return isStart(value, this.previewStart, this.previewEnd);\n    }\n    /** Gets whether a value is the end of the preview range. */\n    _isPreviewEnd(value) {\n        return isEnd(value, this.previewStart, this.previewEnd);\n    }\n    /** Gets whether a value is inside the preview range. */\n    _isInPreview(value) {\n        return isInRange(value, this.previewStart, this.previewEnd, this.isRange);\n    }\n    /** Finds the MatCalendarCell that corresponds to a DOM node. */\n    _getCellFromElement(element) {\n        let cell;\n        if (isTableCell(element)) {\n            cell = element;\n        }\n        else if (isTableCell(element.parentNode)) {\n            cell = element.parentNode;\n        }\n        if (cell) {\n            const row = cell.getAttribute('data-mat-row');\n            const col = cell.getAttribute('data-mat-col');\n            if (row && col) {\n                return this.rows[parseInt(row)][parseInt(col)];\n            }\n        }\n        return null;\n    }\n}\nMatCalendarBody.decorators = [\n    { type: Component, args: [{\n                selector: '[mat-calendar-body]',\n                template: \"<!--\\n  If there's not enough space in the first row, create a separate label row. We mark this row as\\n  aria-hidden because we don't want it to be read out as one of the weeks in the month.\\n-->\\n<tr *ngIf=\\\"_firstRowOffset < labelMinRequiredCells\\\" aria-hidden=\\\"true\\\">\\n  <td class=\\\"mat-calendar-body-label\\\"\\n      [attr.colspan]=\\\"numCols\\\"\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\n    {{label}}\\n  </td>\\n</tr>\\n\\n<!-- Create the first row separately so we can include a special spacer cell. -->\\n<tr *ngFor=\\\"let row of rows; let rowIndex = index\\\" role=\\\"row\\\">\\n  <!--\\n    We mark this cell as aria-hidden so it doesn't get read out as one of the days in the week.\\n    The aspect ratio of the table cells is maintained by setting the top and bottom padding as a\\n    percentage of the width (a variant of the trick described here:\\n    https://www.w3schools.com/howto/howto_css_aspect_ratio.asp).\\n  -->\\n  <td *ngIf=\\\"rowIndex === 0 && _firstRowOffset\\\"\\n      aria-hidden=\\\"true\\\"\\n      class=\\\"mat-calendar-body-label\\\"\\n      [attr.colspan]=\\\"_firstRowOffset\\\"\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\n    {{_firstRowOffset >= labelMinRequiredCells ? label : ''}}\\n  </td>\\n  <td *ngFor=\\\"let item of row; let colIndex = index\\\"\\n      role=\\\"gridcell\\\"\\n      class=\\\"mat-calendar-body-cell\\\"\\n      [ngClass]=\\\"item.cssClasses\\\"\\n      [tabindex]=\\\"_isActiveCell(rowIndex, colIndex) ? 0 : -1\\\"\\n      [attr.data-mat-row]=\\\"rowIndex\\\"\\n      [attr.data-mat-col]=\\\"colIndex\\\"\\n      [class.mat-calendar-body-disabled]=\\\"!item.enabled\\\"\\n      [class.mat-calendar-body-active]=\\\"_isActiveCell(rowIndex, colIndex)\\\"\\n      [class.mat-calendar-body-range-start]=\\\"_isRangeStart(item.compareValue)\\\"\\n      [class.mat-calendar-body-range-end]=\\\"_isRangeEnd(item.compareValue)\\\"\\n      [class.mat-calendar-body-in-range]=\\\"_isInRange(item.compareValue)\\\"\\n      [class.mat-calendar-body-comparison-bridge-start]=\\\"_isComparisonBridgeStart(item.compareValue, rowIndex, colIndex)\\\"\\n      [class.mat-calendar-body-comparison-bridge-end]=\\\"_isComparisonBridgeEnd(item.compareValue, rowIndex, colIndex)\\\"\\n      [class.mat-calendar-body-comparison-start]=\\\"_isComparisonStart(item.compareValue)\\\"\\n      [class.mat-calendar-body-comparison-end]=\\\"_isComparisonEnd(item.compareValue)\\\"\\n      [class.mat-calendar-body-in-comparison-range]=\\\"_isInComparisonRange(item.compareValue)\\\"\\n      [class.mat-calendar-body-preview-start]=\\\"_isPreviewStart(item.compareValue)\\\"\\n      [class.mat-calendar-body-preview-end]=\\\"_isPreviewEnd(item.compareValue)\\\"\\n      [class.mat-calendar-body-in-preview]=\\\"_isInPreview(item.compareValue)\\\"\\n      [attr.aria-label]=\\\"item.ariaLabel\\\"\\n      [attr.aria-disabled]=\\\"!item.enabled || null\\\"\\n      [attr.aria-selected]=\\\"_isSelected(item.compareValue)\\\"\\n      (click)=\\\"_cellClicked(item, $event)\\\"\\n      [style.width]=\\\"_cellWidth\\\"\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\n      <div class=\\\"mat-calendar-body-cell-content mat-focus-indicator\\\"\\n        [class.mat-calendar-body-selected]=\\\"_isSelected(item.compareValue)\\\"\\n        [class.mat-calendar-body-comparison-identical]=\\\"_isComparisonIdentical(item.compareValue)\\\"\\n        [class.mat-calendar-body-today]=\\\"todayValue === item.compareValue\\\">\\n        {{item.displayValue}}\\n      </div>\\n      <div class=\\\"mat-calendar-body-cell-preview\\\"></div>\\n  </td>\\n</tr>\\n\",\n                host: {\n                    'class': 'mat-calendar-body',\n                    'role': 'grid',\n                    'aria-readonly': 'true'\n                },\n                exportAs: 'matCalendarBody',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-calendar-body{min-width:224px}.mat-calendar-body-label{height:0;line-height:0;text-align:left;padding-left:4.7142857143%;padding-right:4.7142857143%}.mat-calendar-body-cell{position:relative;height:0;line-height:0;text-align:center;outline:none;cursor:pointer}.mat-calendar-body-cell::before,.mat-calendar-body-cell::after,.mat-calendar-body-cell-preview{content:\\\"\\\";position:absolute;top:5%;left:0;z-index:0;box-sizing:border-box;height:90%;width:100%}.mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-start::after,.mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,.mat-calendar-body-comparison-start::after,.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:5%;width:95%;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,[dir=rtl] .mat-calendar-body-comparison-start::after,[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:0;border-radius:0;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,.mat-calendar-body-comparison-end::after,.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}[dir=rtl] .mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,[dir=rtl] .mat-calendar-body-comparison-end::after,[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{left:5%;border-radius:0;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-comparison-bridge-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-bridge-end.mat-calendar-body-range-start::after{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end.mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-end.mat-calendar-body-range-start::after{width:90%}.mat-calendar-body-in-preview .mat-calendar-body-cell-preview{border-top:dashed 1px;border-bottom:dashed 1px}.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:dashed 1px}[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:0;border-right:dashed 1px}.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:dashed 1px}[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:0;border-left:dashed 1px}.mat-calendar-body-disabled{cursor:default}.mat-calendar-body-cell-content{top:5%;left:5%;z-index:1;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px}.mat-calendar-body-cell-content.mat-focus-indicator{position:absolute}.cdk-high-contrast-active .mat-calendar-body-cell-content{border:none}.cdk-high-contrast-active .mat-datepicker-popup:not(:empty),.cdk-high-contrast-active .mat-calendar-body-selected{outline:solid 1px}.cdk-high-contrast-active .mat-calendar-body-today{outline:dotted 1px}.cdk-high-contrast-active .cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected),.cdk-high-contrast-active .cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){outline:dotted 2px}[dir=rtl] .mat-calendar-body-label{text-align:right}@media(hover: none){.mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){background-color:transparent}}\\n\"]\n            },] }\n];\nMatCalendarBody.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone }\n];\nMatCalendarBody.propDecorators = {\n    label: [{ type: Input }],\n    rows: [{ type: Input }],\n    todayValue: [{ type: Input }],\n    startValue: [{ type: Input }],\n    endValue: [{ type: Input }],\n    labelMinRequiredCells: [{ type: Input }],\n    numCols: [{ type: Input }],\n    activeCell: [{ type: Input }],\n    isRange: [{ type: Input }],\n    cellAspectRatio: [{ type: Input }],\n    comparisonStart: [{ type: Input }],\n    comparisonEnd: [{ type: Input }],\n    previewStart: [{ type: Input }],\n    previewEnd: [{ type: Input }],\n    selectedValueChange: [{ type: Output }],\n    previewChange: [{ type: Output }]\n};\n/** Checks whether a node is a table cell element. */\nfunction isTableCell(node) {\n    return node.nodeName === 'TD';\n}\n/** Checks whether a value is the start of a range. */\nfunction isStart(value, start, end) {\n    return end !== null && start !== end && value < end && value === start;\n}\n/** Checks whether a value is the end of a range. */\nfunction isEnd(value, start, end) {\n    return start !== null && start !== end && value >= start && value === end;\n}\n/** Checks whether a value is inside of a range. */\nfunction isInRange(value, start, end, rangeEnabled) {\n    return rangeEnabled && start !== null && end !== null && start !== end &&\n        value >= start && value <= end;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** A class representing a range of dates. */\nclass DateRange {\n    constructor(\n    /** The start date of the range. */\n    start, \n    /** The end date of the range. */\n    end) {\n        this.start = start;\n        this.end = end;\n    }\n}\n/** A selection model containing a date selection. */\nclass MatDateSelectionModel {\n    constructor(\n    /** The current selection. */\n    selection, _adapter) {\n        this.selection = selection;\n        this._adapter = _adapter;\n        this._selectionChanged = new Subject();\n        /** Emits when the selection has changed. */\n        this.selectionChanged = this._selectionChanged;\n        this.selection = selection;\n    }\n    /**\n     * Updates the current selection in the model.\n     * @param value New selection that should be assigned.\n     * @param source Object that triggered the selection change.\n     */\n    updateSelection(value, source) {\n        this.selection = value;\n        this._selectionChanged.next({ selection: value, source });\n    }\n    ngOnDestroy() {\n        this._selectionChanged.complete();\n    }\n    _isValidDateInstance(date) {\n        return this._adapter.isDateInstance(date) && this._adapter.isValid(date);\n    }\n}\nMatDateSelectionModel.decorators = [\n    { type: Directive }\n];\nMatDateSelectionModel.ctorParameters = () => [\n    { type: undefined },\n    { type: DateAdapter }\n];\n/**  A selection model that contains a single date. */\nclass MatSingleDateSelectionModel extends MatDateSelectionModel {\n    constructor(adapter) {\n        super(null, adapter);\n    }\n    /**\n     * Adds a date to the current selection. In the case of a single date selection, the added date\n     * simply overwrites the previous selection\n     */\n    add(date) {\n        super.updateSelection(date, this);\n    }\n    /** Checks whether the current selection is valid. */\n    isValid() {\n        return this.selection != null && this._isValidDateInstance(this.selection);\n    }\n    /**\n     * Checks whether the current selection is complete. In the case of a single date selection, this\n     * is true if the current selection is not null.\n     */\n    isComplete() {\n        return this.selection != null;\n    }\n}\nMatSingleDateSelectionModel.decorators = [\n    { type: Injectable }\n];\nMatSingleDateSelectionModel.ctorParameters = () => [\n    { type: DateAdapter }\n];\n/**  A selection model that contains a date range. */\nclass MatRangeDateSelectionModel extends MatDateSelectionModel {\n    constructor(adapter) {\n        super(new DateRange(null, null), adapter);\n    }\n    /**\n     * Adds a date to the current selection. In the case of a date range selection, the added date\n     * fills in the next `null` value in the range. If both the start and the end already have a date,\n     * the selection is reset so that the given date is the new `start` and the `end` is null.\n     */\n    add(date) {\n        let { start, end } = this.selection;\n        if (start == null) {\n            start = date;\n        }\n        else if (end == null) {\n            end = date;\n        }\n        else {\n            start = date;\n            end = null;\n        }\n        super.updateSelection(new DateRange(start, end), this);\n    }\n    /** Checks whether the current selection is valid. */\n    isValid() {\n        const { start, end } = this.selection;\n        // Empty ranges are valid.\n        if (start == null && end == null) {\n            return true;\n        }\n        // Complete ranges are only valid if both dates are valid and the start is before the end.\n        if (start != null && end != null) {\n            return this._isValidDateInstance(start) && this._isValidDateInstance(end) &&\n                this._adapter.compareDate(start, end) <= 0;\n        }\n        // Partial ranges are valid if the start/end is valid.\n        return (start == null || this._isValidDateInstance(start)) &&\n            (end == null || this._isValidDateInstance(end));\n    }\n    /**\n     * Checks whether the current selection is complete. In the case of a date range selection, this\n     * is true if the current selection has a non-null `start` and `end`.\n     */\n    isComplete() {\n        return this.selection.start != null && this.selection.end != null;\n    }\n}\nMatRangeDateSelectionModel.decorators = [\n    { type: Injectable }\n];\nMatRangeDateSelectionModel.ctorParameters = () => [\n    { type: DateAdapter }\n];\n/** @docs-private */\nfunction MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY(parent, adapter) {\n    return parent || new MatSingleDateSelectionModel(adapter);\n}\n/** Used to provide a single selection model to a component. */\nconst MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER = {\n    provide: MatDateSelectionModel,\n    deps: [[new Optional(), new SkipSelf(), MatDateSelectionModel], DateAdapter],\n    useFactory: MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY,\n};\n/** @docs-private */\nfunction MAT_RANGE_DATE_SELECTION_MODEL_FACTORY(parent, adapter) {\n    return parent || new MatRangeDateSelectionModel(adapter);\n}\n/** Used to provide a range selection model to a component. */\nconst MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER = {\n    provide: MatDateSelectionModel,\n    deps: [[new Optional(), new SkipSelf(), MatDateSelectionModel], DateAdapter],\n    useFactory: MAT_RANGE_DATE_SELECTION_MODEL_FACTORY,\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token used to customize the date range selection behavior. */\nconst MAT_DATE_RANGE_SELECTION_STRATEGY = new InjectionToken('MAT_DATE_RANGE_SELECTION_STRATEGY');\n/** Provides the default date range selection behavior. */\nclass DefaultMatCalendarRangeStrategy {\n    constructor(_dateAdapter) {\n        this._dateAdapter = _dateAdapter;\n    }\n    selectionFinished(date, currentRange) {\n        let { start, end } = currentRange;\n        if (start == null) {\n            start = date;\n        }\n        else if (end == null && date && this._dateAdapter.compareDate(date, start) >= 0) {\n            end = date;\n        }\n        else {\n            start = date;\n            end = null;\n        }\n        return new DateRange(start, end);\n    }\n    createPreview(activeDate, currentRange) {\n        let start = null;\n        let end = null;\n        if (currentRange.start && !currentRange.end && activeDate) {\n            start = currentRange.start;\n            end = activeDate;\n        }\n        return new DateRange(start, end);\n    }\n}\nDefaultMatCalendarRangeStrategy.decorators = [\n    { type: Injectable }\n];\nDefaultMatCalendarRangeStrategy.ctorParameters = () => [\n    { type: DateAdapter }\n];\n/** @docs-private */\nfunction MAT_CALENDAR_RANGE_STRATEGY_PROVIDER_FACTORY(parent, adapter) {\n    return parent || new DefaultMatCalendarRangeStrategy(adapter);\n}\n/** @docs-private */\nconst MAT_CALENDAR_RANGE_STRATEGY_PROVIDER = {\n    provide: MAT_DATE_RANGE_SELECTION_STRATEGY,\n    deps: [[new Optional(), new SkipSelf(), MAT_DATE_RANGE_SELECTION_STRATEGY], DateAdapter],\n    useFactory: MAT_CALENDAR_RANGE_STRATEGY_PROVIDER_FACTORY,\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DAYS_PER_WEEK = 7;\n/**\n * An internal component used to display a single month in the datepicker.\n * @docs-private\n */\nclass MatMonthView {\n    constructor(_changeDetectorRef, _dateFormats, _dateAdapter, _dir, _rangeStrategy) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateFormats = _dateFormats;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._rangeStrategy = _rangeStrategy;\n        this._rerenderSubscription = Subscription.EMPTY;\n        /** Emits when a new date is selected. */\n        this.selectedChange = new EventEmitter();\n        /** Emits when any date is selected. */\n        this._userSelection = new EventEmitter();\n        /** Emits when any date is activated. */\n        this.activeDateChange = new EventEmitter();\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._dateAdapter) {\n                throw createMissingDateImplError('DateAdapter');\n            }\n            if (!this._dateFormats) {\n                throw createMissingDateImplError('MAT_DATE_FORMATS');\n            }\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /**\n     * The date to display in this month view (everything other than the month and year is ignored).\n     */\n    get activeDate() { return this._activeDate; }\n    set activeDate(value) {\n        const oldActiveDate = this._activeDate;\n        const validDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (!this._hasSameMonthAndYear(oldActiveDate, this._activeDate)) {\n            this._init();\n        }\n    }\n    /** The currently selected date. */\n    get selected() { return this._selected; }\n    set selected(value) {\n        if (value instanceof DateRange) {\n            this._selected = value;\n        }\n        else {\n            this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        }\n        this._setRanges(this._selected);\n    }\n    /** The minimum selectable date. */\n    get minDate() { return this._minDate; }\n    set minDate(value) {\n        this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The maximum selectable date. */\n    get maxDate() { return this._maxDate; }\n    set maxDate(value) {\n        this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    ngAfterContentInit() {\n        this._rerenderSubscription = this._dateAdapter.localeChanges\n            .pipe(startWith(null))\n            .subscribe(() => this._init());\n    }\n    ngOnChanges(changes) {\n        const comparisonChange = changes['comparisonStart'] || changes['comparisonEnd'];\n        if (comparisonChange && !comparisonChange.firstChange) {\n            this._setRanges(this.selected);\n        }\n    }\n    ngOnDestroy() {\n        this._rerenderSubscription.unsubscribe();\n    }\n    /** Handles when a new date is selected. */\n    _dateSelected(event) {\n        const date = event.value;\n        const selectedYear = this._dateAdapter.getYear(this.activeDate);\n        const selectedMonth = this._dateAdapter.getMonth(this.activeDate);\n        const selectedDate = this._dateAdapter.createDate(selectedYear, selectedMonth, date);\n        let rangeStartDate;\n        let rangeEndDate;\n        if (this._selected instanceof DateRange) {\n            rangeStartDate = this._getDateInCurrentMonth(this._selected.start);\n            rangeEndDate = this._getDateInCurrentMonth(this._selected.end);\n        }\n        else {\n            rangeStartDate = rangeEndDate = this._getDateInCurrentMonth(this._selected);\n        }\n        if (rangeStartDate !== date || rangeEndDate !== date) {\n            this.selectedChange.emit(selectedDate);\n        }\n        this._userSelection.emit({ value: selectedDate, event: event.event });\n    }\n    /** Handles keydown events on the calendar body when calendar is in month view. */\n    _handleCalendarBodyKeydown(event) {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        const oldActiveDate = this._activeDate;\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, -7);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 7);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 1 - this._dateAdapter.getDate(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, (this._dateAdapter.getNumDaysInMonth(this._activeDate) -\n                    this._dateAdapter.getDate(this._activeDate)));\n                break;\n            case PAGE_UP:\n                this.activeDate = event.altKey ?\n                    this._dateAdapter.addCalendarYears(this._activeDate, -1) :\n                    this._dateAdapter.addCalendarMonths(this._activeDate, -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate = event.altKey ?\n                    this._dateAdapter.addCalendarYears(this._activeDate, 1) :\n                    this._dateAdapter.addCalendarMonths(this._activeDate, 1);\n                break;\n            case ENTER:\n            case SPACE:\n                if (!this.dateFilter || this.dateFilter(this._activeDate)) {\n                    this._dateSelected({ value: this._dateAdapter.getDate(this._activeDate), event });\n                    // Prevent unexpected default actions such as form submission.\n                    event.preventDefault();\n                }\n                return;\n            case ESCAPE:\n                // Abort the current range selection if the user presses escape mid-selection.\n                if (this._previewEnd != null) {\n                    this._previewStart = this._previewEnd = null;\n                    this.selectedChange.emit(null);\n                    this._userSelection.emit({ value: null, event });\n                    event.preventDefault();\n                    event.stopPropagation(); // Prevents the overlay from closing.\n                }\n                return;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /** Initializes this month view. */\n    _init() {\n        this._setRanges(this.selected);\n        this._todayDate = this._getCellCompareValue(this._dateAdapter.today());\n        this._monthLabel =\n            this._dateAdapter.getMonthNames('short')[this._dateAdapter.getMonth(this.activeDate)]\n                .toLocaleUpperCase();\n        let firstOfMonth = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), 1);\n        this._firstWeekOffset =\n            (DAYS_PER_WEEK + this._dateAdapter.getDayOfWeek(firstOfMonth) -\n                this._dateAdapter.getFirstDayOfWeek()) % DAYS_PER_WEEK;\n        this._initWeekdays();\n        this._createWeekCells();\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Focuses the active cell after the microtask queue is empty. */\n    _focusActiveCell(movePreview) {\n        this._matCalendarBody._focusActiveCell(movePreview);\n    }\n    /** Called when the user has activated a new cell and the preview needs to be updated. */\n    _previewChanged({ event, value: cell }) {\n        if (this._rangeStrategy) {\n            // We can assume that this will be a range, because preview\n            // events aren't fired for single date selections.\n            const value = cell ? cell.rawValue : null;\n            const previewRange = this._rangeStrategy.createPreview(value, this.selected, event);\n            this._previewStart = this._getCellCompareValue(previewRange.start);\n            this._previewEnd = this._getCellCompareValue(previewRange.end);\n            // Note that here we need to use `detectChanges`, rather than `markForCheck`, because\n            // the way `_focusActiveCell` is set up at the moment makes it fire at the wrong time\n            // when navigating one month back using the keyboard which will cause this handler\n            // to throw a \"changed after checked\" error when updating the preview state.\n            this._changeDetectorRef.detectChanges();\n        }\n    }\n    /** Initializes the weekdays. */\n    _initWeekdays() {\n        const firstDayOfWeek = this._dateAdapter.getFirstDayOfWeek();\n        const narrowWeekdays = this._dateAdapter.getDayOfWeekNames('narrow');\n        const longWeekdays = this._dateAdapter.getDayOfWeekNames('long');\n        // Rotate the labels for days of the week based on the configured first day of the week.\n        let weekdays = longWeekdays.map((long, i) => {\n            return { long, narrow: narrowWeekdays[i] };\n        });\n        this._weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n    }\n    /** Creates MatCalendarCells for the dates in this month. */\n    _createWeekCells() {\n        const daysInMonth = this._dateAdapter.getNumDaysInMonth(this.activeDate);\n        const dateNames = this._dateAdapter.getDateNames();\n        this._weeks = [[]];\n        for (let i = 0, cell = this._firstWeekOffset; i < daysInMonth; i++, cell++) {\n            if (cell == DAYS_PER_WEEK) {\n                this._weeks.push([]);\n                cell = 0;\n            }\n            const date = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), i + 1);\n            const enabled = this._shouldEnableDate(date);\n            const ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.dateA11yLabel);\n            const cellClasses = this.dateClass ? this.dateClass(date, 'month') : undefined;\n            this._weeks[this._weeks.length - 1].push(new MatCalendarCell(i + 1, dateNames[i], ariaLabel, enabled, cellClasses, this._getCellCompareValue(date), date));\n        }\n    }\n    /** Date filter for the month */\n    _shouldEnableDate(date) {\n        return !!date &&\n            (!this.minDate || this._dateAdapter.compareDate(date, this.minDate) >= 0) &&\n            (!this.maxDate || this._dateAdapter.compareDate(date, this.maxDate) <= 0) &&\n            (!this.dateFilter || this.dateFilter(date));\n    }\n    /**\n     * Gets the date in this month that the given Date falls on.\n     * Returns null if the given Date is in another month.\n     */\n    _getDateInCurrentMonth(date) {\n        return date && this._hasSameMonthAndYear(date, this.activeDate) ?\n            this._dateAdapter.getDate(date) : null;\n    }\n    /** Checks whether the 2 dates are non-null and fall within the same month of the same year. */\n    _hasSameMonthAndYear(d1, d2) {\n        return !!(d1 && d2 && this._dateAdapter.getMonth(d1) == this._dateAdapter.getMonth(d2) &&\n            this._dateAdapter.getYear(d1) == this._dateAdapter.getYear(d2));\n    }\n    /** Gets the value that will be used to one cell to another. */\n    _getCellCompareValue(date) {\n        if (date) {\n            // We use the time since the Unix epoch to compare dates in this view, rather than the\n            // cell values, because we need to support ranges that span across multiple months/years.\n            const year = this._dateAdapter.getYear(date);\n            const month = this._dateAdapter.getMonth(date);\n            const day = this._dateAdapter.getDate(date);\n            return new Date(year, month, day).getTime();\n        }\n        return null;\n    }\n    /** Determines whether the user has the RTL layout direction. */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n    /** Sets the current range based on a model value. */\n    _setRanges(selectedValue) {\n        if (selectedValue instanceof DateRange) {\n            this._rangeStart = this._getCellCompareValue(selectedValue.start);\n            this._rangeEnd = this._getCellCompareValue(selectedValue.end);\n            this._isRange = true;\n        }\n        else {\n            this._rangeStart = this._rangeEnd = this._getCellCompareValue(selectedValue);\n            this._isRange = false;\n        }\n        this._comparisonRangeStart = this._getCellCompareValue(this.comparisonStart);\n        this._comparisonRangeEnd = this._getCellCompareValue(this.comparisonEnd);\n    }\n}\nMatMonthView.decorators = [\n    { type: Component, args: [{\n                selector: 'mat-month-view',\n                template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"presentation\\\">\\n  <thead class=\\\"mat-calendar-table-header\\\">\\n    <tr>\\n      <th scope=\\\"col\\\" *ngFor=\\\"let day of _weekdays\\\" [attr.aria-label]=\\\"day.long\\\">{{day.narrow}}</th>\\n    </tr>\\n    <tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"7\\\" aria-hidden=\\\"true\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [label]=\\\"_monthLabel\\\"\\n         [rows]=\\\"_weeks\\\"\\n         [todayValue]=\\\"_todayDate!\\\"\\n         [startValue]=\\\"_rangeStart!\\\"\\n         [endValue]=\\\"_rangeEnd!\\\"\\n         [comparisonStart]=\\\"_comparisonRangeStart\\\"\\n         [comparisonEnd]=\\\"_comparisonRangeEnd\\\"\\n         [previewStart]=\\\"_previewStart\\\"\\n         [previewEnd]=\\\"_previewEnd\\\"\\n         [isRange]=\\\"_isRange\\\"\\n         [labelMinRequiredCells]=\\\"3\\\"\\n         [activeCell]=\\\"_dateAdapter.getDate(activeDate) - 1\\\"\\n         (selectedValueChange)=\\\"_dateSelected($event)\\\"\\n         (previewChange)=\\\"_previewChanged($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\",\n                exportAs: 'matMonthView',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            },] }\n];\nMatMonthView.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DATE_RANGE_SELECTION_STRATEGY,] }, { type: Optional }] }\n];\nMatMonthView.propDecorators = {\n    activeDate: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    dateClass: [{ type: Input }],\n    comparisonStart: [{ type: Input }],\n    comparisonEnd: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    _userSelection: [{ type: Output }],\n    activeDateChange: [{ type: Output }],\n    _matCalendarBody: [{ type: ViewChild, args: [MatCalendarBody,] }]\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst yearsPerPage = 24;\nconst yearsPerRow = 4;\n/**\n * An internal component used to display a year selector in the datepicker.\n * @docs-private\n */\nclass MatMultiYearView {\n    constructor(_changeDetectorRef, _dateAdapter, _dir) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._rerenderSubscription = Subscription.EMPTY;\n        /** Emits when a new year is selected. */\n        this.selectedChange = new EventEmitter();\n        /** Emits the selected year. This doesn't imply a change on the selected date */\n        this.yearSelected = new EventEmitter();\n        /** Emits when any date is activated. */\n        this.activeDateChange = new EventEmitter();\n        if (!this._dateAdapter && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /** The date to display in this multi-year view (everything other than the year is ignored). */\n    get activeDate() { return this._activeDate; }\n    set activeDate(value) {\n        let oldActiveDate = this._activeDate;\n        const validDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (!isSameMultiYearView(this._dateAdapter, oldActiveDate, this._activeDate, this.minDate, this.maxDate)) {\n            this._init();\n        }\n    }\n    /** The currently selected date. */\n    get selected() { return this._selected; }\n    set selected(value) {\n        if (value instanceof DateRange) {\n            this._selected = value;\n        }\n        else {\n            this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        }\n        this._setSelectedYear(value);\n    }\n    /** The minimum selectable date. */\n    get minDate() { return this._minDate; }\n    set minDate(value) {\n        this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The maximum selectable date. */\n    get maxDate() { return this._maxDate; }\n    set maxDate(value) {\n        this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    ngAfterContentInit() {\n        this._rerenderSubscription = this._dateAdapter.localeChanges\n            .pipe(startWith(null))\n            .subscribe(() => this._init());\n    }\n    ngOnDestroy() {\n        this._rerenderSubscription.unsubscribe();\n    }\n    /** Initializes this multi-year view. */\n    _init() {\n        this._todayYear = this._dateAdapter.getYear(this._dateAdapter.today());\n        // We want a range years such that we maximize the number of\n        // enabled dates visible at once. This prevents issues where the minimum year\n        // is the last item of a page OR the maximum year is the first item of a page.\n        // The offset from the active year to the \"slot\" for the starting year is the\n        // *actual* first rendered year in the multi-year view.\n        const activeYear = this._dateAdapter.getYear(this._activeDate);\n        const minYearOfPage = activeYear - getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n        this._years = [];\n        for (let i = 0, row = []; i < yearsPerPage; i++) {\n            row.push(minYearOfPage + i);\n            if (row.length == yearsPerRow) {\n                this._years.push(row.map(year => this._createCellForYear(year)));\n                row = [];\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Handles when a new year is selected. */\n    _yearSelected(event) {\n        const year = event.value;\n        this.yearSelected.emit(this._dateAdapter.createDate(year, 0, 1));\n        let month = this._dateAdapter.getMonth(this.activeDate);\n        let daysInMonth = this._dateAdapter.getNumDaysInMonth(this._dateAdapter.createDate(year, month, 1));\n        this.selectedChange.emit(this._dateAdapter.createDate(year, month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n    /** Handles keydown events on the calendar body when calendar is in multi-year view. */\n    _handleCalendarBodyKeydown(event) {\n        const oldActiveDate = this._activeDate;\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -yearsPerRow);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerRow);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerPage - getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate) - 1);\n                break;\n            case PAGE_UP:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -yearsPerPage * 10 : -yearsPerPage);\n                break;\n            case PAGE_DOWN:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? yearsPerPage * 10 : yearsPerPage);\n                break;\n            case ENTER:\n            case SPACE:\n                this._yearSelected({ value: this._dateAdapter.getYear(this._activeDate), event });\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    _getActiveCell() {\n        return getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n    }\n    /** Focuses the active cell after the microtask queue is empty. */\n    _focusActiveCell() {\n        this._matCalendarBody._focusActiveCell();\n    }\n    /** Creates an MatCalendarCell for the given year. */\n    _createCellForYear(year) {\n        const date = this._dateAdapter.createDate(year, 0, 1);\n        const yearName = this._dateAdapter.getYearName(date);\n        const cellClasses = this.dateClass ? this.dateClass(date, 'multi-year') : undefined;\n        return new MatCalendarCell(year, yearName, yearName, this._shouldEnableYear(year), cellClasses);\n    }\n    /** Whether the given year is enabled. */\n    _shouldEnableYear(year) {\n        // disable if the year is greater than maxDate lower than minDate\n        if (year === undefined || year === null ||\n            (this.maxDate && year > this._dateAdapter.getYear(this.maxDate)) ||\n            (this.minDate && year < this._dateAdapter.getYear(this.minDate))) {\n            return false;\n        }\n        // enable if it reaches here and there's no filter defined\n        if (!this.dateFilter) {\n            return true;\n        }\n        const firstOfYear = this._dateAdapter.createDate(year, 0, 1);\n        // If any date in the year is enabled count the year as enabled.\n        for (let date = firstOfYear; this._dateAdapter.getYear(date) == year; date = this._dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /** Determines whether the user has the RTL layout direction. */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n    /** Sets the currently-highlighted year based on a model value. */\n    _setSelectedYear(value) {\n        this._selectedYear = null;\n        if (value instanceof DateRange) {\n            const displayValue = value.start || value.end;\n            if (displayValue) {\n                this._selectedYear = this._dateAdapter.getYear(displayValue);\n            }\n        }\n        else if (value) {\n            this._selectedYear = this._dateAdapter.getYear(value);\n        }\n    }\n}\nMatMultiYearView.decorators = [\n    { type: Component, args: [{\n                selector: 'mat-multi-year-view',\n                template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"presentation\\\">\\n  <thead class=\\\"mat-calendar-table-header\\\">\\n    <tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [rows]=\\\"_years\\\"\\n         [todayValue]=\\\"_todayYear\\\"\\n         [startValue]=\\\"_selectedYear!\\\"\\n         [endValue]=\\\"_selectedYear!\\\"\\n         [numCols]=\\\"4\\\"\\n         [cellAspectRatio]=\\\"4 / 7\\\"\\n         [activeCell]=\\\"_getActiveCell()\\\"\\n         (selectedValueChange)=\\\"_yearSelected($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\",\n                exportAs: 'matMultiYearView',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            },] }\n];\nMatMultiYearView.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatMultiYearView.propDecorators = {\n    activeDate: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    dateClass: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    yearSelected: [{ type: Output }],\n    activeDateChange: [{ type: Output }],\n    _matCalendarBody: [{ type: ViewChild, args: [MatCalendarBody,] }]\n};\nfunction isSameMultiYearView(dateAdapter, date1, date2, minDate, maxDate) {\n    const year1 = dateAdapter.getYear(date1);\n    const year2 = dateAdapter.getYear(date2);\n    const startingYear = getStartingYear(dateAdapter, minDate, maxDate);\n    return Math.floor((year1 - startingYear) / yearsPerPage) ===\n        Math.floor((year2 - startingYear) / yearsPerPage);\n}\n/**\n * When the multi-year view is first opened, the active year will be in view.\n * So we compute how many years are between the active year and the *slot* where our\n * \"startingYear\" will render when paged into view.\n */\nfunction getActiveOffset(dateAdapter, activeDate, minDate, maxDate) {\n    const activeYear = dateAdapter.getYear(activeDate);\n    return euclideanModulo((activeYear - getStartingYear(dateAdapter, minDate, maxDate)), yearsPerPage);\n}\n/**\n * We pick a \"starting\" year such that either the maximum year would be at the end\n * or the minimum year would be at the beginning of a page.\n */\nfunction getStartingYear(dateAdapter, minDate, maxDate) {\n    let startingYear = 0;\n    if (maxDate) {\n        const maxYear = dateAdapter.getYear(maxDate);\n        startingYear = maxYear - yearsPerPage + 1;\n    }\n    else if (minDate) {\n        startingYear = dateAdapter.getYear(minDate);\n    }\n    return startingYear;\n}\n/** Gets remainder that is non-negative, even if first number is negative */\nfunction euclideanModulo(a, b) {\n    return (a % b + b) % b;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An internal component used to display a single year in the datepicker.\n * @docs-private\n */\nclass MatYearView {\n    constructor(_changeDetectorRef, _dateFormats, _dateAdapter, _dir) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateFormats = _dateFormats;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._rerenderSubscription = Subscription.EMPTY;\n        /** Emits when a new month is selected. */\n        this.selectedChange = new EventEmitter();\n        /** Emits the selected month. This doesn't imply a change on the selected date */\n        this.monthSelected = new EventEmitter();\n        /** Emits when any date is activated. */\n        this.activeDateChange = new EventEmitter();\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._dateAdapter) {\n                throw createMissingDateImplError('DateAdapter');\n            }\n            if (!this._dateFormats) {\n                throw createMissingDateImplError('MAT_DATE_FORMATS');\n            }\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /** The date to display in this year view (everything other than the year is ignored). */\n    get activeDate() { return this._activeDate; }\n    set activeDate(value) {\n        let oldActiveDate = this._activeDate;\n        const validDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (this._dateAdapter.getYear(oldActiveDate) !== this._dateAdapter.getYear(this._activeDate)) {\n            this._init();\n        }\n    }\n    /** The currently selected date. */\n    get selected() { return this._selected; }\n    set selected(value) {\n        if (value instanceof DateRange) {\n            this._selected = value;\n        }\n        else {\n            this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        }\n        this._setSelectedMonth(value);\n    }\n    /** The minimum selectable date. */\n    get minDate() { return this._minDate; }\n    set minDate(value) {\n        this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The maximum selectable date. */\n    get maxDate() { return this._maxDate; }\n    set maxDate(value) {\n        this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    ngAfterContentInit() {\n        this._rerenderSubscription = this._dateAdapter.localeChanges\n            .pipe(startWith(null))\n            .subscribe(() => this._init());\n    }\n    ngOnDestroy() {\n        this._rerenderSubscription.unsubscribe();\n    }\n    /** Handles when a new month is selected. */\n    _monthSelected(event) {\n        const month = event.value;\n        const normalizedDate = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n        this.monthSelected.emit(normalizedDate);\n        const daysInMonth = this._dateAdapter.getNumDaysInMonth(normalizedDate);\n        this.selectedChange.emit(this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n    /** Handles keydown events on the calendar body when calendar is in year view. */\n    _handleCalendarBodyKeydown(event) {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        const oldActiveDate = this._activeDate;\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -4);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 4);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -this._dateAdapter.getMonth(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 11 - this._dateAdapter.getMonth(this._activeDate));\n                break;\n            case PAGE_UP:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -10 : -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? 10 : 1);\n                break;\n            case ENTER:\n            case SPACE:\n                this._monthSelected({ value: this._dateAdapter.getMonth(this._activeDate), event });\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /** Initializes this year view. */\n    _init() {\n        this._setSelectedMonth(this.selected);\n        this._todayMonth = this._getMonthInCurrentYear(this._dateAdapter.today());\n        this._yearLabel = this._dateAdapter.getYearName(this.activeDate);\n        let monthNames = this._dateAdapter.getMonthNames('short');\n        // First row of months only contains 5 elements so we can fit the year label on the same row.\n        this._months = [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]].map(row => row.map(month => this._createCellForMonth(month, monthNames[month])));\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Focuses the active cell after the microtask queue is empty. */\n    _focusActiveCell() {\n        this._matCalendarBody._focusActiveCell();\n    }\n    /**\n     * Gets the month in this year that the given Date falls on.\n     * Returns null if the given Date is in another year.\n     */\n    _getMonthInCurrentYear(date) {\n        return date && this._dateAdapter.getYear(date) == this._dateAdapter.getYear(this.activeDate) ?\n            this._dateAdapter.getMonth(date) : null;\n    }\n    /** Creates an MatCalendarCell for the given month. */\n    _createCellForMonth(month, monthName) {\n        const date = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n        const ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.monthYearA11yLabel);\n        const cellClasses = this.dateClass ? this.dateClass(date, 'year') : undefined;\n        return new MatCalendarCell(month, monthName.toLocaleUpperCase(), ariaLabel, this._shouldEnableMonth(month), cellClasses);\n    }\n    /** Whether the given month is enabled. */\n    _shouldEnableMonth(month) {\n        const activeYear = this._dateAdapter.getYear(this.activeDate);\n        if (month === undefined || month === null ||\n            this._isYearAndMonthAfterMaxDate(activeYear, month) ||\n            this._isYearAndMonthBeforeMinDate(activeYear, month)) {\n            return false;\n        }\n        if (!this.dateFilter) {\n            return true;\n        }\n        const firstOfMonth = this._dateAdapter.createDate(activeYear, month, 1);\n        // If any date in the month is enabled count the month as enabled.\n        for (let date = firstOfMonth; this._dateAdapter.getMonth(date) == month; date = this._dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Tests whether the combination month/year is after this.maxDate, considering\n     * just the month and year of this.maxDate\n     */\n    _isYearAndMonthAfterMaxDate(year, month) {\n        if (this.maxDate) {\n            const maxYear = this._dateAdapter.getYear(this.maxDate);\n            const maxMonth = this._dateAdapter.getMonth(this.maxDate);\n            return year > maxYear || (year === maxYear && month > maxMonth);\n        }\n        return false;\n    }\n    /**\n     * Tests whether the combination month/year is before this.minDate, considering\n     * just the month and year of this.minDate\n     */\n    _isYearAndMonthBeforeMinDate(year, month) {\n        if (this.minDate) {\n            const minYear = this._dateAdapter.getYear(this.minDate);\n            const minMonth = this._dateAdapter.getMonth(this.minDate);\n            return year < minYear || (year === minYear && month < minMonth);\n        }\n        return false;\n    }\n    /** Determines whether the user has the RTL layout direction. */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n    /** Sets the currently-selected month based on a model value. */\n    _setSelectedMonth(value) {\n        if (value instanceof DateRange) {\n            this._selectedMonth = this._getMonthInCurrentYear(value.start) ||\n                this._getMonthInCurrentYear(value.end);\n        }\n        else {\n            this._selectedMonth = this._getMonthInCurrentYear(value);\n        }\n    }\n}\nMatYearView.decorators = [\n    { type: Component, args: [{\n                selector: 'mat-year-view',\n                template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"presentation\\\">\\n  <thead class=\\\"mat-calendar-table-header\\\">\\n    <tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [label]=\\\"_yearLabel\\\"\\n         [rows]=\\\"_months\\\"\\n         [todayValue]=\\\"_todayMonth!\\\"\\n         [startValue]=\\\"_selectedMonth!\\\"\\n         [endValue]=\\\"_selectedMonth!\\\"\\n         [labelMinRequiredCells]=\\\"2\\\"\\n         [numCols]=\\\"4\\\"\\n         [cellAspectRatio]=\\\"4 / 7\\\"\\n         [activeCell]=\\\"_dateAdapter.getMonth(activeDate)\\\"\\n         (selectedValueChange)=\\\"_monthSelected($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\",\n                exportAs: 'matYearView',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            },] }\n];\nMatYearView.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatYearView.propDecorators = {\n    activeDate: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    dateClass: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    monthSelected: [{ type: Output }],\n    activeDateChange: [{ type: Output }],\n    _matCalendarBody: [{ type: ViewChild, args: [MatCalendarBody,] }]\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Default header for MatCalendar */\nclass MatCalendarHeader {\n    constructor(_intl, calendar, _dateAdapter, _dateFormats, changeDetectorRef) {\n        this._intl = _intl;\n        this.calendar = calendar;\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        this.calendar.stateChanges.subscribe(() => changeDetectorRef.markForCheck());\n    }\n    /** The label for the current calendar view. */\n    get periodButtonText() {\n        if (this.calendar.currentView == 'month') {\n            return this._dateAdapter\n                .format(this.calendar.activeDate, this._dateFormats.display.monthYearLabel)\n                .toLocaleUpperCase();\n        }\n        if (this.calendar.currentView == 'year') {\n            return this._dateAdapter.getYearName(this.calendar.activeDate);\n        }\n        // The offset from the active year to the \"slot\" for the starting year is the\n        // *actual* first rendered year in the multi-year view, and the last year is\n        // just yearsPerPage - 1 away.\n        const activeYear = this._dateAdapter.getYear(this.calendar.activeDate);\n        const minYearOfPage = activeYear - getActiveOffset(this._dateAdapter, this.calendar.activeDate, this.calendar.minDate, this.calendar.maxDate);\n        const maxYearOfPage = minYearOfPage + yearsPerPage - 1;\n        const minYearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(minYearOfPage, 0, 1));\n        const maxYearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(maxYearOfPage, 0, 1));\n        return this._intl.formatYearRange(minYearName, maxYearName);\n    }\n    get periodButtonLabel() {\n        return this.calendar.currentView == 'month' ?\n            this._intl.switchToMultiYearViewLabel : this._intl.switchToMonthViewLabel;\n    }\n    /** The label for the previous button. */\n    get prevButtonLabel() {\n        return {\n            'month': this._intl.prevMonthLabel,\n            'year': this._intl.prevYearLabel,\n            'multi-year': this._intl.prevMultiYearLabel\n        }[this.calendar.currentView];\n    }\n    /** The label for the next button. */\n    get nextButtonLabel() {\n        return {\n            'month': this._intl.nextMonthLabel,\n            'year': this._intl.nextYearLabel,\n            'multi-year': this._intl.nextMultiYearLabel\n        }[this.calendar.currentView];\n    }\n    /** Handles user clicks on the period label. */\n    currentPeriodClicked() {\n        this.calendar.currentView = this.calendar.currentView == 'month' ? 'multi-year' : 'month';\n    }\n    /** Handles user clicks on the previous button. */\n    previousClicked() {\n        this.calendar.activeDate = this.calendar.currentView == 'month' ?\n            this._dateAdapter.addCalendarMonths(this.calendar.activeDate, -1) :\n            this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? -1 : -yearsPerPage);\n    }\n    /** Handles user clicks on the next button. */\n    nextClicked() {\n        this.calendar.activeDate = this.calendar.currentView == 'month' ?\n            this._dateAdapter.addCalendarMonths(this.calendar.activeDate, 1) :\n            this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? 1 : yearsPerPage);\n    }\n    /** Whether the previous period button is enabled. */\n    previousEnabled() {\n        if (!this.calendar.minDate) {\n            return true;\n        }\n        return !this.calendar.minDate ||\n            !this._isSameView(this.calendar.activeDate, this.calendar.minDate);\n    }\n    /** Whether the next period button is enabled. */\n    nextEnabled() {\n        return !this.calendar.maxDate ||\n            !this._isSameView(this.calendar.activeDate, this.calendar.maxDate);\n    }\n    /** Whether the two dates represent the same view in the current view mode (month or year). */\n    _isSameView(date1, date2) {\n        if (this.calendar.currentView == 'month') {\n            return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2) &&\n                this._dateAdapter.getMonth(date1) == this._dateAdapter.getMonth(date2);\n        }\n        if (this.calendar.currentView == 'year') {\n            return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2);\n        }\n        // Otherwise we are in 'multi-year' view.\n        return isSameMultiYearView(this._dateAdapter, date1, date2, this.calendar.minDate, this.calendar.maxDate);\n    }\n}\nMatCalendarHeader.decorators = [\n    { type: Component, args: [{\n                selector: 'mat-calendar-header',\n                template: \"<div class=\\\"mat-calendar-header\\\">\\n  <div class=\\\"mat-calendar-controls\\\">\\n    <button mat-button type=\\\"button\\\" class=\\\"mat-calendar-period-button\\\"\\n            (click)=\\\"currentPeriodClicked()\\\" [attr.aria-label]=\\\"periodButtonLabel\\\"\\n            cdkAriaLive=\\\"polite\\\">\\n      {{periodButtonText}}\\n      <div class=\\\"mat-calendar-arrow\\\"\\n           [class.mat-calendar-invert]=\\\"calendar.currentView != 'month'\\\"></div>\\n    </button>\\n\\n    <div class=\\\"mat-calendar-spacer\\\"></div>\\n\\n    <ng-content></ng-content>\\n\\n    <button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-previous-button\\\"\\n            [disabled]=\\\"!previousEnabled()\\\" (click)=\\\"previousClicked()\\\"\\n            [attr.aria-label]=\\\"prevButtonLabel\\\">\\n    </button>\\n\\n    <button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-next-button\\\"\\n            [disabled]=\\\"!nextEnabled()\\\" (click)=\\\"nextClicked()\\\"\\n            [attr.aria-label]=\\\"nextButtonLabel\\\">\\n    </button>\\n  </div>\\n</div>\\n\",\n                exportAs: 'matCalendarHeader',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            },] }\n];\nMatCalendarHeader.ctorParameters = () => [\n    { type: MatDatepickerIntl },\n    { type: MatCalendar, decorators: [{ type: Inject, args: [forwardRef(() => MatCalendar),] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: ChangeDetectorRef }\n];\n/**\n * A calendar that is used as part of the datepicker.\n * @docs-private\n */\nclass MatCalendar {\n    constructor(_intl, _dateAdapter, _dateFormats, _changeDetectorRef) {\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * Used for scheduling that focus should be moved to the active cell on the next tick.\n         * We need to schedule it, rather than do it immediately, because we have to wait\n         * for Angular to re-evaluate the view children.\n         */\n        this._moveFocusOnNextTick = false;\n        /** Whether the calendar should be started in month or year view. */\n        this.startView = 'month';\n        /**\n         * Emits when the currently selected date changes.\n         * @breaking-change 11.0.0 Emitted value to change to `D | null`.\n         */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits the year chosen in multiyear view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits the month chosen in year view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.monthSelected = new EventEmitter();\n        /** Emits when any date is selected. */\n        this._userSelection = new EventEmitter();\n        /**\n         * Emits whenever there is a state change that the header may need to respond to.\n         */\n        this.stateChanges = new Subject();\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._dateAdapter) {\n                throw createMissingDateImplError('DateAdapter');\n            }\n            if (!this._dateFormats) {\n                throw createMissingDateImplError('MAT_DATE_FORMATS');\n            }\n        }\n        this._intlChanges = _intl.changes.subscribe(() => {\n            _changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        });\n    }\n    /** A date representing the period (month or year) to start the calendar in. */\n    get startAt() { return this._startAt; }\n    set startAt(value) {\n        this._startAt = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The currently selected date. */\n    get selected() { return this._selected; }\n    set selected(value) {\n        if (value instanceof DateRange) {\n            this._selected = value;\n        }\n        else {\n            this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        }\n    }\n    /** The minimum selectable date. */\n    get minDate() { return this._minDate; }\n    set minDate(value) {\n        this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The maximum selectable date. */\n    get maxDate() { return this._maxDate; }\n    set maxDate(value) {\n        this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The current active date. This determines which time period is shown and which date is\n     * highlighted when using keyboard navigation.\n     */\n    get activeDate() { return this._clampedActiveDate; }\n    set activeDate(value) {\n        this._clampedActiveDate = this._dateAdapter.clampDate(value, this.minDate, this.maxDate);\n        this.stateChanges.next();\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Whether the calendar is in month view. */\n    get currentView() { return this._currentView; }\n    set currentView(value) {\n        this._currentView = value;\n        this._moveFocusOnNextTick = true;\n        this._changeDetectorRef.markForCheck();\n    }\n    ngAfterContentInit() {\n        this._calendarHeaderPortal = new ComponentPortal(this.headerComponent || MatCalendarHeader);\n        this.activeDate = this.startAt || this._dateAdapter.today();\n        // Assign to the private property since we don't want to move focus on init.\n        this._currentView = this.startView;\n    }\n    ngAfterViewChecked() {\n        if (this._moveFocusOnNextTick) {\n            this._moveFocusOnNextTick = false;\n            this.focusActiveCell();\n        }\n    }\n    ngOnDestroy() {\n        this._intlChanges.unsubscribe();\n        this.stateChanges.complete();\n    }\n    ngOnChanges(changes) {\n        const change = changes['minDate'] || changes['maxDate'] || changes['dateFilter'];\n        if (change && !change.firstChange) {\n            const view = this._getCurrentViewComponent();\n            if (view) {\n                // We need to `detectChanges` manually here, because the `minDate`, `maxDate` etc. are\n                // passed down to the view via data bindings which won't be up-to-date when we call `_init`.\n                this._changeDetectorRef.detectChanges();\n                view._init();\n            }\n        }\n        this.stateChanges.next();\n    }\n    focusActiveCell() {\n        this._getCurrentViewComponent()._focusActiveCell(false);\n    }\n    /** Updates today's date after an update of the active date */\n    updateTodaysDate() {\n        const currentView = this.currentView;\n        let view;\n        if (currentView === 'month') {\n            view = this.monthView;\n        }\n        else if (currentView === 'year') {\n            view = this.yearView;\n        }\n        else {\n            view = this.multiYearView;\n        }\n        view._init();\n    }\n    /** Handles date selection in the month view. */\n    _dateSelected(event) {\n        const date = event.value;\n        if (this.selected instanceof DateRange ||\n            (date && !this._dateAdapter.sameDate(date, this.selected))) {\n            // @breaking-change 11.0.0 remove non-null assertion\n            // once the `selectedChange` is allowed to be null.\n            this.selectedChange.emit(date);\n        }\n        this._userSelection.emit(event);\n    }\n    /** Handles year selection in the multiyear view. */\n    _yearSelectedInMultiYearView(normalizedYear) {\n        this.yearSelected.emit(normalizedYear);\n    }\n    /** Handles month selection in the year view. */\n    _monthSelectedInYearView(normalizedMonth) {\n        this.monthSelected.emit(normalizedMonth);\n    }\n    /** Handles year/month selection in the multi-year/year views. */\n    _goToDateInView(date, view) {\n        this.activeDate = date;\n        this.currentView = view;\n    }\n    /** Returns the component instance that corresponds to the current calendar view. */\n    _getCurrentViewComponent() {\n        return this.monthView || this.yearView || this.multiYearView;\n    }\n}\nMatCalendar.decorators = [\n    { type: Component, args: [{\n                selector: 'mat-calendar',\n                template: \"<ng-template [cdkPortalOutlet]=\\\"_calendarHeaderPortal\\\"></ng-template>\\n\\n<div class=\\\"mat-calendar-content\\\" [ngSwitch]=\\\"currentView\\\" cdkMonitorSubtreeFocus tabindex=\\\"-1\\\">\\n  <mat-month-view\\n      *ngSwitchCase=\\\"'month'\\\"\\n      [(activeDate)]=\\\"activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      [dateClass]=\\\"dateClass\\\"\\n      [comparisonStart]=\\\"comparisonStart\\\"\\n      [comparisonEnd]=\\\"comparisonEnd\\\"\\n      (_userSelection)=\\\"_dateSelected($event)\\\">\\n  </mat-month-view>\\n\\n  <mat-year-view\\n      *ngSwitchCase=\\\"'year'\\\"\\n      [(activeDate)]=\\\"activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      [dateClass]=\\\"dateClass\\\"\\n      (monthSelected)=\\\"_monthSelectedInYearView($event)\\\"\\n      (selectedChange)=\\\"_goToDateInView($event, 'month')\\\">\\n  </mat-year-view>\\n\\n  <mat-multi-year-view\\n      *ngSwitchCase=\\\"'multi-year'\\\"\\n      [(activeDate)]=\\\"activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      [dateClass]=\\\"dateClass\\\"\\n      (yearSelected)=\\\"_yearSelectedInMultiYearView($event)\\\"\\n      (selectedChange)=\\\"_goToDateInView($event, 'year')\\\">\\n  </mat-multi-year-view>\\n</div>\\n\",\n                host: {\n                    'class': 'mat-calendar',\n                },\n                exportAs: 'matCalendar',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER],\n                styles: [\".mat-calendar{display:block}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:none}.mat-calendar-controls{display:flex;margin:5% calc(33% / 7 - 16px)}.mat-calendar-controls .mat-icon-button:hover .mat-button-focus-overlay{opacity:.04}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0}.mat-calendar-arrow{display:inline-block;width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top-width:5px;border-top-style:solid;margin:0 0 0 5px;vertical-align:middle}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.mat-calendar-previous-button,.mat-calendar-next-button{position:relative}.mat-calendar-previous-button::after,.mat-calendar-next-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-previous-button,[dir=rtl] .mat-calendar-next-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:\\\"\\\";position:absolute;top:0;left:-8px;right:-8px;height:1px}\\n\"]\n            },] }\n];\nMatCalendar.ctorParameters = () => [\n    { type: MatDatepickerIntl },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: ChangeDetectorRef }\n];\nMatCalendar.propDecorators = {\n    headerComponent: [{ type: Input }],\n    startAt: [{ type: Input }],\n    startView: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    dateClass: [{ type: Input }],\n    comparisonStart: [{ type: Input }],\n    comparisonEnd: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    yearSelected: [{ type: Output }],\n    monthSelected: [{ type: Output }],\n    _userSelection: [{ type: Output }],\n    monthView: [{ type: ViewChild, args: [MatMonthView,] }],\n    yearView: [{ type: ViewChild, args: [MatYearView,] }],\n    multiYearView: [{ type: ViewChild, args: [MatMultiYearView,] }]\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material datepicker.\n * @docs-private\n */\nconst matDatepickerAnimations = {\n    /** Transforms the height of the datepicker's calendar. */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(1, 0.8)'\n        })),\n        transition('void => enter', animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n            opacity: 1,\n            transform: 'scale(1, 1)'\n        }))),\n        transition('* => void', animate('100ms linear', style({ opacity: 0 })))\n    ]),\n    /** Fades in the content of the calendar. */\n    fadeInCalendar: trigger('fadeInCalendar', [\n        state('void', style({ opacity: 0 })),\n        state('enter', style({ opacity: 1 })),\n        // TODO(crisbeto): this animation should be removed since it isn't quite on spec, but we\n        // need to keep it until #12440 gets in, otherwise the exit animation will look glitchy.\n        transition('void => *', animate('120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'))\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate a unique ID for each datepicker instance. */\nlet datepickerUid = 0;\n/** Injection token that determines the scroll handling while the calendar is open. */\nconst MAT_DATEPICKER_SCROLL_STRATEGY = new InjectionToken('mat-datepicker-scroll-strategy');\n/** @docs-private */\nfunction MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_DATEPICKER_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY,\n};\n// Boilerplate for applying mixins to MatDatepickerContent.\n/** @docs-private */\nclass MatDatepickerContentBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatDatepickerContentMixinBase = mixinColor(MatDatepickerContentBase);\n/**\n * Component used as the content for the datepicker dialog and popup. We use this instead of using\n * MatCalendar directly as the content so we can control the initial focus. This also gives us a\n * place to put additional features of the popup that are not part of the calendar itself in the\n * future. (e.g. confirmation buttons).\n * @docs-private\n */\nclass MatDatepickerContent extends _MatDatepickerContentMixinBase {\n    constructor(elementRef, \n    /**\n     * @deprecated `_changeDetectorRef`, `_model` and `_rangeSelectionStrategy`\n     * parameters to become required.\n     * @breaking-change 11.0.0\n     */\n    _changeDetectorRef, _model, _dateAdapter, _rangeSelectionStrategy) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._model = _model;\n        this._dateAdapter = _dateAdapter;\n        this._rangeSelectionStrategy = _rangeSelectionStrategy;\n        this._subscriptions = new Subscription();\n        /** Current state of the animation. */\n        this._animationState = 'enter';\n        /** Emits when an animation has finished. */\n        this._animationDone = new Subject();\n    }\n    ngAfterViewInit() {\n        // @breaking-change 11.0.0 Remove null check for `_changeDetectorRef.\n        if (this._changeDetectorRef) {\n            this._subscriptions.add(this.datepicker._stateChanges.subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n            }));\n        }\n        this._calendar.focusActiveCell();\n    }\n    ngOnDestroy() {\n        this._subscriptions.unsubscribe();\n        this._animationDone.complete();\n    }\n    _handleUserSelection(event) {\n        // @breaking-change 11.0.0 Remove null checks for _model,\n        // _rangeSelectionStrategy and _dateAdapter.\n        if (this._model && this._dateAdapter) {\n            const selection = this._model.selection;\n            const value = event.value;\n            const isRange = selection instanceof DateRange;\n            // If we're selecting a range and we have a selection strategy, always pass the value through\n            // there. Otherwise don't assign null values to the model, unless we're selecting a range.\n            // A null value when picking a range means that the user cancelled the selection (e.g. by\n            // pressing escape), whereas when selecting a single value it means that the value didn't\n            // change. This isn't very intuitive, but it's here for backwards-compatibility.\n            if (isRange && this._rangeSelectionStrategy) {\n                const newSelection = this._rangeSelectionStrategy.selectionFinished(value, selection, event.event);\n                this._model.updateSelection(newSelection, this);\n            }\n            else if (value && (isRange ||\n                !this._dateAdapter.sameDate(value, selection))) {\n                this._model.add(value);\n            }\n        }\n        if (!this._model || this._model.isComplete()) {\n            this.datepicker.close();\n        }\n    }\n    _startExitAnimation() {\n        this._animationState = 'void';\n        // @breaking-change 11.0.0 Remove null check for `_changeDetectorRef`.\n        if (this._changeDetectorRef) {\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    _getSelected() {\n        // @breaking-change 11.0.0 Remove null check for `_model`.\n        return this._model ? this._model.selection : null;\n    }\n}\nMatDatepickerContent.decorators = [\n    { type: Component, args: [{\n                selector: 'mat-datepicker-content',\n                template: \"<mat-calendar cdkTrapFocus\\n    [id]=\\\"datepicker.id\\\"\\n    [ngClass]=\\\"datepicker.panelClass\\\"\\n    [startAt]=\\\"datepicker.startAt\\\"\\n    [startView]=\\\"datepicker.startView\\\"\\n    [minDate]=\\\"datepicker._getMinDate()\\\"\\n    [maxDate]=\\\"datepicker._getMaxDate()\\\"\\n    [dateFilter]=\\\"datepicker._getDateFilter()\\\"\\n    [headerComponent]=\\\"datepicker.calendarHeaderComponent\\\"\\n    [selected]=\\\"_getSelected()\\\"\\n    [dateClass]=\\\"datepicker.dateClass\\\"\\n    [comparisonStart]=\\\"comparisonStart\\\"\\n    [comparisonEnd]=\\\"comparisonEnd\\\"\\n    [@fadeInCalendar]=\\\"'enter'\\\"\\n    (yearSelected)=\\\"datepicker._selectYear($event)\\\"\\n    (monthSelected)=\\\"datepicker._selectMonth($event)\\\"\\n    (_userSelection)=\\\"_handleUserSelection($event)\\\">\\n</mat-calendar>\\n\",\n                host: {\n                    'class': 'mat-datepicker-content',\n                    '[@transformPanel]': '_animationState',\n                    '(@transformPanel.done)': '_animationDone.next()',\n                    '[class.mat-datepicker-content-touch]': 'datepicker.touchUi',\n                },\n                animations: [\n                    matDatepickerAnimations.transformPanel,\n                    matDatepickerAnimations.fadeInCalendar,\n                ],\n                exportAs: 'matDatepickerContent',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['color'],\n                styles: [\".mat-datepicker-content{display:block;border-radius:4px}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content-touch{display:block;max-height:80vh;overflow:auto;margin:-24px}.mat-datepicker-content-touch .mat-calendar{min-width:250px;min-height:312px;max-width:750px;max-height:788px}@media all and (orientation: landscape){.mat-datepicker-content-touch .mat-calendar{width:64vh;height:80vh}}@media all and (orientation: portrait){.mat-datepicker-content-touch .mat-calendar{width:80vw;height:100vw}}\\n\"]\n            },] }\n];\nMatDatepickerContent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: MatDateSelectionModel },\n    { type: DateAdapter },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_RANGE_SELECTION_STRATEGY,] }] }\n];\nMatDatepickerContent.propDecorators = {\n    _calendar: [{ type: ViewChild, args: [MatCalendar,] }]\n};\n/** Base class for a datepicker. */\nclass MatDatepickerBase {\n    constructor(_dialog, _overlay, _ngZone, _viewContainerRef, scrollStrategy, _dateAdapter, _dir, _document, _model) {\n        this._dialog = _dialog;\n        this._overlay = _overlay;\n        this._ngZone = _ngZone;\n        this._viewContainerRef = _viewContainerRef;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._document = _document;\n        this._model = _model;\n        this._inputStateChanges = Subscription.EMPTY;\n        /** The view that the calendar should start in. */\n        this.startView = 'month';\n        this._touchUi = false;\n        /** Preferred position of the datepicker in the X axis. */\n        this.xPosition = 'start';\n        /** Preferred position of the datepicker in the Y axis. */\n        this.yPosition = 'below';\n        /**\n         * Emits selected year in multiyear view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits selected month in year view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.monthSelected = new EventEmitter();\n        /** Emits when the datepicker has been opened. */\n        this.openedStream = new EventEmitter();\n        /** Emits when the datepicker has been closed. */\n        this.closedStream = new EventEmitter();\n        this._opened = false;\n        /** The id for the datepicker calendar. */\n        this.id = `mat-datepicker-${datepickerUid++}`;\n        /** The element that was focused before the datepicker was opened. */\n        this._focusedElementBeforeOpen = null;\n        /** Unique class that will be added to the backdrop so that the test harnesses can look it up. */\n        this._backdropHarnessClass = `${this.id}-backdrop`;\n        /** Emits when the datepicker's state changes. */\n        this._stateChanges = new Subject();\n        if (!this._dateAdapter && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        this._scrollStrategy = scrollStrategy;\n    }\n    /** The date to open the calendar to initially. */\n    get startAt() {\n        // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n        // selected value is.\n        return this._startAt || (this._datepickerInput ? this._datepickerInput.getStartValue() : null);\n    }\n    set startAt(value) {\n        this._startAt = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** Color palette to use on the datepicker's calendar. */\n    get color() {\n        return this._color ||\n            (this._datepickerInput ? this._datepickerInput.getThemePalette() : undefined);\n    }\n    set color(value) {\n        this._color = value;\n    }\n    /**\n     * Whether the calendar UI is in touch mode. In touch mode the calendar opens in a dialog rather\n     * than a popup and elements have more padding to allow for bigger touch targets.\n     */\n    get touchUi() { return this._touchUi; }\n    set touchUi(value) {\n        this._touchUi = coerceBooleanProperty(value);\n    }\n    /** Whether the datepicker pop-up should be disabled. */\n    get disabled() {\n        return this._disabled === undefined && this._datepickerInput ?\n            this._datepickerInput.disabled : !!this._disabled;\n    }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._stateChanges.next(undefined);\n        }\n    }\n    /** Whether the calendar is open. */\n    get opened() { return this._opened; }\n    set opened(value) {\n        coerceBooleanProperty(value) ? this.open() : this.close();\n    }\n    /** The minimum selectable date. */\n    _getMinDate() {\n        return this._datepickerInput && this._datepickerInput.min;\n    }\n    /** The maximum selectable date. */\n    _getMaxDate() {\n        return this._datepickerInput && this._datepickerInput.max;\n    }\n    _getDateFilter() {\n        return this._datepickerInput && this._datepickerInput.dateFilter;\n    }\n    ngOnChanges(changes) {\n        const positionChange = changes['xPosition'] || changes['yPosition'];\n        if (positionChange && !positionChange.firstChange && this._popupRef) {\n            this._setConnectedPositions(this._popupRef.getConfig().positionStrategy);\n            if (this.opened) {\n                this._popupRef.updatePosition();\n            }\n        }\n        this._stateChanges.next(undefined);\n    }\n    ngOnDestroy() {\n        this._destroyPopup();\n        this.close();\n        this._inputStateChanges.unsubscribe();\n        this._stateChanges.complete();\n    }\n    /** Selects the given date */\n    select(date) {\n        this._model.add(date);\n    }\n    /** Emits the selected year in multiyear view */\n    _selectYear(normalizedYear) {\n        this.yearSelected.emit(normalizedYear);\n    }\n    /** Emits selected month in year view */\n    _selectMonth(normalizedMonth) {\n        this.monthSelected.emit(normalizedMonth);\n    }\n    /**\n     * Register an input with this datepicker.\n     * @param input The datepicker input to register with this datepicker.\n     * @returns Selection model that the input should hook itself up to.\n     */\n    _registerInput(input) {\n        if (this._datepickerInput && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('A MatDatepicker can only be associated with a single input.');\n        }\n        this._inputStateChanges.unsubscribe();\n        this._datepickerInput = input;\n        this._inputStateChanges =\n            input.stateChanges.subscribe(() => this._stateChanges.next(undefined));\n        return this._model;\n    }\n    /** Open the calendar. */\n    open() {\n        if (this._opened || this.disabled) {\n            return;\n        }\n        if (!this._datepickerInput && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('Attempted to open an MatDatepicker with no associated input.');\n        }\n        if (this._document) {\n            this._focusedElementBeforeOpen = this._document.activeElement;\n        }\n        this.touchUi ? this._openAsDialog() : this._openAsPopup();\n        this._opened = true;\n        this.openedStream.emit();\n    }\n    /** Close the calendar. */\n    close() {\n        if (!this._opened) {\n            return;\n        }\n        if (this._popupComponentRef && this._popupRef) {\n            const instance = this._popupComponentRef.instance;\n            instance._startExitAnimation();\n            instance._animationDone.pipe(take(1)).subscribe(() => this._destroyPopup());\n        }\n        if (this._dialogRef) {\n            this._dialogRef.close();\n            this._dialogRef = null;\n        }\n        const completeClose = () => {\n            // The `_opened` could've been reset already if\n            // we got two events in quick succession.\n            if (this._opened) {\n                this._opened = false;\n                this.closedStream.emit();\n                this._focusedElementBeforeOpen = null;\n            }\n        };\n        if (this._focusedElementBeforeOpen &&\n            typeof this._focusedElementBeforeOpen.focus === 'function') {\n            // Because IE moves focus asynchronously, we can't count on it being restored before we've\n            // marked the datepicker as closed. If the event fires out of sequence and the element that\n            // we're refocusing opens the datepicker on focus, the user could be stuck with not being\n            // able to close the calendar at all. We work around it by making the logic, that marks\n            // the datepicker as closed, async as well.\n            this._focusedElementBeforeOpen.focus();\n            setTimeout(completeClose);\n        }\n        else {\n            completeClose();\n        }\n    }\n    /** Open the calendar as a dialog. */\n    _openAsDialog() {\n        // Usually this would be handled by `open` which ensures that we can only have one overlay\n        // open at a time, however since we reset the variables in async handlers some overlays\n        // may slip through if the user opens and closes multiple times in quick succession (e.g.\n        // by holding down the enter key).\n        if (this._dialogRef) {\n            this._dialogRef.close();\n        }\n        this._dialogRef = this._dialog.open(MatDatepickerContent, {\n            direction: this._dir ? this._dir.value : 'ltr',\n            viewContainerRef: this._viewContainerRef,\n            panelClass: 'mat-datepicker-dialog',\n            // These values are all the same as the defaults, but we set them explicitly so that the\n            // datepicker dialog behaves consistently even if the user changed the defaults.\n            hasBackdrop: true,\n            disableClose: false,\n            backdropClass: ['cdk-overlay-dark-backdrop', this._backdropHarnessClass],\n            width: '',\n            height: '',\n            minWidth: '',\n            minHeight: '',\n            maxWidth: '80vw',\n            maxHeight: '',\n            position: {},\n            autoFocus: true,\n            // `MatDialog` has focus restoration built in, however we want to disable it since the\n            // datepicker also has focus restoration for dropdown mode. We want to do this, in order\n            // to ensure that the timing is consistent between dropdown and dialog modes since `MatDialog`\n            // restores focus when the animation is finished, but the datepicker does it immediately.\n            // Furthermore, this avoids any conflicts where the datepicker consumer might move focus\n            // inside the `closed` event which is dispatched immediately.\n            restoreFocus: false\n        });\n        this._dialogRef.afterClosed().subscribe(() => this.close());\n        this._forwardContentValues(this._dialogRef.componentInstance);\n    }\n    /** Open the calendar as a popup. */\n    _openAsPopup() {\n        const portal = new ComponentPortal(MatDatepickerContent, this._viewContainerRef);\n        this._destroyPopup();\n        this._createPopup();\n        this._popupComponentRef = this._popupRef.attach(portal);\n        this._forwardContentValues(this._popupComponentRef.instance);\n        // Update the position once the calendar has rendered.\n        this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n            this._popupRef.updatePosition();\n        });\n    }\n    /** Forwards relevant values from the datepicker to the datepicker content inside the overlay. */\n    _forwardContentValues(instance) {\n        instance.datepicker = this;\n        instance.color = this.color;\n    }\n    /** Create the popup. */\n    _createPopup() {\n        const positionStrategy = this._overlay.position()\n            .flexibleConnectedTo(this._datepickerInput.getConnectedOverlayOrigin())\n            .withTransformOriginOn('.mat-datepicker-content')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(8)\n            .withLockedPosition();\n        const overlayConfig = new OverlayConfig({\n            positionStrategy: this._setConnectedPositions(positionStrategy),\n            hasBackdrop: true,\n            backdropClass: ['mat-overlay-transparent-backdrop', this._backdropHarnessClass],\n            direction: this._dir,\n            scrollStrategy: this._scrollStrategy(),\n            panelClass: 'mat-datepicker-popup',\n        });\n        this._popupRef = this._overlay.create(overlayConfig);\n        this._popupRef.overlayElement.setAttribute('role', 'dialog');\n        merge(this._popupRef.backdropClick(), this._popupRef.detachments(), this._popupRef.keydownEvents().pipe(filter(event => {\n            // Closing on alt + up is only valid when there's an input associated with the datepicker.\n            return event.keyCode === ESCAPE ||\n                (this._datepickerInput && event.altKey && event.keyCode === UP_ARROW);\n        }))).subscribe(event => {\n            if (event) {\n                event.preventDefault();\n            }\n            this.close();\n        });\n    }\n    /** Destroys the current popup overlay. */\n    _destroyPopup() {\n        if (this._popupRef) {\n            this._popupRef.dispose();\n            this._popupRef = this._popupComponentRef = null;\n        }\n    }\n    /** Sets the positions of the datepicker in dropdown mode based on the current configuration. */\n    _setConnectedPositions(strategy) {\n        const primaryX = this.xPosition === 'end' ? 'end' : 'start';\n        const secondaryX = primaryX === 'start' ? 'end' : 'start';\n        const primaryY = this.yPosition === 'above' ? 'bottom' : 'top';\n        const secondaryY = primaryY === 'top' ? 'bottom' : 'top';\n        return strategy.withPositions([\n            {\n                originX: primaryX,\n                originY: secondaryY,\n                overlayX: primaryX,\n                overlayY: primaryY\n            },\n            {\n                originX: primaryX,\n                originY: primaryY,\n                overlayX: primaryX,\n                overlayY: secondaryY\n            },\n            {\n                originX: secondaryX,\n                originY: secondaryY,\n                overlayX: secondaryX,\n                overlayY: primaryY\n            },\n            {\n                originX: secondaryX,\n                originY: primaryY,\n                overlayX: secondaryX,\n                overlayY: secondaryY\n            }\n        ]);\n    }\n}\nMatDatepickerBase.decorators = [\n    { type: Directive }\n];\nMatDatepickerBase.ctorParameters = () => [\n    { type: MatDialog },\n    { type: Overlay },\n    { type: NgZone },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DATEPICKER_SCROLL_STRATEGY,] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: MatDateSelectionModel }\n];\nMatDatepickerBase.propDecorators = {\n    calendarHeaderComponent: [{ type: Input }],\n    startAt: [{ type: Input }],\n    startView: [{ type: Input }],\n    color: [{ type: Input }],\n    touchUi: [{ type: Input }],\n    disabled: [{ type: Input }],\n    xPosition: [{ type: Input }],\n    yPosition: [{ type: Input }],\n    yearSelected: [{ type: Output }],\n    monthSelected: [{ type: Output }],\n    panelClass: [{ type: Input }],\n    dateClass: [{ type: Input }],\n    openedStream: [{ type: Output, args: ['opened',] }],\n    closedStream: [{ type: Output, args: ['closed',] }],\n    opened: [{ type: Input }]\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"matDatepicker\"). We can change this to a directive\n// if angular adds support for `exportAs: '$implicit'` on directives.\n/** Component responsible for managing the datepicker popup/dialog. */\nclass MatDatepicker extends MatDatepickerBase {\n}\nMatDatepicker.decorators = [\n    { type: Component, args: [{\n                selector: 'mat-datepicker',\n                template: '',\n                exportAs: 'matDatepicker',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                providers: [MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER]\n            },] }\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An event used for datepicker input and change events. We don't always have access to a native\n * input or change event because the event may have been triggered by the user clicking on the\n * calendar popup. For consistency, we always use MatDatepickerInputEvent instead.\n */\nclass MatDatepickerInputEvent {\n    constructor(\n    /** Reference to the datepicker input component that emitted the event. */\n    target, \n    /** Reference to the native input element associated with the datepicker input. */\n    targetElement) {\n        this.target = target;\n        this.targetElement = targetElement;\n        this.value = this.target.value;\n    }\n}\n/** Base class for datepicker inputs. */\nclass MatDatepickerInputBase {\n    constructor(_elementRef, _dateAdapter, _dateFormats) {\n        this._elementRef = _elementRef;\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        /** Emits when a `change` event is fired on this `<input>`. */\n        this.dateChange = new EventEmitter();\n        /** Emits when an `input` event is fired on this `<input>`. */\n        this.dateInput = new EventEmitter();\n        /** Emits when the value changes (either due to user input or programmatic change). */\n        this._valueChange = new EventEmitter();\n        /** Emits when the internal state has changed */\n        this.stateChanges = new Subject();\n        this._onTouched = () => { };\n        this._validatorOnChange = () => { };\n        this._cvaOnChange = () => { };\n        this._valueChangesSubscription = Subscription.EMPTY;\n        this._localeSubscription = Subscription.EMPTY;\n        /** The form control validator for whether the input parses. */\n        this._parseValidator = () => {\n            return this._lastValueValid ?\n                null : { 'matDatepickerParse': { 'text': this._elementRef.nativeElement.value } };\n        };\n        /** The form control validator for the date filter. */\n        this._filterValidator = (control) => {\n            const controlValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            const dateFilter = this._getDateFilter();\n            return !dateFilter || !controlValue || dateFilter(controlValue) ?\n                null : { 'matDatepickerFilter': true };\n        };\n        /** The form control validator for the min date. */\n        this._minValidator = (control) => {\n            const controlValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            const min = this._getMinDate();\n            return (!min || !controlValue ||\n                this._dateAdapter.compareDate(min, controlValue) <= 0) ?\n                null : { 'matDatepickerMin': { 'min': min, 'actual': controlValue } };\n        };\n        /** The form control validator for the max date. */\n        this._maxValidator = (control) => {\n            const controlValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            const max = this._getMaxDate();\n            return (!max || !controlValue ||\n                this._dateAdapter.compareDate(max, controlValue) >= 0) ?\n                null : { 'matDatepickerMax': { 'max': max, 'actual': controlValue } };\n        };\n        /** Whether the last value set on the input was valid. */\n        this._lastValueValid = false;\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._dateAdapter) {\n                throw createMissingDateImplError('DateAdapter');\n            }\n            if (!this._dateFormats) {\n                throw createMissingDateImplError('MAT_DATE_FORMATS');\n            }\n        }\n        // Update the displayed date when the locale changes.\n        this._localeSubscription = _dateAdapter.localeChanges.subscribe(() => {\n            this.value = this.value;\n        });\n    }\n    /** The value of the input. */\n    get value() {\n        return this._model ? this._getValueFromModel(this._model.selection) : this._pendingValue;\n    }\n    set value(value) {\n        value = this._dateAdapter.deserialize(value);\n        this._lastValueValid = this._isValidValue(value);\n        value = this._dateAdapter.getValidDateOrNull(value);\n        const oldDate = this.value;\n        this._assignValue(value);\n        this._formatValue(value);\n        if (!this._dateAdapter.sameDate(oldDate, value)) {\n            this._valueChange.emit(value);\n        }\n    }\n    /** Whether the datepicker-input is disabled. */\n    get disabled() { return !!this._disabled || this._parentDisabled(); }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        const element = this._elementRef.nativeElement;\n        if (this._disabled !== newValue) {\n            this._disabled = newValue;\n            this.stateChanges.next(undefined);\n        }\n        // We need to null check the `blur` method, because it's undefined during SSR.\n        // In Ivy static bindings are invoked earlier, before the element is attached to the DOM.\n        // This can cause an error to be thrown in some browsers (IE/Edge) which assert that the\n        // element has been inserted.\n        if (newValue && this._isInitialized && element.blur) {\n            // Normally, native input elements automatically blur if they turn disabled. This behavior\n            // is problematic, because it would mean that it triggers another change detection cycle,\n            // which then causes a changed after checked error if the input element was focused before.\n            element.blur();\n        }\n    }\n    /** Gets the base validator functions. */\n    _getValidators() {\n        return [this._parseValidator, this._minValidator, this._maxValidator, this._filterValidator];\n    }\n    /** Registers a date selection model with the input. */\n    _registerModel(model) {\n        this._model = model;\n        this._valueChangesSubscription.unsubscribe();\n        if (this._pendingValue) {\n            this._assignValue(this._pendingValue);\n        }\n        this._valueChangesSubscription = this._model.selectionChanged.subscribe(event => {\n            if (event.source !== this) {\n                const value = this._getValueFromModel(event.selection);\n                this._lastValueValid = this._isValidValue(value);\n                this._cvaOnChange(value);\n                this._onTouched();\n                this._formatValue(value);\n                // Note that we can't wrap the entire block with this logic, because for the range inputs\n                // we want to revalidate whenever either one of the inputs changes and we don't have a\n                // good way of distinguishing it at the moment.\n                if (this._canEmitChangeEvent(event)) {\n                    this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n                    this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n                }\n                if (this._outsideValueChanged) {\n                    this._outsideValueChanged();\n                }\n            }\n        });\n    }\n    ngAfterViewInit() {\n        this._isInitialized = true;\n    }\n    ngOnChanges(changes) {\n        if (dateInputsHaveChanged(changes, this._dateAdapter)) {\n            this.stateChanges.next(undefined);\n        }\n    }\n    ngOnDestroy() {\n        this._valueChangesSubscription.unsubscribe();\n        this._localeSubscription.unsubscribe();\n        this._valueChange.complete();\n        this.stateChanges.complete();\n    }\n    /** @docs-private */\n    registerOnValidatorChange(fn) {\n        this._validatorOnChange = fn;\n    }\n    /** @docs-private */\n    validate(c) {\n        return this._validator ? this._validator(c) : null;\n    }\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value) {\n        this.value = value;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._cvaOnChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    _onKeydown(event) {\n        const isAltDownArrow = event.altKey && event.keyCode === DOWN_ARROW;\n        if (isAltDownArrow && !this._elementRef.nativeElement.readOnly) {\n            this._openPopup();\n            event.preventDefault();\n        }\n    }\n    _onInput(value) {\n        const lastValueWasValid = this._lastValueValid;\n        let date = this._dateAdapter.parse(value, this._dateFormats.parse.dateInput);\n        this._lastValueValid = this._isValidValue(date);\n        date = this._dateAdapter.getValidDateOrNull(date);\n        if (!this._dateAdapter.sameDate(date, this.value)) {\n            this._assignValue(date);\n            this._cvaOnChange(date);\n            this._valueChange.emit(date);\n            this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n        }\n        else {\n            // Call the CVA change handler for invalid values\n            // since this is what marks the control as dirty.\n            if (value && !this.value) {\n                this._cvaOnChange(date);\n            }\n            if (lastValueWasValid !== this._lastValueValid) {\n                this._validatorOnChange();\n            }\n        }\n    }\n    _onChange() {\n        this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n    }\n    /** Handles blur events on the input. */\n    _onBlur() {\n        // Reformat the input only if we have a valid value.\n        if (this.value) {\n            this._formatValue(this.value);\n        }\n        this._onTouched();\n    }\n    /** Formats a value and sets it on the input element. */\n    _formatValue(value) {\n        this._elementRef.nativeElement.value =\n            value ? this._dateAdapter.format(value, this._dateFormats.display.dateInput) : '';\n    }\n    /** Assigns a value to the model. */\n    _assignValue(value) {\n        // We may get some incoming values before the model was\n        // assigned. Save the value so that we can assign it later.\n        if (this._model) {\n            this._assignValueToModel(value);\n            this._pendingValue = null;\n        }\n        else {\n            this._pendingValue = value;\n        }\n    }\n    /** Whether a value is considered valid. */\n    _isValidValue(value) {\n        return !value || this._dateAdapter.isValid(value);\n    }\n    /**\n     * Checks whether a parent control is disabled. This is in place so that it can be overridden\n     * by inputs extending this one which can be placed inside of a group that can be disabled.\n     */\n    _parentDisabled() {\n        return false;\n    }\n}\nMatDatepickerInputBase.decorators = [\n    { type: Directive }\n];\nMatDatepickerInputBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] }\n];\nMatDatepickerInputBase.propDecorators = {\n    value: [{ type: Input }],\n    disabled: [{ type: Input }],\n    dateChange: [{ type: Output }],\n    dateInput: [{ type: Output }]\n};\n/**\n * Checks whether the `SimpleChanges` object from an `ngOnChanges`\n * callback has any changes, accounting for date objects.\n */\nfunction dateInputsHaveChanged(changes, adapter) {\n    const keys = Object.keys(changes);\n    for (let key of keys) {\n        const { previousValue, currentValue } = changes[key];\n        if (adapter.isDateInstance(previousValue) && adapter.isDateInstance(currentValue)) {\n            if (!adapter.sameDate(previousValue, currentValue)) {\n                return true;\n            }\n        }\n        else {\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nconst MAT_DATEPICKER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatDatepickerInput),\n    multi: true\n};\n/** @docs-private */\nconst MAT_DATEPICKER_VALIDATORS = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MatDatepickerInput),\n    multi: true\n};\n/** Directive used to connect an input to a MatDatepicker. */\nclass MatDatepickerInput extends MatDatepickerInputBase {\n    constructor(elementRef, dateAdapter, dateFormats, _formField) {\n        super(elementRef, dateAdapter, dateFormats);\n        this._formField = _formField;\n        this._validator = Validators.compose(super._getValidators());\n    }\n    /** The datepicker that this input is associated with. */\n    set matDatepicker(datepicker) {\n        if (datepicker) {\n            this._datepicker = datepicker;\n            this._registerModel(datepicker._registerInput(this));\n        }\n    }\n    /** The minimum valid date. */\n    get min() { return this._min; }\n    set min(value) {\n        const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        if (!this._dateAdapter.sameDate(validValue, this._min)) {\n            this._min = validValue;\n            this._validatorOnChange();\n        }\n    }\n    /** The maximum valid date. */\n    get max() { return this._max; }\n    set max(value) {\n        const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        if (!this._dateAdapter.sameDate(validValue, this._max)) {\n            this._max = validValue;\n            this._validatorOnChange();\n        }\n    }\n    /** Function that can be used to filter out dates within the datepicker. */\n    get dateFilter() { return this._dateFilter; }\n    set dateFilter(value) {\n        this._dateFilter = value;\n        this._validatorOnChange();\n    }\n    /**\n     * Gets the element that the datepicker popup should be connected to.\n     * @return The element to connect the popup to.\n     */\n    getConnectedOverlayOrigin() {\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n    }\n    /** Returns the palette used by the input's form field, if any. */\n    getThemePalette() {\n        return this._formField ? this._formField.color : undefined;\n    }\n    /** Gets the value at which the calendar should start. */\n    getStartValue() {\n        return this.value;\n    }\n    /**\n     * @deprecated\n     * @breaking-change 8.0.0 Use `getConnectedOverlayOrigin` instead\n     */\n    getPopupConnectionElementRef() {\n        return this.getConnectedOverlayOrigin();\n    }\n    /** Opens the associated datepicker. */\n    _openPopup() {\n        if (this._datepicker) {\n            this._datepicker.open();\n        }\n    }\n    _getValueFromModel(modelValue) {\n        return modelValue;\n    }\n    _assignValueToModel(value) {\n        if (this._model) {\n            this._model.updateSelection(value, this);\n        }\n    }\n    /** Gets the input's minimum date. */\n    _getMinDate() {\n        return this._min;\n    }\n    /** Gets the input's maximum date. */\n    _getMaxDate() {\n        return this._max;\n    }\n    /** Gets the input's date filtering function. */\n    _getDateFilter() {\n        return this._dateFilter;\n    }\n    _canEmitChangeEvent() {\n        return true;\n    }\n}\nMatDatepickerInput.decorators = [\n    { type: Directive, args: [{\n                selector: 'input[matDatepicker]',\n                providers: [\n                    MAT_DATEPICKER_VALUE_ACCESSOR,\n                    MAT_DATEPICKER_VALIDATORS,\n                    { provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: MatDatepickerInput },\n                ],\n                host: {\n                    'class': 'mat-datepicker-input',\n                    '[attr.aria-haspopup]': '_datepicker ? \"dialog\" : null',\n                    '[attr.aria-owns]': '(_datepicker?.opened && _datepicker.id) || null',\n                    '[attr.min]': 'min ? _dateAdapter.toIso8601(min) : null',\n                    '[attr.max]': 'max ? _dateAdapter.toIso8601(max) : null',\n                    // Used by the test harness to tie this input to its calendar. We can't depend on\n                    // `aria-owns` for this, because it's only defined while the calendar is open.\n                    '[attr.data-mat-calendar]': '_datepicker ? _datepicker.id : null',\n                    '[disabled]': 'disabled',\n                    '(input)': '_onInput($event.target.value)',\n                    '(change)': '_onChange()',\n                    '(blur)': '_onBlur()',\n                    '(keydown)': '_onKeydown($event)',\n                },\n                exportAs: 'matDatepickerInput',\n            },] }\n];\nMatDatepickerInput.ctorParameters = () => [\n    { type: ElementRef },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }] }\n];\nMatDatepickerInput.propDecorators = {\n    matDatepicker: [{ type: Input }],\n    min: [{ type: Input }],\n    max: [{ type: Input }],\n    dateFilter: [{ type: Input, args: ['matDatepickerFilter',] }]\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Can be used to override the icon of a `matDatepickerToggle`. */\nclass MatDatepickerToggleIcon {\n}\nMatDatepickerToggleIcon.decorators = [\n    { type: Directive, args: [{\n                selector: '[matDatepickerToggleIcon]'\n            },] }\n];\nclass MatDatepickerToggle {\n    constructor(_intl, _changeDetectorRef, defaultTabIndex) {\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._stateChanges = Subscription.EMPTY;\n        const parsedTabIndex = Number(defaultTabIndex);\n        this.tabIndex = (parsedTabIndex || parsedTabIndex === 0) ? parsedTabIndex : null;\n    }\n    /** Whether the toggle button is disabled. */\n    get disabled() {\n        if (this._disabled === undefined && this.datepicker) {\n            return this.datepicker.disabled;\n        }\n        return !!this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    ngOnChanges(changes) {\n        if (changes['datepicker']) {\n            this._watchStateChanges();\n        }\n    }\n    ngOnDestroy() {\n        this._stateChanges.unsubscribe();\n    }\n    ngAfterContentInit() {\n        this._watchStateChanges();\n    }\n    _open(event) {\n        if (this.datepicker && !this.disabled) {\n            this.datepicker.open();\n            event.stopPropagation();\n        }\n    }\n    _watchStateChanges() {\n        const datepickerStateChanged = this.datepicker ? this.datepicker._stateChanges : of();\n        const inputStateChanged = this.datepicker && this.datepicker._datepickerInput ?\n            this.datepicker._datepickerInput.stateChanges : of();\n        const datepickerToggled = this.datepicker ?\n            merge(this.datepicker.openedStream, this.datepicker.closedStream) :\n            of();\n        this._stateChanges.unsubscribe();\n        this._stateChanges = merge(this._intl.changes, datepickerStateChanged, inputStateChanged, datepickerToggled).subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n}\nMatDatepickerToggle.decorators = [\n    { type: Component, args: [{\n                selector: 'mat-datepicker-toggle',\n                template: \"<button\\n  #button\\n  mat-icon-button\\n  type=\\\"button\\\"\\n  [attr.aria-haspopup]=\\\"datepicker ? 'dialog' : null\\\"\\n  [attr.aria-label]=\\\"_intl.openCalendarLabel\\\"\\n  [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\\n  [disabled]=\\\"disabled\\\"\\n  [disableRipple]=\\\"disableRipple\\\"\\n  (click)=\\\"_open($event)\\\">\\n\\n  <svg\\n    *ngIf=\\\"!_customIcon\\\"\\n    class=\\\"mat-datepicker-toggle-default-icon\\\"\\n    viewBox=\\\"0 0 24 24\\\"\\n    width=\\\"24px\\\"\\n    height=\\\"24px\\\"\\n    fill=\\\"currentColor\\\"\\n    focusable=\\\"false\\\">\\n    <path d=\\\"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\\\"/>\\n  </svg>\\n\\n  <ng-content select=\\\"[matDatepickerToggleIcon]\\\"></ng-content>\\n</button>\\n\",\n                host: {\n                    'class': 'mat-datepicker-toggle',\n                    // Always set the tabindex to -1 so that it doesn't overlap with any custom tabindex the\n                    // consumer may have provided, while still being able to receive focus.\n                    '[attr.tabindex]': 'disabled ? null : -1',\n                    '[class.mat-datepicker-toggle-active]': 'datepicker && datepicker.opened',\n                    '[class.mat-accent]': 'datepicker && datepicker.color === \"accent\"',\n                    '[class.mat-warn]': 'datepicker && datepicker.color === \"warn\"',\n                    // Used by the test harness to tie this toggle to its datepicker.\n                    '[attr.data-mat-calendar]': 'datepicker ? datepicker.id : null',\n                    '(focus)': '_button.focus()',\n                },\n                exportAs: 'matDatepickerToggle',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle-default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-datepicker-toggle-default-icon{display:block;width:1.5em;height:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-datepicker-toggle-default-icon{margin:auto}\\n\"]\n            },] }\n];\nMatDatepickerToggle.ctorParameters = () => [\n    { type: MatDatepickerIntl },\n    { type: ChangeDetectorRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] }\n];\nMatDatepickerToggle.propDecorators = {\n    datepicker: [{ type: Input, args: ['for',] }],\n    tabIndex: [{ type: Input }],\n    disabled: [{ type: Input }],\n    disableRipple: [{ type: Input }],\n    _customIcon: [{ type: ContentChild, args: [MatDatepickerToggleIcon,] }],\n    _button: [{ type: ViewChild, args: ['button',] }]\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to provide the date range input wrapper component\n * to the parts without circular dependencies.\n */\nconst MAT_DATE_RANGE_INPUT_PARENT = new InjectionToken('MAT_DATE_RANGE_INPUT_PARENT');\n/**\n * Base class for the individual inputs that can be projected inside a `mat-date-range-input`.\n */\nclass MatDateRangeInputPartBase extends MatDatepickerInputBase {\n    constructor(_rangeInput, elementRef, _defaultErrorStateMatcher, _injector, _parentForm, _parentFormGroup, dateAdapter, dateFormats) {\n        super(elementRef, dateAdapter, dateFormats);\n        this._rangeInput = _rangeInput;\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._injector = _injector;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this._outsideValueChanged = () => {\n            // Whenever the value changes outside the input we need to revalidate, because\n            // the validation state of each of the inputs depends on the other one.\n            this._validatorOnChange();\n        };\n    }\n    ngOnInit() {\n        // We need the date input to provide itself as a `ControlValueAccessor` and a `Validator`, while\n        // injecting its `NgControl` so that the error state is handled correctly. This introduces a\n        // circular dependency, because both `ControlValueAccessor` and `Validator` depend on the input\n        // itself. Usually we can work around it for the CVA, but there's no API to do it for the\n        // validator. We work around it here by injecting the `NgControl` in `ngOnInit`, after\n        // everything has been resolved.\n        const ngControl = this._injector.get(NgControl, null, InjectFlags.Self);\n        if (ngControl) {\n            this.ngControl = ngControl;\n        }\n    }\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n    }\n    /** Gets whether the input is empty. */\n    isEmpty() {\n        return this._elementRef.nativeElement.value.length === 0;\n    }\n    /** Gets the placeholder of the input. */\n    _getPlaceholder() {\n        return this._elementRef.nativeElement.placeholder;\n    }\n    /** Focuses the input. */\n    focus() {\n        this._elementRef.nativeElement.focus();\n    }\n    /** Handles `input` events on the input element. */\n    _onInput(value) {\n        super._onInput(value);\n        this._rangeInput._handleChildValueChange();\n    }\n    /** Opens the datepicker associated with the input. */\n    _openPopup() {\n        this._rangeInput._openDatepicker();\n    }\n    /** Gets the minimum date from the range input. */\n    _getMinDate() {\n        return this._rangeInput.min;\n    }\n    /** Gets the maximum date from the range input. */\n    _getMaxDate() {\n        return this._rangeInput.max;\n    }\n    /** Gets the date filter function from the range input. */\n    _getDateFilter() {\n        return this._rangeInput.dateFilter;\n    }\n    _parentDisabled() {\n        return this._rangeInput._groupDisabled;\n    }\n}\nMatDateRangeInputPartBase.decorators = [\n    { type: Directive }\n];\nMatDateRangeInputPartBase.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DATE_RANGE_INPUT_PARENT,] }] },\n    { type: ElementRef },\n    { type: ErrorStateMatcher },\n    { type: Injector },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] }\n];\nconst _MatDateRangeInputBase = \n// Needs to be `as any`, because the base class is abstract.\nmixinErrorState(MatDateRangeInputPartBase);\n/** Input for entering the start date in a `mat-date-range-input`. */\nclass MatStartDate extends _MatDateRangeInputBase {\n    constructor(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats) {\n        // TODO(crisbeto): this constructor shouldn't be necessary, but ViewEngine doesn't seem to\n        // handle DI correctly when it is inherited from `MatDateRangeInputPartBase`. We can drop this\n        // constructor once ViewEngine is removed.\n        super(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats);\n        /** Validator that checks that the start date isn't after the end date. */\n        this._startValidator = (control) => {\n            const start = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            const end = this._model ? this._model.selection.end : null;\n            return (!start || !end ||\n                this._dateAdapter.compareDate(start, end) <= 0) ?\n                null : { 'matStartDateInvalid': { 'end': end, 'actual': start } };\n        };\n        this._validator = Validators.compose([...super._getValidators(), this._startValidator]);\n        this._canEmitChangeEvent = (event) => {\n            return event.source !== this._rangeInput._endInput;\n        };\n    }\n    ngOnInit() {\n        // Normally this happens automatically, but it seems to break if not added explicitly when all\n        // of the criteria below are met:\n        // 1) The class extends a TS mixin.\n        // 2) The application is running in ViewEngine.\n        // 3) The application is being transpiled through tsickle.\n        // This can be removed once google3 is completely migrated to Ivy.\n        super.ngOnInit();\n    }\n    ngDoCheck() {\n        // Normally this happens automatically, but it seems to break if not added explicitly when all\n        // of the criteria below are met:\n        // 1) The class extends a TS mixin.\n        // 2) The application is running in ViewEngine.\n        // 3) The application is being transpiled through tsickle.\n        // This can be removed once google3 is completely migrated to Ivy.\n        super.ngDoCheck();\n    }\n    _getValueFromModel(modelValue) {\n        return modelValue.start;\n    }\n    _assignValueToModel(value) {\n        if (this._model) {\n            const range = new DateRange(value, this._model.selection.end);\n            this._model.updateSelection(range, this);\n            this._cvaOnChange(value);\n        }\n    }\n    _formatValue(value) {\n        super._formatValue(value);\n        // Any time the input value is reformatted we need to tell the parent.\n        this._rangeInput._handleChildValueChange();\n    }\n    /** Gets the value that should be used when mirroring the input's size. */\n    getMirrorValue() {\n        const element = this._elementRef.nativeElement;\n        const value = element.value;\n        return value.length > 0 ? value : element.placeholder;\n    }\n}\nMatStartDate.decorators = [\n    { type: Directive, args: [{\n                selector: 'input[matStartDate]',\n                host: {\n                    'class': 'mat-start-date mat-date-range-input-inner',\n                    '[disabled]': 'disabled',\n                    '(input)': '_onInput($event.target.value)',\n                    '(change)': '_onChange()',\n                    '(keydown)': '_onKeydown($event)',\n                    '[attr.id]': '_rangeInput.id',\n                    '[attr.aria-haspopup]': '_rangeInput.rangePicker ? \"dialog\" : null',\n                    '[attr.aria-owns]': '(_rangeInput.rangePicker?.opened && _rangeInput.rangePicker.id) || null',\n                    '[attr.min]': '_getMinDate() ? _dateAdapter.toIso8601(_getMinDate()) : null',\n                    '[attr.max]': '_getMaxDate() ? _dateAdapter.toIso8601(_getMaxDate()) : null',\n                    '(blur)': '_onBlur()',\n                    'type': 'text',\n                },\n                providers: [\n                    { provide: NG_VALUE_ACCESSOR, useExisting: MatStartDate, multi: true },\n                    { provide: NG_VALIDATORS, useExisting: MatStartDate, multi: true }\n                ]\n            },] }\n];\nMatStartDate.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DATE_RANGE_INPUT_PARENT,] }] },\n    { type: ElementRef },\n    { type: ErrorStateMatcher },\n    { type: Injector },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] }\n];\n/** Input for entering the end date in a `mat-date-range-input`. */\nclass MatEndDate extends _MatDateRangeInputBase {\n    constructor(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats) {\n        // TODO(crisbeto): this constructor shouldn't be necessary, but ViewEngine doesn't seem to\n        // handle DI correctly when it is inherited from `MatDateRangeInputPartBase`. We can drop this\n        // constructor once ViewEngine is removed.\n        super(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats);\n        /** Validator that checks that the end date isn't before the start date. */\n        this._endValidator = (control) => {\n            const end = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            const start = this._model ? this._model.selection.start : null;\n            return (!end || !start ||\n                this._dateAdapter.compareDate(end, start) >= 0) ?\n                null : { 'matEndDateInvalid': { 'start': start, 'actual': end } };\n        };\n        this._validator = Validators.compose([...super._getValidators(), this._endValidator]);\n        this._canEmitChangeEvent = (event) => {\n            return event.source !== this._rangeInput._startInput;\n        };\n    }\n    ngOnInit() {\n        // Normally this happens automatically, but it seems to break if not added explicitly when all\n        // of the criteria below are met:\n        // 1) The class extends a TS mixin.\n        // 2) The application is running in ViewEngine.\n        // 3) The application is being transpiled through tsickle.\n        // This can be removed once google3 is completely migrated to Ivy.\n        super.ngOnInit();\n    }\n    ngDoCheck() {\n        // Normally this happens automatically, but it seems to break if not added explicitly when all\n        // of the criteria below are met:\n        // 1) The class extends a TS mixin.\n        // 2) The application is running in ViewEngine.\n        // 3) The application is being transpiled through tsickle.\n        // This can be removed once google3 is completely migrated to Ivy.\n        super.ngDoCheck();\n    }\n    _getValueFromModel(modelValue) {\n        return modelValue.end;\n    }\n    _assignValueToModel(value) {\n        if (this._model) {\n            const range = new DateRange(this._model.selection.start, value);\n            this._model.updateSelection(range, this);\n            this._cvaOnChange(value);\n        }\n    }\n    _onKeydown(event) {\n        // If the user is pressing backspace on an empty end input, move focus back to the start.\n        if (event.keyCode === BACKSPACE && !this._elementRef.nativeElement.value) {\n            this._rangeInput._startInput.focus();\n        }\n        super._onKeydown(event);\n    }\n}\nMatEndDate.decorators = [\n    { type: Directive, args: [{\n                selector: 'input[matEndDate]',\n                host: {\n                    'class': 'mat-end-date mat-date-range-input-inner',\n                    '[disabled]': 'disabled',\n                    '(input)': '_onInput($event.target.value)',\n                    '(change)': '_onChange()',\n                    '(keydown)': '_onKeydown($event)',\n                    '[attr.aria-haspopup]': '_rangeInput.rangePicker ? \"dialog\" : null',\n                    '[attr.aria-owns]': '(_rangeInput.rangePicker?.opened && _rangeInput.rangePicker.id) || null',\n                    '[attr.min]': '_getMinDate() ? _dateAdapter.toIso8601(_getMinDate()) : null',\n                    '[attr.max]': '_getMaxDate() ? _dateAdapter.toIso8601(_getMaxDate()) : null',\n                    '(blur)': '_onBlur()',\n                    'type': 'text',\n                },\n                providers: [\n                    { provide: NG_VALUE_ACCESSOR, useExisting: MatEndDate, multi: true },\n                    { provide: NG_VALIDATORS, useExisting: MatEndDate, multi: true }\n                ]\n            },] }\n];\nMatEndDate.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DATE_RANGE_INPUT_PARENT,] }] },\n    { type: ElementRef },\n    { type: ErrorStateMatcher },\n    { type: Injector },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] }\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"matDateRangePicker\"). We can change this to a\n// directive if angular adds support for `exportAs: '$implicit'` on directives.\n/** Component responsible for managing the date range picker popup/dialog. */\nclass MatDateRangePicker extends MatDatepickerBase {\n    _forwardContentValues(instance) {\n        super._forwardContentValues(instance);\n        const input = this._datepickerInput;\n        if (input) {\n            instance.comparisonStart = input.comparisonStart;\n            instance.comparisonEnd = input.comparisonEnd;\n        }\n    }\n}\nMatDateRangePicker.decorators = [\n    { type: Component, args: [{\n                selector: 'mat-date-range-picker',\n                template: '',\n                exportAs: 'matDateRangePicker',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                providers: [\n                    MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER,\n                    MAT_CALENDAR_RANGE_STRATEGY_PROVIDER,\n                ]\n            },] }\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId = 0;\nclass MatDateRangeInput {\n    constructor(_changeDetectorRef, _elementRef, control, _dateAdapter, _formField) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._dateAdapter = _dateAdapter;\n        this._formField = _formField;\n        /** Unique ID for the input. */\n        this.id = `mat-date-range-input-${nextUniqueId++}`;\n        /** Whether the control is focused. */\n        this.focused = false;\n        /** Name of the form control. */\n        this.controlType = 'mat-date-range-input';\n        this._groupDisabled = false;\n        /** Value for the `aria-describedby` attribute of the inputs. */\n        this._ariaDescribedBy = null;\n        /** Separator text to be shown between the inputs. */\n        this.separator = 'â';\n        /** Start of the comparison range that should be shown in the calendar. */\n        this.comparisonStart = null;\n        /** End of the comparison range that should be shown in the calendar. */\n        this.comparisonEnd = null;\n        /** Emits when the input's state has changed. */\n        this.stateChanges = new Subject();\n        if (!_dateAdapter && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        // TODO(crisbeto): remove `as any` after #18206 lands.\n        this.ngControl = control;\n    }\n    /** Current value of the range input. */\n    get value() {\n        return this._model ? this._model.selection : null;\n    }\n    /** Whether the control's label should float. */\n    get shouldLabelFloat() {\n        return this.focused || !this.empty;\n    }\n    /**\n     * Implemented as a part of `MatFormFieldControl`.\n     * Set the placeholder attribute on `matStartDate` and `matEndDate`.\n     * @docs-private\n     */\n    get placeholder() {\n        var _a, _b;\n        const start = ((_a = this._startInput) === null || _a === void 0 ? void 0 : _a._getPlaceholder()) || '';\n        const end = ((_b = this._endInput) === null || _b === void 0 ? void 0 : _b._getPlaceholder()) || '';\n        return (start || end) ? `${start} ${this.separator} ${end}` : '';\n    }\n    /** The range picker that this input is associated with. */\n    get rangePicker() { return this._rangePicker; }\n    set rangePicker(rangePicker) {\n        if (rangePicker) {\n            this._model = rangePicker._registerInput(this);\n            this._rangePicker = rangePicker;\n            this._registerModel(this._model);\n        }\n    }\n    /** Whether the input is required. */\n    get required() { return !!this._required; }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n    }\n    /** Function that can be used to filter out dates within the date range picker. */\n    get dateFilter() { return this._dateFilter; }\n    set dateFilter(value) {\n        this._dateFilter = value;\n        this._revalidate();\n    }\n    /** The minimum valid date. */\n    get min() { return this._min; }\n    set min(value) {\n        const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        if (!this._dateAdapter.sameDate(validValue, this._min)) {\n            this._min = validValue;\n            this._revalidate();\n        }\n    }\n    /** The maximum valid date. */\n    get max() { return this._max; }\n    set max(value) {\n        const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        if (!this._dateAdapter.sameDate(validValue, this._max)) {\n            this._max = validValue;\n            this._revalidate();\n        }\n    }\n    /** Whether the input is disabled. */\n    get disabled() {\n        return (this._startInput && this._endInput) ?\n            (this._startInput.disabled && this._endInput.disabled) :\n            this._groupDisabled;\n    }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._groupDisabled) {\n            this._groupDisabled = newValue;\n            this.stateChanges.next(undefined);\n        }\n    }\n    /** Whether the input is in an error state. */\n    get errorState() {\n        if (this._startInput && this._endInput) {\n            return this._startInput.errorState || this._endInput.errorState;\n        }\n        return false;\n    }\n    /** Whether the datepicker input is empty. */\n    get empty() {\n        const startEmpty = this._startInput ? this._startInput.isEmpty() : false;\n        const endEmpty = this._endInput ? this._endInput.isEmpty() : false;\n        return startEmpty && endEmpty;\n    }\n    /**\n     * Implemented as a part of `MatFormFieldControl`.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedBy = ids.length ? ids.join(' ') : null;\n    }\n    /**\n     * Implemented as a part of `MatFormFieldControl`.\n     * @docs-private\n     */\n    onContainerClick() {\n        if (!this.focused && !this.disabled) {\n            if (!this._model || !this._model.selection.start) {\n                this._startInput.focus();\n            }\n            else {\n                this._endInput.focus();\n            }\n        }\n    }\n    ngAfterContentInit() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._startInput) {\n                throw Error('mat-date-range-input must contain a matStartDate input');\n            }\n            if (!this._endInput) {\n                throw Error('mat-date-range-input must contain a matEndDate input');\n            }\n        }\n        if (this._model) {\n            this._registerModel(this._model);\n        }\n        // We don't need to unsubscribe from this, because we\n        // know that the input streams will be completed on destroy.\n        merge(this._startInput.stateChanges, this._endInput.stateChanges).subscribe(() => {\n            this.stateChanges.next(undefined);\n        });\n    }\n    ngOnChanges(changes) {\n        if (dateInputsHaveChanged(changes, this._dateAdapter)) {\n            this.stateChanges.next(undefined);\n        }\n    }\n    ngOnDestroy() {\n        this.stateChanges.complete();\n    }\n    /** Gets the date at which the calendar should start. */\n    getStartValue() {\n        return this.value ? this.value.start : null;\n    }\n    /** Gets the input's theme palette. */\n    getThemePalette() {\n        return this._formField ? this._formField.color : undefined;\n    }\n    /** Gets the element to which the calendar overlay should be attached. */\n    getConnectedOverlayOrigin() {\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n    }\n    /** Gets the value that is used to mirror the state input. */\n    _getInputMirrorValue() {\n        return this._startInput ? this._startInput.getMirrorValue() : '';\n    }\n    /** Whether the input placeholders should be hidden. */\n    _shouldHidePlaceholders() {\n        return this._startInput ? !this._startInput.isEmpty() : false;\n    }\n    /** Handles the value in one of the child inputs changing. */\n    _handleChildValueChange() {\n        this.stateChanges.next(undefined);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Opens the date range picker associated with the input. */\n    _openDatepicker() {\n        if (this._rangePicker) {\n            this._rangePicker.open();\n        }\n    }\n    /** Whether the separate text should be hidden. */\n    _shouldHideSeparator() {\n        return (!this._formField || this._formField._hideControlPlaceholder()) && this.empty;\n    }\n    /** Gets the value for the `aria-labelledby` attribute of the inputs. */\n    _getAriaLabelledby() {\n        const formField = this._formField;\n        return formField && formField._hasFloatingLabel() ? formField._labelId : null;\n    }\n    /** Re-runs the validators on the start/end inputs. */\n    _revalidate() {\n        if (this._startInput) {\n            this._startInput._validatorOnChange();\n        }\n        if (this._endInput) {\n            this._endInput._validatorOnChange();\n        }\n    }\n    /** Registers the current date selection model with the start/end inputs. */\n    _registerModel(model) {\n        if (this._startInput) {\n            this._startInput._registerModel(model);\n        }\n        if (this._endInput) {\n            this._endInput._registerModel(model);\n        }\n    }\n}\nMatDateRangeInput.decorators = [\n    { type: Component, args: [{\n                selector: 'mat-date-range-input',\n                template: \"<div\\n  class=\\\"mat-date-range-input-container\\\"\\n  cdkMonitorSubtreeFocus\\n  (cdkFocusChange)=\\\"focused = $event !== null\\\">\\n  <div class=\\\"mat-date-range-input-start-wrapper\\\">\\n    <ng-content select=\\\"input[matStartDate]\\\"></ng-content>\\n    <span\\n      class=\\\"mat-date-range-input-mirror\\\"\\n      aria-hidden=\\\"true\\\">{{_getInputMirrorValue()}}</span>\\n  </div>\\n\\n  <span\\n    class=\\\"mat-date-range-input-separator\\\"\\n    [class.mat-date-range-input-separator-hidden]=\\\"_shouldHideSeparator()\\\">{{separator}}</span>\\n\\n  <div class=\\\"mat-date-range-input-end-wrapper\\\">\\n    <ng-content select=\\\"input[matEndDate]\\\"></ng-content>\\n  </div>\\n</div>\\n\\n\",\n                exportAs: 'matDateRangeInput',\n                host: {\n                    'class': 'mat-date-range-input',\n                    '[class.mat-date-range-input-hide-placeholders]': '_shouldHidePlaceholders()',\n                    '[class.mat-date-range-input-required]': 'required',\n                    '[attr.id]': 'null',\n                    'role': 'group',\n                    '[attr.aria-labelledby]': '_getAriaLabelledby()',\n                    '[attr.aria-describedby]': '_ariaDescribedBy',\n                    // Used by the test harness to tie this input to its calendar. We can't depend on\n                    // `aria-owns` for this, because it's only defined while the calendar is open.\n                    '[attr.data-mat-calendar]': 'rangePicker ? rangePicker.id : null',\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                providers: [\n                    { provide: MatFormFieldControl, useExisting: MatDateRangeInput },\n                    { provide: MAT_DATE_RANGE_INPUT_PARENT, useExisting: MatDateRangeInput },\n                ],\n                styles: [\".mat-date-range-input{display:block;width:100%}.mat-date-range-input-container{display:flex;align-items:center}.mat-date-range-input-separator{transition:opacity 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1);margin:0 4px}.mat-date-range-input-separator-hidden{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;opacity:0;transition:none}.mat-date-range-input-inner{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;vertical-align:bottom;text-align:inherit;-webkit-appearance:none;width:100%}.mat-date-range-input-inner::-ms-clear,.mat-date-range-input-inner::-ms-reveal{display:none}.mat-date-range-input-inner:-moz-ui-invalid{box-shadow:none}.mat-date-range-input-inner::placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner::-moz-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner::-webkit-input-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner:-ms-input-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-hide-placeholder .mat-date-range-input-inner::placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-date-range-input-inner::-moz-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-date-range-input-inner::-webkit-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-date-range-input-inner:-ms-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-date-range-input-mirror{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;visibility:hidden;white-space:nowrap;display:inline-block;min-width:2px}.mat-date-range-input-start-wrapper{position:relative;overflow:hidden;max-width:calc(50% - 4px)}.mat-date-range-input-start-wrapper .mat-date-range-input-inner{position:absolute;top:0;left:0}.mat-date-range-input-end-wrapper{flex-grow:1;max-width:calc(50% - 4px)}.mat-form-field-type-mat-date-range-input .mat-form-field-infix{width:200px}\\n\"]\n            },] }\n];\nMatDateRangeInput.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: ControlContainer, decorators: [{ type: Optional }, { type: Self }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }] }\n];\nMatDateRangeInput.propDecorators = {\n    rangePicker: [{ type: Input }],\n    required: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    min: [{ type: Input }],\n    max: [{ type: Input }],\n    disabled: [{ type: Input }],\n    separator: [{ type: Input }],\n    comparisonStart: [{ type: Input }],\n    comparisonEnd: [{ type: Input }],\n    _startInput: [{ type: ContentChild, args: [MatStartDate,] }],\n    _endInput: [{ type: ContentChild, args: [MatEndDate,] }]\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatDatepickerModule {\n}\nMatDatepickerModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    CommonModule,\n                    MatButtonModule,\n                    MatDialogModule,\n                    OverlayModule,\n                    A11yModule,\n                    PortalModule,\n                ],\n                exports: [\n                    CdkScrollableModule,\n                    MatCalendar,\n                    MatCalendarBody,\n                    MatDatepicker,\n                    MatDatepickerContent,\n                    MatDatepickerInput,\n                    MatDatepickerToggle,\n                    MatDatepickerToggleIcon,\n                    MatMonthView,\n                    MatYearView,\n                    MatMultiYearView,\n                    MatCalendarHeader,\n                    MatDateRangeInput,\n                    MatStartDate,\n                    MatEndDate,\n                    MatDateRangePicker,\n                ],\n                declarations: [\n                    MatCalendar,\n                    MatCalendarBody,\n                    MatDatepicker,\n                    MatDatepickerContent,\n                    MatDatepickerInput,\n                    MatDatepickerToggle,\n                    MatDatepickerToggleIcon,\n                    MatMonthView,\n                    MatYearView,\n                    MatMultiYearView,\n                    MatCalendarHeader,\n                    MatDateRangeInput,\n                    MatStartDate,\n                    MatEndDate,\n                    MatDateRangePicker,\n                ],\n                providers: [\n                    MatDatepickerIntl,\n                    MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER\n                ],\n                entryComponents: [\n                    MatDatepickerContent,\n                    MatCalendarHeader,\n                ]\n            },] }\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DateRange, DefaultMatCalendarRangeStrategy, MAT_DATEPICKER_SCROLL_STRATEGY, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER, MAT_DATEPICKER_VALIDATORS, MAT_DATEPICKER_VALUE_ACCESSOR, MAT_DATE_RANGE_SELECTION_STRATEGY, MAT_RANGE_DATE_SELECTION_MODEL_FACTORY, MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER, MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY, MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER, MatCalendar, MatCalendarBody, MatCalendarCell, MatCalendarHeader, MatDateRangeInput, MatDateRangePicker, MatDateSelectionModel, MatDatepicker, MatDatepickerContent, MatDatepickerInput, MatDatepickerInputEvent, MatDatepickerIntl, MatDatepickerModule, MatDatepickerToggle, MatDatepickerToggleIcon, MatEndDate, MatMonthView, MatMultiYearView, MatRangeDateSelectionModel, MatSingleDateSelectionModel, MatStartDate, MatYearView, matDatepickerAnimations, yearsPerPage, yearsPerRow, MAT_CALENDAR_RANGE_STRATEGY_PROVIDER_FACTORY as Éµangular_material_src_material_datepicker_datepicker_a, MAT_CALENDAR_RANGE_STRATEGY_PROVIDER as Éµangular_material_src_material_datepicker_datepicker_b, MatDatepickerBase as Éµangular_material_src_material_datepicker_datepicker_c, MatDatepickerInputBase as Éµangular_material_src_material_datepicker_datepicker_d, MAT_DATE_RANGE_INPUT_PARENT as Éµangular_material_src_material_datepicker_datepicker_e };\n//# sourceMappingURL=datepicker.js.map\n","<div class=\"card\">\r\n  <div class=\"card-body\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12 text-right\">\r\n        <div class=\"d-flex w-100\">\r\n            <div class=\"ml-auto\">            \r\n                <mat-form-field class=\"example-form-field ml-auto\">\r\n                    <mat-label>Enter a date range</mat-label>\r\n                    <mat-date-range-input [rangePicker]=\"rangePicker\">\r\n                      <input matStartDate placeholder=\"Start date\">\r\n                      <input matEndDate placeholder=\"End date\">\r\n                    </mat-date-range-input>\r\n                    <mat-datepicker-toggle matSuffix [for]=\"rangePicker\"></mat-datepicker-toggle>\r\n                    <mat-date-range-picker #rangePicker>\r\n                      \r\n                    </mat-date-range-picker>\r\n                  </mat-form-field>\r\n        </div>\r\n       \r\n          <div class=\"d-block text-right ml-2 mr-2\">\r\n            <div ngbDropdown class=\"d-inline-block\">\r\n              <button class=\"btn btn-outline-primary\" id=\"dropdownBasic1\" ngbDropdownToggle>\r\n                Filter by order status\r\n              </button>\r\n              <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\r\n                <button class=\"dropdown-item\">All</button>\r\n                <button class=\"dropdown-item\" ngbDropdownItem>Day </button>\r\n                <button class=\"dropdown-item\" ngbDropdownItem>Week </button>\r\n                <button class=\"dropdown-item\" ngbDropdownItem>Month</button>\r\n                <button class=\"dropdown-item\" ngbDropdownItem>Year</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"\">\r\n            <button class=\"btn btn-primary \">Export CSV</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-lg-6\">\r\n        <!-- <div class=\"card\"> -->\r\n        <div class=\"card-body\">\r\n          <!-- <h4 class=\"card-title\">Bar Sales Chart</h4>\r\n                        <h6 class=\"card-subtitle\">This is the simple example of bar chart</h6> -->\r\n          <canvas baseChart [datasets]=\"barChartData\" [labels]=\"barChartLabels\" [options]=\"barChartOptions\"\r\n            [legend]=\"barChartLegend\" [chartType]=\"barChartType\" (chartHover)=\"chartHovered($event)\"\r\n            [colors]=\"barChartColors\" (chartClick)=\"chartClicked($event)\">\r\n          </canvas>\r\n        </div>\r\n        <!-- <div class=\"card-footer\">\r\n                        <button class=\"btn btn-info btn-sm\" (click)=\"randomize()\">Update</button>\r\n                    </div> -->\r\n        <!-- </div> -->\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-analytics',\r\n  templateUrl: './analytics.component.html',\r\n  styleUrls: ['./analytics.component.css']\r\n})\r\nexport class AnalyticsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n // This is line chart\r\n  // bar chart\r\n  public barChartOptions: any = {\r\n    scaleShowVerticalLines: false,\r\n    responsive: true,\r\n    barThickness: 10\r\n  };\r\n\r\n  public barChartLabels: string[] = [\r\n    '2011',\r\n    '2012',\r\n    '2013',\r\n    '2014',\r\n    '2015',\r\n    '2016',\r\n    '2017'\r\n  ];\r\n  public barChartType = 'bar';\r\n  public barChartLegend = true;\r\n\r\n  public barChartData: any[] = [\r\n    { data: [65, 59, 80, 81, 56, 55, 40], label: 'Report' },\r\n    // { data: [28, 48, 40, 19, 86, 27, 90], label: 'To' }\r\n  ];\r\n  public barChartColors: Array<any> = [\r\n    { backgroundColor: '#36bea6' },\r\n    { backgroundColor: '#2962FF' }\r\n  ];\r\n  public lineChartLegend = true;\r\n  public lineChartType = 'line';\r\n\r\n  // events\r\n  public chartClicked(e: any): void {\r\n    // console.log(e);\r\n  }\r\n\r\n  public chartHovered(e: any): void {\r\n    // console.log(e);\r\n  }\r\n  public randomize(): void {\r\n    // Only Change 3 values\r\n    const data = [\r\n      Math.round(Math.random() * 100),\r\n      59,\r\n      80,\r\n      Math.random() * 100,\r\n      56,\r\n      Math.random() * 100,\r\n      40\r\n    ];\r\n    const clone = JSON.parse(JSON.stringify(this.barChartData));\r\n    clone[0].data = data;\r\n    this.barChartData = clone;\r\n    /**\r\n     * (My guess), for Angular to recognize the change in the dataset\r\n     * it has to change the dataset variable directly,\r\n     * so one way around it, is to clone the data, change it and then\r\n     * assign it;\r\n     */\r\n  }\r\n}\r\n","<div class=\"card\">\r\n  <div class=\"card-body\">\r\n    <ul class=\"pl-0 volume_element\">\r\n      <li class=\"col-md-4\">\r\n        <div class=\"volume_element_group\">\r\n          <div class=\"custom-control custom-checkbox\"><input class=\"custom-control-input\" id=\"customCheck2\"\r\n              type=\"checkbox\"><label class=\"custom-control-label\" for=\"customCheck2\">Save the Date</label>\r\n          </div>\r\n        </div>\r\n      </li>\r\n      <li class=\"col-md-4\">\r\n        <div class=\"volume_element_group\">\r\n          <div class=\"custom-control custom-checkbox\"><input class=\"custom-control-input\" id=\"customCheck3\"\r\n              type=\"checkbox\"><label class=\"custom-control-label\" for=\"customCheck3\">The Health Check</label>\r\n          </div>\r\n        </div>\r\n      </li>\r\n      <li class=\"col-md-4\">\r\n        <div class=\"volume_element_group\">\r\n          <div class=\"custom-control custom-checkbox\"><input class=\"custom-control-input\" id=\"customCheck4\"\r\n              type=\"checkbox\"><label class=\"custom-control-label\" for=\"customCheck4\">The peak</label>\r\n          </div>\r\n        </div>\r\n      </li>\r\n      <li class=\"col-md-4\">\r\n        <div class=\"volume_element_group\">\r\n          <div class=\"custom-control custom-checkbox\"><input class=\"custom-control-input\" id=\"customCheck5\"\r\n              type=\"checkbox\"><label class=\"custom-control-label\" for=\"customCheck5\">My Pit</label>\r\n          </div>\r\n        </div>\r\n      </li>\r\n      <li class=\"col-md-4\">\r\n        <div class=\"volume_element_group\">\r\n          <div class=\"custom-control custom-checkbox\"><input class=\"custom-control-input\" id=\"customCheck6\"\r\n              type=\"checkbox\"><label class=\"custom-control-label\" for=\"customCheck6\">The Snapshot</label>\r\n          </div>\r\n        </div>\r\n      </li>\r\n      <li class=\"col-md-4\">\r\n        <div class=\"volume_element_group\">\r\n          <div class=\"custom-control custom-checkbox\"><input class=\"custom-control-input\" id=\"customCheck7\"\r\n              type=\"checkbox\"><label class=\"custom-control-label\" for=\"customCheck7\"> My Jam</label>\r\n          </div>\r\n        </div>\r\n      </li>\r\n      <li class=\"col-md-4\">\r\n        <div class=\"volume_element_group\">\r\n          <div class=\"custom-control custom-checkbox\"><input class=\"custom-control-input\" id=\"customCheck8\"\r\n              type=\"checkbox\"><label class=\"custom-control-label\" for=\"customCheck8\">The Recommendation</label>\r\n          </div>\r\n        </div>\r\n      </li>\r\n      <li class=\"col-md-4\">\r\n        <div class=\"volume_element_group\">\r\n          <div class=\"custom-control custom-checkbox\"><input class=\"custom-control-input\" id=\"customCheck9\"\r\n              type=\"checkbox\"><label class=\"custom-control-label\" for=\"customCheck9\">The Lesson</label>\r\n          </div>\r\n        </div>\r\n      </li>\r\n      <li class=\"col-md-4\">\r\n        <div class=\"volume_element_group\">\r\n          <div class=\"custom-control custom-checkbox\"><input class=\"custom-control-input\" id=\"customCheck9a\"\r\n              type=\"checkbox\"><label class=\"custom-control-label\" for=\"customCheck9a\">The forecast</label>\r\n          </div>\r\n        </div>\r\n      </li>\r\n      <li class=\"col-md-4\">\r\n        <div class=\"volume_element_group\">\r\n          <div class=\"custom-control custom-checkbox\"><input class=\"custom-control-input\" id=\"customCheck10\"\r\n              type=\"checkbox\"><label class=\"custom-control-label\" for=\"customCheck10\">Free Space</label>\r\n          </div>\r\n        </div>\r\n      </li>\r\n      <li class=\"col-md-4\">\r\n        <div class=\"volume_element_group\">\r\n          <div class=\"custom-control custom-checkbox\"><input class=\"custom-control-input\" id=\"customCheck11\"\r\n              type=\"checkbox\"><label class=\"custom-control-label\" for=\"customCheck11\">Free Space</label>\r\n          </div>\r\n        </div>\r\n      </li>\r\n      <!-- <li class=\"col-md-4\">\r\n        <div class=\"custom-control custom-checkbox\"><input class=\"custom-control-input\" id=\"customCheck12\"\r\n            type=\"checkbox\"><label class=\"custom-control-label\" for=\"customCheck12\">Free Space</label>\r\n        </div>\r\n      </li> -->\r\n    </ul>\r\n    <div class=\"pl-2 pb-3\">\r\n      <button class=\"btn btn-primary\">Save</button>\r\n    </div>\r\n    <h3 class=\"pl-2\">Cadence</h3>\r\n    <ul class=\"pl-0 volume_element\">\r\n        <li class=\"col-md-4\">\r\n            <div class=\"volume_element_group\">\r\n              <div class=\"custom-control custom-checkbox\"><input class=\"custom-control-input\" id=\"cadence1\"\r\n                  type=\"checkbox\"><label class=\"custom-control-label\" for=\"cadence1\">07 Days Weekly</label>\r\n              </div>\r\n            </div>\r\n          </li>\r\n          <li class=\"col-md-4\">\r\n            <div class=\"volume_element_group\">\r\n              <div class=\"custom-control custom-checkbox\"><input class=\"custom-control-input\" id=\"cadence2\"\r\n                  type=\"checkbox\"><label class=\"custom-control-label\" for=\"cadence2\">14 Days Bi-Weekly</label>\r\n              </div>\r\n            </div>\r\n          </li>\r\n          <li class=\"col-md-4\">\r\n            <div class=\"volume_element_group\">\r\n              <div class=\"custom-control custom-checkbox\"><input class=\"custom-control-input\" id=\"cadence3\"\r\n                  type=\"checkbox\"><label class=\"custom-control-label\" for=\"cadence3\">30 Days Monthly</label>\r\n              </div>\r\n            </div>\r\n          </li>\r\n          <li class=\"col-md-4\">\r\n            <div class=\"volume_element_group\">\r\n              <div class=\"custom-control custom-checkbox\"><input class=\"custom-control-input\" id=\"cadence4\"\r\n                  type=\"checkbox\"><label class=\"custom-control-label\" for=\"cadence4\">90 Days Quarterly </label>\r\n              </div>\r\n            </div>\r\n          </li>\r\n    </ul>\r\n    <div class=\" pl-2\">\r\n      <button class=\"btn btn-primary\">Save</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-group-volume-form',\r\n  templateUrl: './group-volume-form.component.html',\r\n  styleUrls: ['./group-volume-form.component.scss']\r\n})\r\nexport class GroupVolumeFormComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {OthersComponent} from './others.component';\r\nimport {AnalyticsComponent} from './analytics/analytics.component';\r\nimport { GroupVolumeFormComponent } from './group-volume-form/group-volume-form.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component:OthersComponent,\r\n    children:[\r\n      {\r\n        path: 'analytics',\r\n        component:AnalyticsComponent,\r\n        data: {\r\n          title:\"Analytics\"\r\n        }\r\n      },\r\n      {\r\n        path: 'groupform',\r\n        component:GroupVolumeFormComponent,\r\n        data: {\r\n          title:\"Group Volume Form\"\r\n        }\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class OthersRoutingModule { }\r\n","<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-others',\r\n  templateUrl: './others.component.html',\r\n  styleUrls: ['./others.component.css']\r\n})\r\nexport class OthersComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport { OthersRoutingModule } from './others-routing.module';\r\nimport { OthersComponent } from './others.component';\r\nimport { AnalyticsComponent } from './analytics/analytics.component';\r\nimport { ChartsModule } from 'ng2-charts';\r\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { GroupVolumeFormComponent } from './group-volume-form/group-volume-form.component';\r\n\r\n@NgModule({\r\n  declarations: [OthersComponent, AnalyticsComponent, GroupVolumeFormComponent],\r\n  imports: [\r\n    CommonModule,\r\n    OthersRoutingModule,\r\n    ChartsModule,\r\n    NgxChartsModule,\r\n    NgbModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatFormFieldModule\r\n  ]\r\n})\r\nexport class OthersModule { }\r\n"]}
{"version":3,"sources":["webpack:///node_modules/@angular/material/fesm2015/tabs.js"],"names":["_MAT_INK_BAR_POSITIONER","providedIn","factory","_MAT_INK_BAR_POSITIONER_FACTORY","method","element","left","offsetLeft","width","offsetWidth","MatInkBar","_elementRef","_ngZone","_inkBarPositioner","_animationMode","show","requestAnimationFrame","runOutsideAngular","_setStyles","nativeElement","style","visibility","positions","inkBar","decorators","type","args","selector","host","ctorParameters","undefined","String","MAT_TAB_CONTENT","MatTabContent","template","providers","provide","useExisting","MAT_TAB_LABEL","MatTabLabel","MatTabBase","_MatTabMixinBase","MAT_TAB_GROUP","MatTab","_viewContainerRef","_closestTabGroup","textLabel","_contentPortal","_stateChanges","position","origin","isActive","changes","hasOwnProperty","next","complete","_explicitContent","_implicitContent","value","_templateLabel","_setTemplateLabelInput","inputs","changeDetection","Default","encapsulation","None","exportAs","propDecorators","templateLabel","read","ariaLabel","ariaLabelledby","matTabsAnimations","translateTab","transform","minHeight","MatTabBodyPortal","componentFactoryResolver","viewContainerRef","_host","_document","_centeringSub","EMPTY","_leavingSub","_beforeCentering","pipe","_isCenterPosition","_position","subscribe","isCentering","hasAttached","attach","_content","_afterLeavingCenter","detach","unsubscribe","MatTabBody","_MatTabBodyBase","_dir","changeDetectorRef","_dirChangeSubscription","_translateTabComplete","_onCentering","_onCentered","animationDuration","change","dir","_computePositionAnimationState","markForCheck","x","y","fromState","toState","event","emit","_computePositionFromOrigin","clientHeight","_getLayoutDirection","_positionIndex","elementRef","animations","styles","_portalHost","MAT_TABS_CONFIG","nextId","MatTabChangeEvent","MatTabGroupMixinBase","_MatTabGroupMixinBase","_MatTabGroupBase","_changeDetectorRef","defaultConfig","_tabs","_indexToSelect","_tabBodyWrapperHeight","_tabsSubscription","_tabLabelSubscription","_dynamicHeight","_selectedIndex","headerPosition","selectedIndexChange","focusChange","animationDone","selectedTabChange","_groupId","disablePagination","indexToSelect","_clampTabIndex","isFirstRun","_createChangeEvent","Promise","resolve","then","forEach","tab","index","_subscribeToAllTabChanges","_subscribeToTabLabels","tabs","toArray","i","length","_allTabs","reset","filter","notifyOnChanges","destroy","_tabHeader","_alignInkBarToSelectedTab","map","Math","min","max","tabHeight","wrapper","_tabBodyWrapper","height","offsetHeight","tabHeader","disabled","selectedIndex","focusIndex","idx","_animationDuration","test","_backgroundColor","classList","remove","backgroundColor","add","dynamicHeight","MatTabGroup","animationMode","descendants","MatTabLabelWrapperBase","_MatTabLabelWrapperMixinBase","MatTabLabelWrapper","focus","passiveEventListenerOptions","passive","EXAGGERATED_OVERSCROLL","HEADER_SCROLL_DELAY","HEADER_SCROLL_INTERVAL","MatPaginatedTabHeader","_viewportRuler","_platform","_scrollDistance","_selectedIndexChanged","_destroyed","_showPaginationControls","_disableScrollAfter","_disableScrollBefore","_stopScrolling","selectFocusedIndex","indexFocused","_stopInterval","_previousPaginator","_handlePaginatorPress","_nextPaginator","dirChange","resize","realign","updatePagination","_keyManager","_items","withHorizontalOrientation","withHomeAndEnd","withWrap","updateActiveItem","newFocusIndex","_setTabFocus","_tabLabelCount","_scrollToLabel","_checkScrollingControls","_scrollDistanceChanged","_updateTabScrollPosition","keyCode","_itemSelected","onKeydown","textContent","_currentTextContent","run","_checkPaginationEnabled","tabIndex","containerEl","_tabListContainer","scrollLeft","scrollWidth","scrollDistance","platform","translateX","_tabList","round","TRIDENT","EDGE","direction","viewLength","scrollAmount","_scrollTo","_scrollHeader","labelIndex","selectedLabel","labelBeforePos","labelAfterPos","beforeVisiblePos","afterVisiblePos","isEnabled","_getMaxScrollDistance","lengthOfTabList","selectedItem","selectedLabelWrapper","_inkBar","alignToElement","hide","mouseEvent","button","maxScrollDistance","distance","activeItemIndex","_isValidIndex","setActiveItem","_MatTabHeaderBase","viewportRuler","ngZone","_disableRipple","preventDefault","disableRipple","MatTabHeader","outputs","_MatTabNavBase","color","updateActiveLink","_element","items","active","MatTabNav","MatTabLink","MatTabLinkMixinBase","_MatTabLinkMixinBase","_MatTabLinkBase","_tabNavBar","globalRippleOptions","_focusMonitor","_isActive","rippleConfig","parseInt","animation","enterDuration","exitDuration","monitor","stopMonitoring","newValue","tabNavBar","focusMonitor","_tabLinkRipple","setupTriggerEvents","_removeTriggerEvents","MatTabsModule","imports","exports","declarations"],"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","file":"default~pages-cms-cms-module-ngfactory~pages-device-device-module-ngfactory~pages-users-users-module~7a95d4f1-es5.js","sourcesContent":["import { FocusKeyManager, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet, PortalHostDirective, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, ElementRef, NgZone, Inject, Optional, TemplateRef, Component, ChangeDetectionStrategy, ViewEncapsulation, ViewContainerRef, ContentChild, ViewChild, Input, ComponentFactoryResolver, forwardRef, EventEmitter, ChangeDetectorRef, Output, QueryList, ContentChildren, Attribute, NgModule } from '@angular/core';\nimport { mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, MAT_RIPPLE_GLOBAL_OPTIONS, RippleRenderer, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, Subscription, merge, fromEvent, of, timer } from 'rxjs';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { startWith, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { normalizePassiveListenerOptions, Platform } from '@angular/cdk/platform';\nimport { hasModifierKey, SPACE, ENTER } from '@angular/cdk/keycodes';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token for the MatInkBar's Positioner. */\nconst _MAT_INK_BAR_POSITIONER = new InjectionToken('MatInkBarPositioner', {\n    providedIn: 'root',\n    factory: _MAT_INK_BAR_POSITIONER_FACTORY\n});\n/**\n * The default positioner function for the MatInkBar.\n * @docs-private\n */\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n    const method = (element) => ({\n        left: element ? (element.offsetLeft || 0) + 'px' : '0',\n        width: element ? (element.offsetWidth || 0) + 'px' : '0',\n    });\n    return method;\n}\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * @docs-private\n */\nclass MatInkBar {\n    constructor(_elementRef, _ngZone, _inkBarPositioner, _animationMode) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._inkBarPositioner = _inkBarPositioner;\n        this._animationMode = _animationMode;\n    }\n    /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * Shows the ink bar if previously set as hidden.\n     * @param element\n     */\n    alignToElement(element) {\n        this.show();\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular(() => {\n                requestAnimationFrame(() => this._setStyles(element));\n            });\n        }\n        else {\n            this._setStyles(element);\n        }\n    }\n    /** Shows the ink bar. */\n    show() {\n        this._elementRef.nativeElement.style.visibility = 'visible';\n    }\n    /** Hides the ink bar. */\n    hide() {\n        this._elementRef.nativeElement.style.visibility = 'hidden';\n    }\n    /**\n     * Sets the proper styles to the ink bar element.\n     * @param element\n     */\n    _setStyles(element) {\n        const positions = this._inkBarPositioner(element);\n        const inkBar = this._elementRef.nativeElement;\n        inkBar.style.left = positions.left;\n        inkBar.style.width = positions.width;\n    }\n}\nMatInkBar.decorators = [\n    { type: Directive, args: [{\n                selector: 'mat-ink-bar',\n                host: {\n                    'class': 'mat-ink-bar',\n                    '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`,\n                },\n            },] }\n];\nMatInkBar.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [_MAT_INK_BAR_POSITIONER,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatTabContent`. It serves as\n * alternative token to the actual `MatTabContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_TAB_CONTENT = new InjectionToken('MatTabContent');\n/** Decorates the `ng-template` tags and reads out the template from it. */\nclass MatTabContent {\n    constructor(\n    /** Content for the tab. */ template) {\n        this.template = template;\n    }\n}\nMatTabContent.decorators = [\n    { type: Directive, args: [{\n                selector: '[matTabContent]',\n                providers: [{ provide: MAT_TAB_CONTENT, useExisting: MatTabContent }],\n            },] }\n];\nMatTabContent.ctorParameters = () => [\n    { type: TemplateRef }\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatTabLabel`. It serves as\n * alternative token to the actual `MatTabLabel` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_TAB_LABEL = new InjectionToken('MatTabLabel');\n/** Used to flag tab labels for use with the portal directive */\nclass MatTabLabel extends CdkPortal {\n}\nMatTabLabel.decorators = [\n    { type: Directive, args: [{\n                selector: '[mat-tab-label], [matTabLabel]',\n                providers: [{ provide: MAT_TAB_LABEL, useExisting: MatTabLabel }],\n            },] }\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTab.\n/** @docs-private */\nclass MatTabBase {\n}\nconst _MatTabMixinBase = mixinDisabled(MatTabBase);\n/**\n * Used to provide a tab group to a tab without causing a circular dependency.\n * @docs-private\n */\nconst MAT_TAB_GROUP = new InjectionToken('MAT_TAB_GROUP');\nclass MatTab extends _MatTabMixinBase {\n    constructor(_viewContainerRef, \n    /**\n     * @deprecated `_closestTabGroup` parameter to become required.\n     * @breaking-change 10.0.0\n     */\n    _closestTabGroup) {\n        super();\n        this._viewContainerRef = _viewContainerRef;\n        this._closestTabGroup = _closestTabGroup;\n        /** Plain text label for the tab, used when there is no template label. */\n        this.textLabel = '';\n        /** Portal that will be the hosted content of the tab */\n        this._contentPortal = null;\n        /** Emits whenever the internal state of the tab changes. */\n        this._stateChanges = new Subject();\n        /**\n         * The relatively indexed position where 0 represents the center, negative is left, and positive\n         * represents the right.\n         */\n        this.position = null;\n        /**\n         * The initial relatively index origin of the tab if it was created and selected after there\n         * was already a selected tab. Provides context of what position the tab should originate from.\n         */\n        this.origin = null;\n        /**\n         * Whether the tab is currently active.\n         */\n        this.isActive = false;\n    }\n    /** Content for the tab label given by `<ng-template mat-tab-label>`. */\n    get templateLabel() { return this._templateLabel; }\n    set templateLabel(value) { this._setTemplateLabelInput(value); }\n    /** @docs-private */\n    get content() {\n        return this._contentPortal;\n    }\n    ngOnChanges(changes) {\n        if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n            this._stateChanges.next();\n        }\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    ngOnInit() {\n        this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setTemplateLabelInput(value) {\n        // Only update the templateLabel via query if there is actually\n        // a MatTabLabel found. This works around an issue where a user may have\n        // manually set `templateLabel` during creation mode, which would then get clobbered\n        // by `undefined` when this query resolves.\n        if (value) {\n            this._templateLabel = value;\n        }\n    }\n}\nMatTab.decorators = [\n    { type: Component, args: [{\n                selector: 'mat-tab',\n                template: \"<!-- Create a template for the content of the <mat-tab> so that we can grab a reference to this\\n    TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\\n    tab-group. -->\\n<ng-template><ng-content></ng-content></ng-template>\\n\",\n                inputs: ['disabled'],\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matTab'\n            },] }\n];\nMatTab.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_TAB_GROUP,] }] }\n];\nMatTab.propDecorators = {\n    templateLabel: [{ type: ContentChild, args: [MAT_TAB_LABEL,] }],\n    _explicitContent: [{ type: ContentChild, args: [MAT_TAB_CONTENT, { read: TemplateRef, static: true },] }],\n    _implicitContent: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    textLabel: [{ type: Input, args: ['label',] }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }]\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material tabs.\n * @docs-private\n */\nconst matTabsAnimations = {\n    /** Animation translates a tab along the X axis. */\n    translateTab: trigger('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state('center, void, left-origin-center, right-origin-center', style({ transform: 'none' })),\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state('left', style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })),\n        state('right', style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })),\n        transition('* => left, * => right, left => center, right => center', animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ])\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\nclass MatTabBodyPortal extends CdkPortalOutlet {\n    constructor(componentFactoryResolver, viewContainerRef, _host, \n    /**\n     * @deprecated `_document` parameter to be made required.\n     * @breaking-change 9.0.0\n     */\n    _document) {\n        super(componentFactoryResolver, viewContainerRef, _document);\n        this._host = _host;\n        /** Subscription to events for when the tab body begins centering. */\n        this._centeringSub = Subscription.EMPTY;\n        /** Subscription to events for when the tab body finishes leaving from center position. */\n        this._leavingSub = Subscription.EMPTY;\n    }\n    /** Set initial visibility or set up subscription for changing visibility. */\n    ngOnInit() {\n        super.ngOnInit();\n        this._centeringSub = this._host._beforeCentering\n            .pipe(startWith(this._host._isCenterPosition(this._host._position)))\n            .subscribe((isCentering) => {\n            if (isCentering && !this.hasAttached()) {\n                this.attach(this._host._content);\n            }\n        });\n        this._leavingSub = this._host._afterLeavingCenter.subscribe(() => {\n            this.detach();\n        });\n    }\n    /** Clean up centering subscription. */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._centeringSub.unsubscribe();\n        this._leavingSub.unsubscribe();\n    }\n}\nMatTabBodyPortal.decorators = [\n    { type: Directive, args: [{\n                selector: '[matTabBodyHost]'\n            },] }\n];\nMatTabBodyPortal.ctorParameters = () => [\n    { type: ComponentFactoryResolver },\n    { type: ViewContainerRef },\n    { type: MatTabBody, decorators: [{ type: Inject, args: [forwardRef(() => MatTabBody),] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/**\n * Base class with all of the `MatTabBody` functionality.\n * @docs-private\n */\nclass _MatTabBodyBase {\n    constructor(_elementRef, _dir, changeDetectorRef) {\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        /** Subscription to the directionality change observable. */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /** Emits when an animation on the tab is complete. */\n        this._translateTabComplete = new Subject();\n        /** Event emitted when the tab begins to animate towards the center as the active tab. */\n        this._onCentering = new EventEmitter();\n        /** Event emitted before the centering of the tab begins. */\n        this._beforeCentering = new EventEmitter();\n        /** Event emitted before the centering of the tab begins. */\n        this._afterLeavingCenter = new EventEmitter();\n        /** Event emitted when the tab completes its animation towards the center. */\n        this._onCentered = new EventEmitter(true);\n        // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n        // anyway to prevent the animations module from throwing an error if the body is used on its own.\n        /** Duration for the tab's animation. */\n        this.animationDuration = '500ms';\n        if (_dir) {\n            this._dirChangeSubscription = _dir.change.subscribe((dir) => {\n                this._computePositionAnimationState(dir);\n                changeDetectorRef.markForCheck();\n            });\n        }\n        // Ensure that we get unique animation events, because the `.done` callback can get\n        // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n        this._translateTabComplete.pipe(distinctUntilChanged((x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        })).subscribe(event => {\n            // If the transition to the center is complete, emit an event.\n            if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\n                this._onCentered.emit();\n            }\n            if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\n                this._afterLeavingCenter.emit();\n            }\n        });\n    }\n    /** The shifted index position of the tab body, where zero represents the active center tab. */\n    set position(position) {\n        this._positionIndex = position;\n        this._computePositionAnimationState();\n    }\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     */\n    ngOnInit() {\n        if (this._position == 'center' && this.origin != null) {\n            this._position = this._computePositionFromOrigin(this.origin);\n        }\n    }\n    ngOnDestroy() {\n        this._dirChangeSubscription.unsubscribe();\n        this._translateTabComplete.complete();\n    }\n    _onTranslateTabStarted(event) {\n        const isCentering = this._isCenterPosition(event.toState);\n        this._beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n        }\n    }\n    /** The text direction of the containing app. */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Whether the provided position state is considered center, regardless of origin. */\n    _isCenterPosition(position) {\n        return position == 'center' ||\n            position == 'left-origin-center' ||\n            position == 'right-origin-center';\n    }\n    /** Computes the position state that will be used for the tab-body animation trigger. */\n    _computePositionAnimationState(dir = this._getLayoutDirection()) {\n        if (this._positionIndex < 0) {\n            this._position = dir == 'ltr' ? 'left' : 'right';\n        }\n        else if (this._positionIndex > 0) {\n            this._position = dir == 'ltr' ? 'right' : 'left';\n        }\n        else {\n            this._position = 'center';\n        }\n    }\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     */\n    _computePositionFromOrigin(origin) {\n        const dir = this._getLayoutDirection();\n        if ((dir == 'ltr' && origin <= 0) || (dir == 'rtl' && origin > 0)) {\n            return 'left-origin-center';\n        }\n        return 'right-origin-center';\n    }\n}\n_MatTabBodyBase.decorators = [\n    { type: Directive }\n];\n_MatTabBodyBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef }\n];\n_MatTabBodyBase.propDecorators = {\n    _onCentering: [{ type: Output }],\n    _beforeCentering: [{ type: Output }],\n    _afterLeavingCenter: [{ type: Output }],\n    _onCentered: [{ type: Output }],\n    _content: [{ type: Input, args: ['content',] }],\n    origin: [{ type: Input }],\n    animationDuration: [{ type: Input }],\n    position: [{ type: Input }]\n};\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\nclass MatTabBody extends _MatTabBodyBase {\n    constructor(elementRef, dir, changeDetectorRef) {\n        super(elementRef, dir, changeDetectorRef);\n    }\n}\nMatTabBody.decorators = [\n    { type: Component, args: [{\n                selector: 'mat-tab-body',\n                template: \"<div class=\\\"mat-tab-body-content\\\" #content\\n     [@translateTab]=\\\"{\\n        value: _position,\\n        params: {animationDuration: animationDuration}\\n     }\\\"\\n     (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\"\\n     (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\">\\n  <ng-template matTabBodyHost></ng-template>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                animations: [matTabsAnimations.translateTab],\n                host: {\n                    'class': 'mat-tab-body',\n                },\n                styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"]\n            },] }\n];\nMatTabBody.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef }\n];\nMatTabBody.propDecorators = {\n    _portalHost: [{ type: ViewChild, args: [PortalHostDirective,] }]\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to provide the default options the tabs module. */\nconst MAT_TABS_CONFIG = new InjectionToken('MAT_TABS_CONFIG');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n/** A simple change event emitted on focus or selection changes. */\nclass MatTabChangeEvent {\n}\n// Boilerplate for applying mixins to MatTabGroup.\n/** @docs-private */\nclass MatTabGroupMixinBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatTabGroupMixinBase = mixinColor(mixinDisableRipple(MatTabGroupMixinBase), 'primary');\n/**\n * Base class with all of the `MatTabGroupBase` functionality.\n * @docs-private\n */\nclass _MatTabGroupBase extends _MatTabGroupMixinBase {\n    constructor(elementRef, _changeDetectorRef, defaultConfig, _animationMode) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /** All of the tabs that belong to the group. */\n        this._tabs = new QueryList();\n        /** The tab index that should be selected after the content has been checked. */\n        this._indexToSelect = 0;\n        /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n        this._tabBodyWrapperHeight = 0;\n        /** Subscription to tabs being added/removed. */\n        this._tabsSubscription = Subscription.EMPTY;\n        /** Subscription to changes in the tab labels. */\n        this._tabLabelSubscription = Subscription.EMPTY;\n        this._dynamicHeight = false;\n        this._selectedIndex = null;\n        /** Position of the tab header. */\n        this.headerPosition = 'above';\n        /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n        this.selectedIndexChange = new EventEmitter();\n        /** Event emitted when focus has changed within a tab group. */\n        this.focusChange = new EventEmitter();\n        /** Event emitted when the body animation has completed */\n        this.animationDone = new EventEmitter();\n        /** Event emitted when the tab selection has changed. */\n        this.selectedTabChange = new EventEmitter(true);\n        this._groupId = nextId++;\n        this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n            defaultConfig.animationDuration : '500ms';\n        this.disablePagination = defaultConfig && defaultConfig.disablePagination != null ?\n            defaultConfig.disablePagination : false;\n    }\n    /** Whether the tab group should grow to the size of the active tab. */\n    get dynamicHeight() { return this._dynamicHeight; }\n    set dynamicHeight(value) { this._dynamicHeight = coerceBooleanProperty(value); }\n    /** The index of the active tab. */\n    get selectedIndex() { return this._selectedIndex; }\n    set selectedIndex(value) {\n        this._indexToSelect = coerceNumberProperty(value, null);\n    }\n    /** Duration for the tab animation. Will be normalized to milliseconds if no units are set. */\n    get animationDuration() { return this._animationDuration; }\n    set animationDuration(value) {\n        this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n    }\n    /** Background color of the tab group. */\n    get backgroundColor() { return this._backgroundColor; }\n    set backgroundColor(value) {\n        const nativeElement = this._elementRef.nativeElement;\n        nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            nativeElement.classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     */\n    ngAfterContentChecked() {\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex != indexToSelect) {\n            const isFirstRun = this._selectedIndex == null;\n            if (!isFirstRun) {\n                this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n            }\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then(() => {\n                this._tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n                if (!isFirstRun) {\n                    this.selectedIndexChange.emit(indexToSelect);\n                }\n            });\n        }\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this._tabs.forEach((tab, index) => {\n            tab.position = index - indexToSelect;\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n                tab.origin = indexToSelect - this._selectedIndex;\n            }\n        });\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    ngAfterContentInit() {\n        this._subscribeToAllTabChanges();\n        this._subscribeToTabLabels();\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this._tabsSubscription = this._tabs.changes.subscribe(() => {\n            const indexToSelect = this._clampTabIndex(this._indexToSelect);\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === this._selectedIndex) {\n                const tabs = this._tabs.toArray();\n                for (let i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        this._indexToSelect = this._selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    /** Listens to changes in all of the tabs. */\n    _subscribeToAllTabChanges() {\n        // Since we use a query with `descendants: true` to pick up the tabs, we may end up catching\n        // some that are inside of nested tab groups. We filter them out manually by checking that\n        // the closest group to the tab is the current one.\n        this._allTabs.changes\n            .pipe(startWith(this._allTabs))\n            .subscribe((tabs) => {\n            this._tabs.reset(tabs.filter(tab => {\n                // @breaking-change 10.0.0 Remove null check for `_closestTabGroup`\n                // once it becomes a required parameter in MatTab.\n                return !tab._closestTabGroup || tab._closestTabGroup === this;\n            }));\n            this._tabs.notifyOnChanges();\n        });\n    }\n    ngOnDestroy() {\n        this._tabs.destroy();\n        this._tabsSubscription.unsubscribe();\n        this._tabLabelSubscription.unsubscribe();\n    }\n    /** Re-aligns the ink bar to the selected tab element. */\n    realignInkBar() {\n        if (this._tabHeader) {\n            this._tabHeader._alignInkBarToSelectedTab();\n        }\n    }\n    _focusChanged(index) {\n        this.focusChange.emit(this._createChangeEvent(index));\n    }\n    _createChangeEvent(index) {\n        const event = new MatTabChangeEvent;\n        event.index = index;\n        if (this._tabs && this._tabs.length) {\n            event.tab = this._tabs.toArray()[index];\n        }\n        return event;\n    }\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     */\n    _subscribeToTabLabels() {\n        if (this._tabLabelSubscription) {\n            this._tabLabelSubscription.unsubscribe();\n        }\n        this._tabLabelSubscription = merge(...this._tabs.map(tab => tab._stateChanges))\n            .subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n    /** Clamps the given index to the bounds of 0 and the tabs length. */\n    _clampTabIndex(index) {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Math.max(NaN, 0) === NaN).\n        return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n    }\n    /** Returns a unique id for each tab label element */\n    _getTabLabelId(i) {\n        return `mat-tab-label-${this._groupId}-${i}`;\n    }\n    /** Returns a unique id for each tab content element */\n    _getTabContentId(i) {\n        return `mat-tab-content-${this._groupId}-${i}`;\n    }\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     */\n    _setTabBodyWrapperHeight(tabHeight) {\n        if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\n            return;\n        }\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = tabHeight + 'px';\n        }\n    }\n    /** Removes the height of the tab body wrapper. */\n    _removeTabBodyWrapperHeight() {\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        this._tabBodyWrapperHeight = wrapper.clientHeight;\n        wrapper.style.height = '';\n        this.animationDone.emit();\n    }\n    /** Handle click events, setting new selected index if appropriate. */\n    _handleClick(tab, tabHeader, index) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    }\n    /** Retrieves the tabindex for the tab. */\n    _getTabIndex(tab, idx) {\n        if (tab.disabled) {\n            return null;\n        }\n        return this.selectedIndex === idx ? 0 : -1;\n    }\n}\n_MatTabGroupBase.decorators = [\n    { type: Directive }\n];\n_MatTabGroupBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabGroupBase.propDecorators = {\n    dynamicHeight: [{ type: Input }],\n    selectedIndex: [{ type: Input }],\n    headerPosition: [{ type: Input }],\n    animationDuration: [{ type: Input }],\n    disablePagination: [{ type: Input }],\n    backgroundColor: [{ type: Input }],\n    selectedIndexChange: [{ type: Output }],\n    focusChange: [{ type: Output }],\n    animationDone: [{ type: Output }],\n    selectedTabChange: [{ type: Output }]\n};\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\nclass MatTabGroup extends _MatTabGroupBase {\n    constructor(elementRef, changeDetectorRef, defaultConfig, animationMode) {\n        super(elementRef, changeDetectorRef, defaultConfig, animationMode);\n    }\n}\nMatTabGroup.decorators = [\n    { type: Component, args: [{\n                selector: 'mat-tab-group',\n                exportAs: 'matTabGroup',\n                template: \"<mat-tab-header #tabHeader\\n               [selectedIndex]=\\\"selectedIndex || 0\\\"\\n               [disableRipple]=\\\"disableRipple\\\"\\n               [disablePagination]=\\\"disablePagination\\\"\\n               (indexFocused)=\\\"_focusChanged($event)\\\"\\n               (selectFocusedIndex)=\\\"selectedIndex = $event\\\">\\n  <div class=\\\"mat-tab-label mat-focus-indicator\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple cdkMonitorElementFocus\\n       *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n       [id]=\\\"_getTabLabelId(i)\\\"\\n       [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\"\\n       [attr.aria-posinset]=\\\"i + 1\\\"\\n       [attr.aria-setsize]=\\\"_tabs.length\\\"\\n       [attr.aria-controls]=\\\"_getTabContentId(i)\\\"\\n       [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n       [attr.aria-label]=\\\"tab.ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\"\\n       [class.mat-tab-label-active]=\\\"selectedIndex == i\\\"\\n       [disabled]=\\\"tab.disabled\\\"\\n       [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\"\\n       (click)=\\\"_handleClick(tab, tabHeader, i)\\\">\\n\\n\\n    <div class=\\\"mat-tab-label-content\\\">\\n      <!-- If there is a label template, use it. -->\\n      <ng-template [ngIf]=\\\"tab.templateLabel\\\">\\n        <ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template>\\n      </ng-template>\\n\\n      <!-- If there is not a label template, fall back to the text label. -->\\n      <ng-template [ngIf]=\\\"!tab.templateLabel\\\">{{tab.textLabel}}</ng-template>\\n    </div>\\n  </div>\\n</mat-tab-header>\\n\\n<div\\n  class=\\\"mat-tab-body-wrapper\\\"\\n  [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n  #tabBodyWrapper>\\n  <mat-tab-body role=\\\"tabpanel\\\"\\n               *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n               [id]=\\\"_getTabContentId(i)\\\"\\n               [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\"\\n               [class.mat-tab-body-active]=\\\"selectedIndex == i\\\"\\n               [content]=\\\"tab.content!\\\"\\n               [position]=\\\"tab.position!\\\"\\n               [origin]=\\\"tab.origin\\\"\\n               [animationDuration]=\\\"animationDuration\\\"\\n               (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\"\\n               (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\">\\n  </mat-tab-body>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                inputs: ['color', 'disableRipple'],\n                providers: [{\n                        provide: MAT_TAB_GROUP,\n                        useExisting: MatTabGroup\n                    }],\n                host: {\n                    'class': 'mat-tab-group',\n                    '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n                    '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"',\n                },\n                styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"]\n            },] }\n];\nMatTabGroup.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabGroup.propDecorators = {\n    _allTabs: [{ type: ContentChildren, args: [MatTab, { descendants: true },] }],\n    _tabBodyWrapper: [{ type: ViewChild, args: ['tabBodyWrapper',] }],\n    _tabHeader: [{ type: ViewChild, args: ['tabHeader',] }]\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/** @docs-private */\nclass MatTabLabelWrapperBase {\n}\nconst _MatTabLabelWrapperMixinBase = mixinDisabled(MatTabLabelWrapperBase);\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * @docs-private\n */\nclass MatTabLabelWrapper extends _MatTabLabelWrapperMixinBase {\n    constructor(elementRef) {\n        super();\n        this.elementRef = elementRef;\n    }\n    /** Sets focus on the wrapper element */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    getOffsetLeft() {\n        return this.elementRef.nativeElement.offsetLeft;\n    }\n    getOffsetWidth() {\n        return this.elementRef.nativeElement.offsetWidth;\n    }\n}\nMatTabLabelWrapper.decorators = [\n    { type: Directive, args: [{\n                selector: '[matTabLabelWrapper]',\n                inputs: ['disabled'],\n                host: {\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[attr.aria-disabled]': '!!disabled',\n                }\n            },] }\n];\nMatTabLabelWrapper.ctorParameters = () => [\n    { type: ElementRef }\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Config used to bind passive event listeners */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n */\nconst HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n */\nconst HEADER_SCROLL_INTERVAL = 100;\n/**\n * Base class for a tab header that supported pagination.\n * @docs-private\n */\nclass MatPaginatedTabHeader {\n    constructor(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone, \n    /**\n     * @deprecated @breaking-change 9.0.0 `_platform` and `_animationMode`\n     * parameters to become required.\n     */\n    _platform, _animationMode) {\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._viewportRuler = _viewportRuler;\n        this._dir = _dir;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._animationMode = _animationMode;\n        /** The distance in pixels that the tab labels should be translated to the left. */\n        this._scrollDistance = 0;\n        /** Whether the header should scroll to the selected index after the view has been checked. */\n        this._selectedIndexChanged = false;\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Whether the controls for pagination should be displayed */\n        this._showPaginationControls = false;\n        /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n        this._disableScrollAfter = true;\n        /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n        this._disableScrollBefore = true;\n        /** Stream that will stop the automated scrolling. */\n        this._stopScrolling = new Subject();\n        /**\n         * Whether pagination should be disabled. This can be used to avoid unnecessary\n         * layout recalculations if it's known that pagination won't be required.\n         */\n        this.disablePagination = false;\n        this._selectedIndex = 0;\n        /** Event emitted when the option is selected. */\n        this.selectFocusedIndex = new EventEmitter();\n        /** Event emitted when a label is focused. */\n        this.indexFocused = new EventEmitter();\n        // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n        _ngZone.runOutsideAngular(() => {\n            fromEvent(_elementRef.nativeElement, 'mouseleave')\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(() => {\n                this._stopInterval();\n            });\n        });\n    }\n    /** The index of the active tab. */\n    get selectedIndex() { return this._selectedIndex; }\n    set selectedIndex(value) {\n        value = coerceNumberProperty(value);\n        if (this._selectedIndex != value) {\n            this._selectedIndexChanged = true;\n            this._selectedIndex = value;\n            if (this._keyManager) {\n                this._keyManager.updateActiveItem(value);\n            }\n        }\n    }\n    ngAfterViewInit() {\n        // We need to handle these events manually, because we want to bind passive event listeners.\n        fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            this._handlePaginatorPress('before');\n        });\n        fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            this._handlePaginatorPress('after');\n        });\n    }\n    ngAfterContentInit() {\n        const dirChange = this._dir ? this._dir.change : of(null);\n        const resize = this._viewportRuler.change(150);\n        const realign = () => {\n            this.updatePagination();\n            this._alignInkBarToSelectedTab();\n        };\n        this._keyManager = new FocusKeyManager(this._items)\n            .withHorizontalOrientation(this._getLayoutDirection())\n            .withHomeAndEnd()\n            .withWrap();\n        this._keyManager.updateActiveItem(this._selectedIndex);\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign();\n        // On dir change or window resize, realign the ink bar and update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize, this._items.changes).pipe(takeUntil(this._destroyed)).subscribe(() => {\n            // We need to defer this to give the browser some time to recalculate the element dimensions.\n            Promise.resolve().then(realign);\n            this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n        });\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe(newFocusIndex => {\n            this.indexFocused.emit(newFocusIndex);\n            this._setTabFocus(newFocusIndex);\n        });\n    }\n    ngAfterContentChecked() {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this._tabLabelCount != this._items.length) {\n            this.updatePagination();\n            this._tabLabelCount = this._items.length;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this._selectedIndexChanged) {\n            this._scrollToLabel(this._selectedIndex);\n            this._checkScrollingControls();\n            this._alignInkBarToSelectedTab();\n            this._selectedIndexChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this._scrollDistanceChanged) {\n            this._updateTabScrollPosition();\n            this._scrollDistanceChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._stopScrolling.complete();\n    }\n    /** Handles keyboard events on the header. */\n    _handleKeydown(event) {\n        // We don't handle any key bindings with a modifier key.\n        if (hasModifierKey(event)) {\n            return;\n        }\n        switch (event.keyCode) {\n            case ENTER:\n            case SPACE:\n                if (this.focusIndex !== this.selectedIndex) {\n                    this.selectFocusedIndex.emit(this.focusIndex);\n                    this._itemSelected(event);\n                }\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     */\n    _onContentChanges() {\n        const textContent = this._elementRef.nativeElement.textContent;\n        // We need to diff the text content of the header, because the MutationObserver callback\n        // will fire even if the text content didn't change which is inefficient and is prone\n        // to infinite loops if a poorly constructed expression is passed in (see #14249).\n        if (textContent !== this._currentTextContent) {\n            this._currentTextContent = textContent || '';\n            // The content observer runs outside the `NgZone` by default, which\n            // means that we need to bring the callback back in ourselves.\n            this._ngZone.run(() => {\n                this.updatePagination();\n                this._alignInkBarToSelectedTab();\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /**\n     * Updates the view whether pagination should be enabled or not.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance. It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     */\n    updatePagination() {\n        this._checkPaginationEnabled();\n        this._checkScrollingControls();\n        this._updateTabScrollPosition();\n    }\n    /** Tracks which element has focus; used for keyboard navigation */\n    get focusIndex() {\n        return this._keyManager ? this._keyManager.activeItemIndex : 0;\n    }\n    /** When the focus index is set, we must manually send focus to the correct label */\n    set focusIndex(value) {\n        if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n            return;\n        }\n        this._keyManager.setActiveItem(value);\n    }\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     */\n    _isValidIndex(index) {\n        if (!this._items) {\n            return true;\n        }\n        const tab = this._items ? this._items.toArray()[index] : null;\n        return !!tab && !tab.disabled;\n    }\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     */\n    _setTabFocus(tabIndex) {\n        if (this._showPaginationControls) {\n            this._scrollToLabel(tabIndex);\n        }\n        if (this._items && this._items.length) {\n            this._items.toArray()[tabIndex].focus();\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            const containerEl = this._tabListContainer.nativeElement;\n            const dir = this._getLayoutDirection();\n            if (dir == 'ltr') {\n                containerEl.scrollLeft = 0;\n            }\n            else {\n                containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    }\n    /** The layout direction of the containing app. */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n    _updateTabScrollPosition() {\n        if (this.disablePagination) {\n            return;\n        }\n        const scrollDistance = this.scrollDistance;\n        const platform = this._platform;\n        const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n        // and ripples will exceed the boundaries of the visible tab bar.\n        // See: https://github.com/angular/components/issues/10276\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\n        // browsers to blur the content of the element.\n        this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n        // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n        // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n        // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n        // @breaking-change 9.0.0 Remove null check for `platform` after it can no longer be undefined.\n        if (platform && (platform.TRIDENT || platform.EDGE)) {\n            this._tabListContainer.nativeElement.scrollLeft = 0;\n        }\n    }\n    /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n    get scrollDistance() { return this._scrollDistance; }\n    set scrollDistance(value) {\n        this._scrollTo(value);\n    }\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _scrollHeader(direction) {\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        const scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n        return this._scrollTo(this._scrollDistance + scrollAmount);\n    }\n    /** Handles click events on the pagination arrows. */\n    _handlePaginatorClick(direction) {\n        this._stopInterval();\n        this._scrollHeader(direction);\n    }\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _scrollToLabel(labelIndex) {\n        if (this.disablePagination) {\n            return;\n        }\n        const selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n        if (!selectedLabel) {\n            return;\n        }\n        // The view length is the visible width of the tab labels.\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        const { offsetLeft, offsetWidth } = selectedLabel.elementRef.nativeElement;\n        let labelBeforePos, labelAfterPos;\n        if (this._getLayoutDirection() == 'ltr') {\n            labelBeforePos = offsetLeft;\n            labelAfterPos = labelBeforePos + offsetWidth;\n        }\n        else {\n            labelAfterPos = this._tabList.nativeElement.offsetWidth - offsetLeft;\n            labelBeforePos = labelAfterPos - offsetWidth;\n        }\n        const beforeVisiblePos = this.scrollDistance;\n        const afterVisiblePos = this.scrollDistance + viewLength;\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        }\n        else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    }\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _checkPaginationEnabled() {\n        if (this.disablePagination) {\n            this._showPaginationControls = false;\n        }\n        else {\n            const isEnabled = this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n            if (!isEnabled) {\n                this.scrollDistance = 0;\n            }\n            if (isEnabled !== this._showPaginationControls) {\n                this._changeDetectorRef.markForCheck();\n            }\n            this._showPaginationControls = isEnabled;\n        }\n    }\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _checkScrollingControls() {\n        if (this.disablePagination) {\n            this._disableScrollAfter = this._disableScrollBefore = true;\n        }\n        else {\n            // Check if the pagination arrows should be activated.\n            this._disableScrollBefore = this.scrollDistance == 0;\n            this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _getMaxScrollDistance() {\n        const lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        return (lengthOfTabList - viewLength) || 0;\n    }\n    /** Tells the ink-bar to align itself to the current label wrapper */\n    _alignInkBarToSelectedTab() {\n        const selectedItem = this._items && this._items.length ?\n            this._items.toArray()[this.selectedIndex] : null;\n        const selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n        if (selectedLabelWrapper) {\n            this._inkBar.alignToElement(selectedLabelWrapper);\n        }\n        else {\n            this._inkBar.hide();\n        }\n    }\n    /** Stops the currently-running paginator interval.  */\n    _stopInterval() {\n        this._stopScrolling.next();\n    }\n    /**\n     * Handles the user pressing down on one of the paginators.\n     * Starts scrolling the header after a certain amount of time.\n     * @param direction In which direction the paginator should be scrolled.\n     */\n    _handlePaginatorPress(direction, mouseEvent) {\n        // Don't start auto scrolling for right mouse button clicks. Note that we shouldn't have to\n        // null check the `button`, but we do it so we don't break tests that use fake events.\n        if (mouseEvent && mouseEvent.button != null && mouseEvent.button !== 0) {\n            return;\n        }\n        // Avoid overlapping timers.\n        this._stopInterval();\n        // Start a timer after the delay and keep firing based on the interval.\n        timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n            // Keep the timer going until something tells it to stop or the component is destroyed.\n            .pipe(takeUntil(merge(this._stopScrolling, this._destroyed)))\n            .subscribe(() => {\n            const { maxScrollDistance, distance } = this._scrollHeader(direction);\n            // Stop the timer if we've reached the start or the end.\n            if (distance === 0 || distance >= maxScrollDistance) {\n                this._stopInterval();\n            }\n        });\n    }\n    /**\n     * Scrolls the header to a given position.\n     * @param position Position to which to scroll.\n     * @returns Information on the current scroll distance and the maximum.\n     */\n    _scrollTo(position) {\n        if (this.disablePagination) {\n            return { maxScrollDistance: 0, distance: 0 };\n        }\n        const maxScrollDistance = this._getMaxScrollDistance();\n        this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this._scrollDistanceChanged = true;\n        this._checkScrollingControls();\n        return { maxScrollDistance, distance: this._scrollDistance };\n    }\n}\nMatPaginatedTabHeader.decorators = [\n    { type: Directive }\n];\nMatPaginatedTabHeader.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatPaginatedTabHeader.propDecorators = {\n    disablePagination: [{ type: Input }]\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class with all of the `MatTabHeader` functionality.\n * @docs-private\n */\nclass _MatTabHeaderBase extends MatPaginatedTabHeader {\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, \n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n    }\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() { return this._disableRipple; }\n    set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    _itemSelected(event) {\n        event.preventDefault();\n    }\n}\n_MatTabHeaderBase.decorators = [\n    { type: Directive }\n];\n_MatTabHeaderBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabHeaderBase.propDecorators = {\n    disableRipple: [{ type: Input }]\n};\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\nclass MatTabHeader extends _MatTabHeaderBase {\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, \n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n    }\n}\nMatTabHeader.decorators = [\n    { type: Component, args: [{\n                selector: 'mat-tab-header',\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    #tabList\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    role=\\\"tablist\\\"\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-labels\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n                inputs: ['selectedIndex'],\n                outputs: ['selectFocusedIndex', 'indexFocused'],\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                host: {\n                    'class': 'mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                },\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"]\n            },] }\n];\nMatTabHeader.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabHeader.propDecorators = {\n    _items: [{ type: ContentChildren, args: [MatTabLabelWrapper, { descendants: false },] }],\n    _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n    _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n    _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n    _nextPaginator: [{ type: ViewChild, args: ['nextPaginator',] }],\n    _previousPaginator: [{ type: ViewChild, args: ['previousPaginator',] }]\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class with all of the `MatTabNav` functionality.\n * @docs-private\n */\nclass _MatTabNavBase extends MatPaginatedTabHeader {\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, \n    /**\n     * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n     */\n    platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n        /** Theme color of the nav bar. */\n        this.color = 'primary';\n    }\n    /** Background color of the tab nav. */\n    get backgroundColor() { return this._backgroundColor; }\n    set backgroundColor(value) {\n        const classList = this._elementRef.nativeElement.classList;\n        classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() { return this._disableRipple; }\n    set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    _itemSelected() {\n        // noop\n    }\n    ngAfterContentInit() {\n        // We need this to run before the `changes` subscription in parent to ensure that the\n        // selectedIndex is up-to-date by the time the super class starts looking for it.\n        this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n            this.updateActiveLink();\n        });\n        super.ngAfterContentInit();\n    }\n    /**\n     * Notifies the component that the active link has been changed.\n     * @breaking-change 8.0.0 `element` parameter to be removed.\n     */\n    updateActiveLink(_element) {\n        if (!this._items) {\n            return;\n        }\n        const items = this._items.toArray();\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].active) {\n                this.selectedIndex = i;\n                this._changeDetectorRef.markForCheck();\n                return;\n            }\n        }\n        // The ink bar should hide itself if no items are active.\n        this.selectedIndex = -1;\n        this._inkBar.hide();\n    }\n}\n_MatTabNavBase.decorators = [\n    { type: Directive }\n];\n_MatTabNavBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabNavBase.propDecorators = {\n    backgroundColor: [{ type: Input }],\n    disableRipple: [{ type: Input }],\n    color: [{ type: Input }]\n};\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nclass MatTabNav extends _MatTabNavBase {\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, \n    /**\n     * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n     */\n    platform, animationMode) {\n        super(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode);\n    }\n}\nMatTabNav.decorators = [\n    { type: Component, args: [{\n                selector: '[mat-tab-nav-bar]',\n                exportAs: 'matTabNavBar, matTabNav',\n                inputs: ['color'],\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    #tabList\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-links\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n                host: {\n                    'class': 'mat-tab-nav-bar mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                    '[class.mat-primary]': 'color !== \"warn\" && color !== \"accent\"',\n                    '[class.mat-accent]': 'color === \"accent\"',\n                    '[class.mat-warn]': 'color === \"warn\"',\n                },\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"]\n            },] }\n];\nMatTabNav.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabNav.propDecorators = {\n    _items: [{ type: ContentChildren, args: [forwardRef(() => MatTabLink), { descendants: true },] }],\n    _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n    _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n    _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n    _nextPaginator: [{ type: ViewChild, args: ['nextPaginator',] }],\n    _previousPaginator: [{ type: ViewChild, args: ['previousPaginator',] }]\n};\n// Boilerplate for applying mixins to MatTabLink.\nclass MatTabLinkMixinBase {\n}\nconst _MatTabLinkMixinBase = mixinTabIndex(mixinDisableRipple(mixinDisabled(MatTabLinkMixinBase)));\n/** Base class with all of the `MatTabLink` functionality. */\nclass _MatTabLinkBase extends _MatTabLinkMixinBase {\n    constructor(_tabNavBar, \n    /** @docs-private */ elementRef, globalRippleOptions, tabIndex, _focusMonitor, animationMode) {\n        super();\n        this._tabNavBar = _tabNavBar;\n        this.elementRef = elementRef;\n        this._focusMonitor = _focusMonitor;\n        /** Whether the tab link is active or not. */\n        this._isActive = false;\n        this.rippleConfig = globalRippleOptions || {};\n        this.tabIndex = parseInt(tabIndex) || 0;\n        if (animationMode === 'NoopAnimations') {\n            this.rippleConfig.animation = { enterDuration: 0, exitDuration: 0 };\n        }\n    }\n    /** Whether the link is active. */\n    get active() { return this._isActive; }\n    set active(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._isActive) {\n            this._isActive = value;\n            this._tabNavBar.updateActiveLink(this.elementRef);\n        }\n    }\n    /**\n     * Whether ripples are disabled on interaction.\n     * @docs-private\n     */\n    get rippleDisabled() {\n        return this.disabled || this.disableRipple || this._tabNavBar.disableRipple ||\n            !!this.rippleConfig.disabled;\n    }\n    /** Focuses the tab link. */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this.elementRef);\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef);\n    }\n}\n_MatTabLinkBase.decorators = [\n    { type: Directive }\n];\n_MatTabLinkBase.ctorParameters = () => [\n    { type: _MatTabNavBase },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabLinkBase.propDecorators = {\n    active: [{ type: Input }]\n};\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\nclass MatTabLink extends _MatTabLinkBase {\n    constructor(tabNavBar, elementRef, ngZone, platform, globalRippleOptions, tabIndex, focusMonitor, animationMode) {\n        super(tabNavBar, elementRef, globalRippleOptions, tabIndex, focusMonitor, animationMode);\n        this._tabLinkRipple = new RippleRenderer(this, ngZone, elementRef, platform);\n        this._tabLinkRipple.setupTriggerEvents(elementRef.nativeElement);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._tabLinkRipple._removeTriggerEvents();\n    }\n}\nMatTabLink.decorators = [\n    { type: Directive, args: [{\n                selector: '[mat-tab-link], [matTabLink]',\n                exportAs: 'matTabLink',\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                host: {\n                    'class': 'mat-tab-link mat-focus-indicator',\n                    '[attr.aria-current]': 'active ? \"page\" : null',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.tabIndex]': 'tabIndex',\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[class.mat-tab-label-active]': 'active',\n                }\n            },] }\n];\nMatTabLink.ctorParameters = () => [\n    { type: MatTabNav },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatTabsModule {\n}\nMatTabsModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    PortalModule,\n                    MatRippleModule,\n                    ObserversModule,\n                    A11yModule,\n                ],\n                // Don't export all components because some are only to be used internally.\n                exports: [\n                    MatCommonModule,\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabContent,\n                ],\n                declarations: [\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatInkBar,\n                    MatTabLabelWrapper,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabBody,\n                    MatTabBodyPortal,\n                    MatTabHeader,\n                    MatTabContent,\n                ],\n            },] }\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TABS_CONFIG, MAT_TAB_GROUP, MatInkBar, MatTab, MatTabBody, MatTabBodyPortal, MatTabChangeEvent, MatTabContent, MatTabGroup, MatTabHeader, MatTabLabel, MatTabLabelWrapper, MatTabLink, MatTabNav, MatTabsModule, _MAT_INK_BAR_POSITIONER, _MatTabBodyBase, _MatTabGroupBase, _MatTabHeaderBase, _MatTabLinkBase, _MatTabNavBase, matTabsAnimations, _MAT_INK_BAR_POSITIONER_FACTORY as ɵangular_material_src_material_tabs_tabs_a, MAT_TAB_LABEL as ɵangular_material_src_material_tabs_tabs_b, MAT_TAB_CONTENT as ɵangular_material_src_material_tabs_tabs_c, MatPaginatedTabHeader as ɵangular_material_src_material_tabs_tabs_d };\n//# sourceMappingURL=tabs.js.map\n"]}